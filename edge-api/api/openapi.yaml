openapi: 3.0.1
info:
  contact:
    email: help@openziti.org
    name: OpenZiti
    url: https://openziti.discourse.group
  description: OpenZiti Edge Client API
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  title: Ziti Edge Client
  version: 0.26.42
servers:
- url: https://demo.ziti.dev/edge/client/v1
paths:
  /:
    get:
      operationId: listRoot
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listVersionEnvelope"
          description: Version information for the controller
      security: []
      summary: Returns version information
      tags:
      - Informational
      x-accepts:
      - application/json
  /.well-known/est/cacerts:
    get:
      description: |
        This endpoint is used during enrollments to bootstrap trust between enrolling clients and the Ziti Edge API.
        This endpoint returns a base64 encoded PKCS7 store. The content can be base64 decoded and parsed by any library
        that supports parsing PKCS7 stores.
      operationId: listWellKnownCas
      responses:
        "200":
          content:
            application/pkcs7-mime:
              schema:
                example: |
                  MIIMUQYJKoZIhvcNAQcCoIIMQjCCDD4CAQExADALBgkqhkiG9w0BBwGgggwkMIIG
                  BjCCA+6gAwIBAgICEAAwDQYJKoZIhvcNAQELBQAwgZcxCzAJBgNVBAYTAlVTMRcw
                  FQYDVQQIDA5Ob3J0aCBDYXJvbGluYTESMBAGA1UEBwwJQ2hhcmxvdHRlMRMwEQYD
                  VQQKDApOZXRGb3VuZHJ5MSkwJwYDVQQLDCBOZXRGb3VuZHJ5IENlcnRpZmljYXRl
                  IEF1dGhvcml0eTEbMBkGA1UEAwwSTmV0Rm91bmRyeSBSb290IENBMB4XDTE4MDUx
                  ODE2NTcyM1oXDTI4MDUxNTE2NTcyM1owgYsxCzAJBgNVBAYTAlVTMRcwFQYDVQQI
                  DA5Ob3J0aCBDYXJvbGluYTETMBEGA1UECgwKTmV0Rm91bmRyeTEpMCcGA1UECwwg
                  TmV0Rm91bmRyeSBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkxIzAhBgNVBAMMGk5ldEZv
                  dW5kcnkgSW50ZXJtZWRpYXRlIENBMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIIC
                  CgKCAgEAsb1EPhMUweS9WpjT7L54xAOmZqugJ6fhSrFfLUwNUy172q+ASvZTpT1z
                  KIPcZpGmPB3TX2bHaAR67BbRkUR11JgWE3U8+FsGrYmPZtaKM6fg8Mh0WZ41oMYQ
                  NJyQixOktrgqfybyJoT5PeT5AA7QQmd8mku2X9nkAu6gWPf2nHNc7SeQdijmyQQa
                  VK3oqyaxOzWzsU/XbfMEz/ObkefUxgt5Z6jlK0xcW0Q+QgtawMKLUiuo6obWRPcl
                  7Hm9Sze8XJS5pbvS5JkUszxoRZuDVHZylrlHIpA/IL+BnvS+M7SP28UWe9skrv/s
                  6ACpJtuPJ1EYf5fakugOpY7i+hq7YNi//csbc49Qjn2OtttrR7JcTaHUEU1I/tQb
                  QGAtNkI4pJjRVUdDawQFQlWHZD1COixNLErs2HzAI00DhLrY6SKITI/kjN0Xx010
                  XdMcdfay0PLWm6RwxiRmMQFL4GNIC895NF1q6xV4W4rWgqUNlcvKpy+i1chWpRbU
                  He16ul0qh10fcESrRvAbXn5YrQJLrwbSr+85ubN8lYdNLE0qg2cIXZlUilarZZzW
                  ghtCe+KkUpjfRuAi/CqfSwNK3QXEfeVEK6S49mHeSekOizFIw7fmDhCz9vXwMOnb
                  ryRSLEJks0gIRcSDVChXheAqC98y4kcQdniNWFnqJXoqA+rrSokCAwEAAaNmMGQw
                  HQYDVR0OBBYEFK8UXC/sq6dGVFAqEXHsQDzqzwuUMB8GA1UdIwQYMBaAFEHz6RRu
                  OuXj2mwAzOeUinfWeivpMBIGA1UdEwEB/wQIMAYBAf8CAQAwDgYDVR0PAQH/BAQD
                  AgGGMA0GCSqGSIb3DQEBCwUAA4ICAQBDAAaOE2Nbb49eOjyTNxIeOB+ZKQjJ1hUE
                  gRrootAA8NYbtKW/vyxTWnNi5XOGXd4DFS9OKZ0mL/7NyLc0mbTwPH2ZT8KTPUTS
                  Cpo6yktZ/7TMjyAtWZiOMg2EH+6m/nlNSXk/v5fb8+JQLdZfpxoA017dHh3tc8l7
                  KOskCZNwQHgF/YMXrPXUNbsGkXRuJLtpjPw5O9GvPys7p+a1aJH1WCTly9zfB6j+
                  rMF+UGCPDT30sxitVlohik83j6pKLgEAP/gi8nJbILlTP7ce+gJeHR2tfDvmK91X
                  6QgCF2STUFBU7/9H1/pPRRykOxQpAd8xqSgqGEyp9Ie4tysZjwoUEnG8IVJ5ykrI
                  Fximvnb4B+LABV9WEo08n8m1R8wEryrISi8fBPn3Pr5nuayOfFLa15CLTkZF40FN
                  8ika1qNZy8bWRDwTZJQUUb7VCheRWcMwdZdNmhl3J+VZLpQ+ruW7b2ajwacHz5Nw
                  BHKNcmxXb/4vHq/BnlcayHnSqT6036+OZQ+owDegcYmWV6LaM7xLErjHz2EE38M2
                  YSiW5SU1zluDe+iHb6l3Gd3Fj/X1gkMWFgYh0XPMSUSyimLNYzy4THKzmWlcQNFo
                  LLiIDbLrMt+vk+vBkIsNTTPXRJOFPBhmIF6uIUj+2YhzNotX/pQtqMKms3pPlmHq
                  dH6biwygETCCBhYwggP+oAMCAQICCQDquKpymLJ5WzANBgkqhkiG9w0BAQsFADCB
                  lzELMAkGA1UEBhMCVVMxFzAVBgNVBAgMDk5vcnRoIENhcm9saW5hMRIwEAYDVQQH
                  DAlDaGFybG90dGUxEzARBgNVBAoMCk5ldEZvdW5kcnkxKTAnBgNVBAsMIE5ldEZv
                  dW5kcnkgQ2VydGlmaWNhdGUgQXV0aG9yaXR5MRswGQYDVQQDDBJOZXRGb3VuZHJ5
                  IFJvb3QgQ0EwHhcNMTgwNTE4MTY1NDQ3WhcNMzgwNTEzMTY1NDQ3WjCBlzELMAkG
                  A1UEBhMCVVMxFzAVBgNVBAgMDk5vcnRoIENhcm9saW5hMRIwEAYDVQQHDAlDaGFy
                  bG90dGUxEzARBgNVBAoMCk5ldEZvdW5kcnkxKTAnBgNVBAsMIE5ldEZvdW5kcnkg
                  Q2VydGlmaWNhdGUgQXV0aG9yaXR5MRswGQYDVQQDDBJOZXRGb3VuZHJ5IFJvb3Qg
                  Q0EwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDKq/Xa+749Cr3WJGYD
                  DIEtNKIRnTFc6TeiRSm/O7hG2+1Nrh/dObjZJuDjsopWP8NFA/DwlNyEphYKAeSw
                  HDmu+4nFd6ifoeDE2lYq6bNhLcgN+A3MlN5Phb2rnO32YYZwHXGWov+jtd2gaK0f
                  WsH8CQxn6n2v7qvPMTeYFP8p4jqTZw2bvZWw+LMYTFCy541DFqQLQasMg10mXRAV
                  XO7Oa9y+D1re1zLq4wS6u8ItJoKzfmvZkMvD90C/tQ4u0iJaL7GB2SE9MOPDeGVv
                  pnoSAIkSVmvRDUAj2x9PuukykzoL1OAWzc5Cg+5LxRmLejVE7PvPcHaTtNag2tRD
                  w2vbMeFKN8NvQH1QYcaPWZe4Vl9b6DAuTaH5RN919H/F+ZHyjZybVPwC14lflneI
                  KyNy8JEV/YMIbEADWnuiedzDehk2Opn+0+9Zr2X/xfjCo8iWHFbNaVnQX7wdRaOo
                  783lEouncqe46FDBLBpyAuDKHQpIT3MK8rkC/1yBNxsH44vMweUZuK0u7PC9KHtm
                  pQfuflYGfxA34kY6WU3jzyQHetoLYjoxTqNEEjuGpwy2o1j7RaCBEFIbYlnlbhpE
                  WFTaQf96z2GQ6m1U3y7JyDflHSu9Fo1JNkG3qXsjDwda/6W7NRJRgdFrhnOwrm7F
                  6L9X4P1HnzU/VJL66LwPmiHVjQIDAQABo2MwYTAdBgNVHQ4EFgQUQfPpFG465ePa
                  bADM55SKd9Z6K+kwHwYDVR0jBBgwFoAUQfPpFG465ePabADM55SKd9Z6K+kwDwYD
                  VR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAYYwDQYJKoZIhvcNAQELBQADggIB
                  ACfU74aKWROaxnue8tZb5PFkEbnDRcRrKXRhnptA0vrgB4ydnYxX9hEBZD8o6PBy
                  3rewvl5meSOBE6zyb4JD80lHdzHSVFIwbzsNOeEjCslv/PA/3Y+J7DCt6gPNMDeY
                  uEssdqeSiMoYz2gnven4flSMKgTAJd3/SpVrn35HzXiU9MkmFVpPEMnTctOjw+Jn
                  cCkG5+D9N14dxtgZ/tUfbH+GUfhyGVxRdPrX5KQqAyapMfEaMXXa8KNs7PG+sDiS
                  WI+Sg9jUGtxgkfKdVNtFW+QMXyy7eT3iXPA+1r2hFAhgfIaGtBJUhxPHMhKtjbAg
                  AX+6+2D3GAbaD1+lcQHhKry3hygQ3OX79FJW6zyPS0tiV/LfovHqX/3x9q5PTVBO
                  wEOS2/LCc4R2M7S+HIPf4eSJ+nH4uCIdJ42WCror/mRsuL7geCksi70GHuCynP4y
                  qQFszu/UtbBEsN8loTnLpOInxaGB1Y8UPm14b2Lo1/3HkoMVh0/UaHJ0TmnZ1r7m
                  fGhfRyAZYRdvT1sB+Eb4b5A2zEZqsTc9IwFOhnI4ZilPoZ5s2xejqrVw3GSvovEh
                  dprrQmvxuh+VQ23y/+/4z9b2xWyDu2zVveB4whqPe2rkgxJrEl4GfLk2DW+dN6j8
                  3Zl4lPoUZYwzkC6raCaHyFlAoaTbqz0H6rvVJYxJPS6UoQAxAA==
                type: string
          description: A base64 encoded PKCS7 store
      security: []
      summary: Get CA Cert Store
      tags:
      - Well Known
      x-accepts:
      - application/pkcs7-mime
  /authenticate:
    post:
      description: |
        Allowed authentication methods include "password", "cert", and "ext-jwt"
      operationId: authenticate
      parameters:
      - in: query
        name: method
        required: true
        schema:
          enum:
          - password
          - cert
          - ext-jwt
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/authenticate"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/currentApiSessionDetailEnvelope"
            default:
              example:
                data:
                  _links:
                    self:
                      href: ./current-api-session
                  configTypes: []
                  createdAt: 2020-03-09T19:03:49.1883693Z
                  expiresAt: 2020-03-09T19:34:21.5600897Z
                  id: 27343114-b44f-406e-9981-f3c4f2f28d54
                  identity:
                    _links:
                      self:
                        href: ./identities/66352d7b-a6b2-4ce9-85bb-9f18e318704d
                    id: 66352d7b-a6b2-4ce9-85bb-9f18e318704d
                    name: Default Admin
                    urlName: identities
                  tags:
                  - userField1: 123
                  - userField2: asdf
                  token: 28bb0ed2-0577-4632-ae70-d17106b92871
                  updatedAt: 2020-03-09T19:04:21.5600897Z
                meta: {}
          description: The API session associated with the session used to issue the
            request
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: INVALID_AUTH
                  message: The authentication request failed
                  requestId: 5952ed10-3091-474f-a691-47ebab6990dc
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The authentication request could not be processed as the credentials
            are invalid
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
      security: []
      summary: Authenticate via a method supplied via a query string parameter
      tags:
      - Authentication
      x-codegen-request-body-name: auth
      x-content-type: application/json
      x-accepts:
      - application/json
      - default
  /authenticate/mfa:
    post:
      description: Completes MFA authentication by submitting a MFA time based one
        time token or backup code.
      operationId: authenticateMfa
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/mfaCode"
        description: An MFA validation request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: Base empty response
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: Base empty response
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Complete MFA authentication
      tags:
      - Authentication
      - MFA
      x-codegen-request-body-name: mfaAuth
      x-content-type: application/json
      x-accepts:
      - application/json
  /controllers:
    get:
      description: Retrieves a list of controllers
      operationId: listControllers
      parameters:
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: filter
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listControllersEnvelope"
          description: A list of controllers
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List controllers
      tags:
      - Controllers
      x-accepts:
      - application/json
  /current-api-session:
    delete:
      description: Terminates the current API session
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: Base empty response
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Logout
      tags:
      - Current API Session
      x-accepts:
      - application/json
    get:
      description: Retrieves the API session that was used to issue the current request
      operationId: getCurrentAPISession
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/currentApiSessionDetailEnvelope"
            default:
              example:
                data:
                  _links:
                    self:
                      href: ./current-api-session
                  configTypes: []
                  createdAt: 2020-03-09T19:03:49.1883693Z
                  expiresAt: 2020-03-09T19:34:21.5600897Z
                  id: 27343114-b44f-406e-9981-f3c4f2f28d54
                  identity:
                    _links:
                      self:
                        href: ./identities/66352d7b-a6b2-4ce9-85bb-9f18e318704d
                    id: 66352d7b-a6b2-4ce9-85bb-9f18e318704d
                    name: Default Admin
                    urlName: identities
                  tags:
                  - userField1: 123
                  - userField2: asdf
                  token: 28bb0ed2-0577-4632-ae70-d17106b92871
                  updatedAt: 2020-03-09T19:04:21.5600897Z
                meta: {}
          description: The API session associated with the session used to issue the
            request
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Return the current API session
      tags:
      - Current API Session
      x-accepts:
      - application/json
      - default
  /current-api-session/certificates:
    get:
      description: "Retrieves a list of certificate resources for the current API\
        \ session; supports filtering, sorting, and pagination"
      operationId: listCurrentApiSessionCertificates
      parameters:
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: filter
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listCurrentApiSessionCertificatesEnvelope"
          description: A list of the current API Session's certificate
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List the ephemeral certificates available for the current API Session
      tags:
      - Current API Session
      x-accepts:
      - application/json
    post:
      description: Creates an ephemeral certificate for the current API Session. This
        endpoint expects a PEM encoded CSRs to be provided for fulfillment as a property
        of a JSON payload. It is up to the client to manage the private key backing
        the CSR request.
      operationId: createCurrentApiSessionCertificate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/currentApiSessionCertificateCreate"
        description: The payload describing the CSR used to create a session certificate
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/createCurrentApiSessionCertificateEnvelope"
          description: A response of a create API Session certificate
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Creates an ephemeral certificate for the current API Session
      tags:
      - Current API Session
      x-codegen-request-body-name: sessionCertificate
      x-content-type: application/json
      x-accepts:
      - application/json
  /current-api-session/certificates/{id}:
    delete:
      description: |
        Delete an ephemeral certificateby id
      operationId: deleteCurrentApiSessionCertificate
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The delete request was successful and the resource has been
            removed
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Delete an ephemeral certificate
      tags:
      - Current API Session
      x-accepts:
      - application/json
    get:
      description: Retrieves a single ephemeral certificate by id
      operationId: detailCurrentApiSessionCertificate
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/detailCurrentApiSessionCertificateEnvelope"
          description: A response containing a single API Session certificate
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Retrieves an ephemeral certificate
      tags:
      - Current API Session
      x-accepts:
      - application/json
  /current-api-session/service-updates:
    get:
      description: |
        Retrieves data indicating the last time data relevant to this API Session was altered that would necessitate
        service refreshes.
      operationId: listServiceUpdates
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listCurrentApiSessionServiceUpdatesEnvelope"
          description: Data indicating necessary service updates
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Returns data indicating whether a client should updates it service
        list
      tags:
      - Current API Session
      - Services
      x-accepts:
      - application/json
  /current-identity:
    get:
      description: Returns the identity associated with the API sessions used to issue
        the current request
      operationId: getCurrentIdentity
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/currentIdentityDetailEnvelope"
            default:
              example:
                data:
                  _links:
                    edge-router-policies:
                      href: ./identities/66352d7b-a6b2-4ce9-85bb-9f18e318704d/edge-routers
                    self:
                      href: ./identities/66352d7b-a6b2-4ce9-85bb-9f18e318704d
                    service-policies:
                      href: ./identities/66352d7b-a6b2-4ce9-85bb-9f18e318704d/identities
                  authenticators:
                    updb:
                      username: admin
                  createdAt: 2020-01-13T16:38:13.6854788Z
                  enrollment: {}
                  id: 66352d7b-a6b2-4ce9-85bb-9f18e318704d
                  isAdmin: true
                  isDefaultAdmin: true
                  name: Default Admin
                  roleAttributes: []
                  tags: {}
                  type:
                    _links:
                      self:
                        href: ./identity-types/User
                    id: User
                    name: User
                    urlName: identity-types
                  updatedAt: 2020-01-13T16:38:13.6854788Z
                meta: {}
          description: The identity associated with the API Session used to issue
            the request
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Return the current identity
      tags:
      - Current Identity
      x-accepts:
      - application/json
      - default
  /current-identity/authenticators:
    get:
      description: "Retrieves a list of authenticators assigned to the current API\
        \ session's identity; supports filtering, sorting, and pagination."
      operationId: listCurrentIdentityAuthenticators
      parameters:
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: filter
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listAuthenticatorsEnvelope"
          description: A list of authenticators
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List authenticators for the current identity
      tags:
      - Current API Session
      x-accepts:
      - application/json
  /current-identity/authenticators/{id}:
    get:
      description: Retrieves a single authenticator by id. Will only show authenticators
        assigned to the API session's identity.
      operationId: detailCurrentIdentityAuthenticator
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/detailAuthenticatorEnvelope"
          description: A singular authenticator resource
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Retrieve an authenticator for the current identity
      tags:
      - Current API Session
      x-accepts:
      - application/json
    patch:
      description: |
        Update the supplied fields on an authenticator by id. Will only update authenticators assigned to the API
        session's identity.
      operationId: patchCurrentIdentityAuthenticator
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/authenticatorPatchWithCurrent"
        description: An authenticator patch object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The patch request was successful and the resource has been
            altered
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Update the supplied fields on an authenticator of this identity
      tags:
      - Current API Session
      x-codegen-request-body-name: authenticator
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: |
        Update all fields on an authenticator by id.  Will only update authenticators assigned to the API session's
        identity.
      operationId: updateCurrentIdentityAuthenticator
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/authenticatorUpdateWithCurrent"
        description: An authenticator put object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The update request was successful and the resource has been
            altered
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Update all fields on an authenticator of this identity
      tags:
      - Current API Session
      x-codegen-request-body-name: authenticator
      x-content-type: application/json
      x-accepts:
      - application/json
  /current-identity/authenticators/{id}/extend:
    post:
      description: |-
        This endpoint only functions for certificates issued by the controller. 3rd party certificates are not handled.
        Allows an identity to extend its certificate's expiration date by using its current and valid client certificate to submit a CSR. This CSR may be passed in using a new private key, thus allowing private key rotation.
        The response from this endpoint is a new client certificate which the client must  be verified via the /authenticators/{id}/extend-verify endpoint.
        After verification is completion any new connections must be made with new certificate. Prior to verification the old client certificate remains active.
      operationId: extendCurrentIdentityAuthenticator
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/identityExtendEnrollmentRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/identityExtendEnrollmentEnvelope"
          description: A response containg the identity's new certificate
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Allows the current identity to recieve a new certificate associated
        with a certificate based authenticator
      tags:
      - Current API Session
      - Enroll
      - Extend Enrollment
      x-codegen-request-body-name: extend
      x-content-type: application/json
      x-accepts:
      - application/json
  /current-identity/authenticators/{id}/extend-verify:
    post:
      description: |-
        After submitting a CSR for a new client certificate the resulting public certificate must be re-submitted to this endpoint to verify receipt.
        After receipt, the new client certificate must be used for new authentication requests.
      operationId: extendVerifyCurrentIdentityAuthenticator
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/identityExtendValidateEnrollmentRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: Base empty response
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Allows the current identity to validate reciept of a new client certificate
      tags:
      - Current API Session
      - Enroll
      - Extend Enrollment
      x-codegen-request-body-name: extend
      x-content-type: application/json
      x-accepts:
      - application/json
  /current-identity/edge-routers:
    get:
      description: |
        Lists the Edge Routers that the current identity has access to via policies. The data returned
        includes their address and online status
      operationId: getCurrentIdentityEdgeRouters
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listCurrentIdentityEdgeRoutersEnvelope"
          description: A list of edge routers
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Return this list of Edge Routers the identity has access to
      tags:
      - Current Identity
      - Edge Router
      x-accepts:
      - application/json
  /current-identity/mfa:
    delete:
      description: |
        Disable MFA for the current identity. Requires a current valid time based one time password if MFA enrollment has been completed. If not, code should be an empty string. If one time passwords are not available and admin account can be used to remove MFA from the identity via `DELETE /identities/<id>/mfa`.
      operationId: deleteMfa
      parameters:
      - in: header
        name: mfa-validation-code
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: Base empty response
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Disable MFA for the current identity
      tags:
      - Current Identity
      - MFA
      x-accepts:
      - application/json
    get:
      description: |
        Returns details about the current MFA enrollment. If enrollment has not been completed it will return the current MFA configuration details necessary to complete a `POST /current-identity/mfa/verify`.
      operationId: detailMfa
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/detailMfaEnvelope"
          description: The details of an MFA enrollment
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Returns the current status of MFA enrollment
      tags:
      - Current Identity
      - MFA
      x-accepts:
      - application/json
    post:
      description: |
        Allows authenticator based MFA enrollment. If enrollment has already been completed, it must be disabled before attempting to re-enroll. Subsequent enrollment request is completed via `POST /current-identity/mfa/verify`
      operationId: enrollMfa
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/createEnvelope"
          description: The create request was successful and the resource has been
            added at the following location
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "409":
          content:
            application/json:
              example:
                error:
                  causeMessage: ""
                  code: ALREADY_MFA_ENROLLED
                  message: The identity is already enrolled in MFA
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The identity is already enrolled in MFA
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Initiate MFA enrollment
      tags:
      - Current Identity
      - MFA
      x-accepts:
      - application/json
  /current-identity/mfa/qr-code:
    get:
      description: |
        Shows an QR code image for unverified MFA enrollments. 404s if the MFA enrollment has been completed or not started.
      operationId: detailMfaQrCode
      responses:
        "200":
          content: {}
          description: OK
        "404":
          content: {}
          description: No MFA enrollment or MFA enrollment is completed
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Show a QR code for unverified MFA enrollments
      tags:
      - Current Identity
      - MFA
      x-accepts:
      - application/json
  /current-identity/mfa/recovery-codes:
    get:
      description: |
        Allows the viewing of recovery codes of an MFA enrollment. Requires a current valid time based one time password to interact with. Available after a completed MFA enrollment.
      operationId: detailMfaRecoveryCodes
      parameters:
      - in: header
        name: mfa-validation-code
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/mfaCode"
        description: An MFA validation request
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/detailMfaRecoveryCodesEnvelope"
          description: The recovery codes of an MFA enrollment
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: For a completed MFA enrollment view the current recovery codes
      tags:
      - Current Identity
      - MFA
      x-codegen-request-body-name: mfaValidation
      x-content-type: application/json
      x-accepts:
      - application/json
    post:
      description: |
        Allows regeneration of recovery codes of an MFA enrollment. Requires a current valid time based one time password to interact with. Available after a completed MFA enrollment. This replaces all existing recovery codes.
      operationId: createMfaRecoveryCodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/mfaCode"
        description: An MFA validation request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: Base empty response
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: For a completed MFA enrollment regenerate the recovery codes
      tags:
      - Current Identity
      - MFA
      x-codegen-request-body-name: mfaValidation
      x-content-type: application/json
      x-accepts:
      - application/json
  /current-identity/mfa/verify:
    post:
      description: |
        Completes MFA enrollment by accepting a time based one time password as verification. Called after MFA enrollment has been initiated via `POST /current-identity/mfa`.
      operationId: verifyMfa
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/mfaCode"
        description: An MFA validation request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: Base empty response
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Complete MFA enrollment by verifying a time based one time token
      tags:
      - Current Identity
      - MFA
      x-codegen-request-body-name: mfaValidation
      x-content-type: application/json
      x-accepts:
      - application/json
  /enroll:
    post:
      description: present a OTT and CSR to receive a long-lived client certificate
      operationId: enroll
      parameters:
      - in: query
        name: token
        schema:
          format: uuid
          type: string
      - in: query
        name: method
        schema:
          type: string
      requestBody:
        content:
          application/pkcs7:
            schema:
              $ref: "#/components/schemas/genericEnroll"
          application/json:
            schema:
              $ref: "#/components/schemas/genericEnroll"
          application/x-pem-file:
            schema:
              $ref: "#/components/schemas/genericEnroll"
          text/plain:
            schema:
              $ref: "#/components/schemas/genericEnroll"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/enrollmentCertsEnvelope"
          description: A response containing and identities client certificate chains
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      summary: Enroll an identity via one-time-token
      tags:
      - Enroll
      x-codegen-request-body-name: body
      x-content-type: application/pkcs7
      x-accepts:
      - application/json
  /enroll/ca:
    post:
      description: |
        For CA auto enrollment, an identity is not created beforehand.
        Instead one will be created during enrollment. The client will present a client certificate that is signed by a
        Certificate Authority that has been added and verified (See POST /cas and POST /cas/{id}/verify).

        During this process no CSRs are requires as the client should already be in possession of a valid certificate.
      operationId: enrollCa
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: Base empty response
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      summary: Enroll an identity with a pre-exchanged certificate
      tags:
      - Enroll
      x-accepts:
      - application/json
  /enroll/challenge:
    post:
      description: |
        A caller may submit a nonce and a key id (kid) from the enrollment JWKS endpoint or enrollment JWT that will
        be used to sign the nonce. The resulting signature may be validated with the associated public key in order
        to verify a networks identity during enrollment. The nonce must be a valid formatted UUID.
      operationId: enrollmentChallenge
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/nonceChallenge"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/nonceSignature"
          description: "A nonce challenge response. The contents will be the signature\
            \ of the nonce, the key id used, and algorithm used to produce the signature."
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
      summary: Allows verification of a controller or cluster of controllers as being
        the valid target for enrollment.
      tags:
      - Enroll
      x-codegen-request-body-name: nonce
      x-content-type: application/json
      x-accepts:
      - application/json
  /enroll/erott:
    post:
      description: |
        Enrolls an edge-router via a one-time-token to establish a certificate based identity.
      operationId: enrollErOtt
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/erOttEnrollmentRequest"
        description: An OTT enrollment request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/enrollmentCertsEnvelope"
          description: "A response containing the edge routers signed certificates\
            \ (server chain, server cert, CAs)."
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      summary: Enroll an edge-router
      tags:
      - Enroll
      x-codegen-request-body-name: erOttEnrollmentRequest
      x-content-type: application/json
      x-accepts:
      - application/json
  /enroll/extend/router:
    post:
      description: |
        Allows a router to extend its certificates' expiration date by
        using its current and valid client certificate to submit a CSR. This CSR may
        be passed in using a new private key, thus allowing private key rotation or swapping.

        After completion any new connections must be made with certificates returned from a 200 OK
        response. The previous client certificate is rendered invalid for use with the controller even if it
        has not expired.

        This request must be made using the existing, valid, client certificate.
      operationId: extendRouterEnrollment
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/routerExtendEnrollmentRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/enrollmentCertsEnvelope"
          description: "A response containing the edge routers new signed certificates\
            \ (server chain, server cert, CAs)."
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
      summary: Extend the life of a currently enrolled router's certificates
      tags:
      - Enroll
      - Extend Enrollment
      x-codegen-request-body-name: routerExtendEnrollmentRequest
      x-content-type: application/json
      x-accepts:
      - application/json
  /enroll/jwks:
    get:
      description: |
        Returns a list of JSON Web Keys (JWKS) that are used for enrollment signing. The keys listed here are used
        to sign and co-sign enrollment JWTs. They can be verified through a challenge endpoint, using the public keys
        from this endpoint to verify the target machine has possession of the related private key.
      operationId: getEnrollmentJwks
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/jwks"
          description: A JWKS response for enrollment.
      summary: List JSON Web Keys associated with enrollment
      tags:
      - Enroll
      x-accepts:
      - application/json
  /enroll/ott:
    post:
      description: |
        Enroll an identity via a one-time-token which is supplied via a query string parameter. This enrollment method
        expects a PEM encoded CSRs to be provided for fulfillment. It is up to the enrolling identity to manage the
        private key backing the CSR request.
      operationId: enrollOtt
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ottEnrollmentRequest"
        description: An OTT enrollment request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/enrollmentCertsEnvelope"
          description: A response containing and identities client certificate chains
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      summary: Enroll an identity via one-time-token
      tags:
      - Enroll
      x-codegen-request-body-name: ottEnrollmentRequest
      x-content-type: application/json
      x-accepts:
      - application/json
  /enroll/ottca:
    post:
      description: |
        Enroll an identity via a one-time-token that also requires a pre-exchanged client certificate to match a
        Certificate Authority that has been added and verified (See POST /cas and POST /cas{id}/verify). The client
        must present a client certificate signed by CA associated with the enrollment. This enrollment is similar to
        CA auto enrollment except that is required the identity to be pre-created.

        As the client certificate has been pre-exchanged there is no CSR input to this enrollment method.
      operationId: enrollOttCa
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ottEnrollmentRequest"
        description: An OTT enrollment request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: Base empty response
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      summary: Enroll an identity via one-time-token with a pre-exchanged client certificate
      tags:
      - Enroll
      x-codegen-request-body-name: ottEnrollmentRequest
      x-content-type: application/json
      x-accepts:
      - application/json
  /enroll/updb:
    post:
      description: |
        Enrolls an identity via a one-time-token to establish an initial username and password combination
      operationId: enrollUpdb
      parameters:
      - in: query
        name: token
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/enrollUpdb_request"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: Base empty response
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      summary: Enroll an identity via one-time-token
      tags:
      - Enroll
      x-codegen-request-body-name: updbCredentials
      x-content-type: application/json
      x-accepts:
      - application/json
  /enumerated-capabilities:
    get:
      operationId: listEnumeratedCapabilities
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listEnumeratedCapabilitiesEnvelope"
          description: A typed and enumerated list of capabilities
      security: []
      summary: "Returns all capabilities this version of the controller is aware of,\
        \ enabled or not."
      tags:
      - Informational
      x-accepts:
      - application/json
  /external-jwt-signers:
    get:
      description: Retrieves a list of external JWT signers for authentication
      operationId: listExternalJwtSigners
      parameters:
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: filter
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listClientExternalJwtSignersEnvelope"
          description: A list of External JWT Signers
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      summary: List Client Authentication External JWT
      tags:
      - External JWT Signer
      x-accepts:
      - application/json
  /network-jwts:
    get:
      description: Returns a list of JWTs for trusting a network
      operationId: listNetworkJWTs
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listNetworkJWTsEnvelope"
          description: A list of network JWTs
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
      summary: Returns a list of JWTs suitable for bootstrapping network trust.
      tags:
      - Enrollment
      x-accepts:
      - application/json
  /posture-response:
    post:
      description: Submits posture responses
      operationId: createPostureResponse
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postureResponseCreate"
        description: A Posture Response
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/postureResponseEnvelope"
          description: Contains a list of services that have had their timers altered
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Submit a posture response to a posture query
      tags:
      - Posture Checks
      x-codegen-request-body-name: postureResponse
      x-content-type: application/json
      x-accepts:
      - application/json
  /posture-response-bulk:
    post:
      description: Submits posture responses
      operationId: createPostureResponseBulk
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: "#/components/schemas/postureResponseCreate"
              type: array
        description: A Posture Response
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/postureResponseEnvelope"
          description: Contains a list of services that have had their timers altered
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Submit multiple posture responses
      tags:
      - Posture Checks
      x-codegen-request-body-name: postureResponse
      x-content-type: application/json
      x-accepts:
      - application/json
  /protocols:
    get:
      operationId: listProtocols
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listProtocolsEnvelope"
          description: A list of supported Edge protocols
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security: []
      summary: Return a list of the listening Edge protocols
      tags:
      - Informational
      x-accepts:
      - application/json
  /services:
    get:
      description: |
        Retrieves a list of config resources; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listServices
      parameters:
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: filter
        schema:
          type: string
      - explode: true
        in: query
        name: configTypes
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: roleFilter
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: roleSemantic
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listServicesEnvelope"
          description: A list of services
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List services
      tags:
      - Service
      x-accepts:
      - application/json
  /services/{id}:
    delete:
      description: Delete a service by id. Requires admin access.
      operationId: deleteService
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The delete request was successful and the resource has been
            removed
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "409":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42
                  code: CONFLICT_CANNOT_MODIFY_REFERENCED
                  message: The resource cannot be deleted/modified. Remove all referencing
                    resources first.
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested to be removed/altered cannot be as it
            is referenced by another object.
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Delete a service
      tags:
      - Service
      x-accepts:
      - application/json
    get:
      description: Retrieves a single service by id. Requires admin access.
      operationId: detailService
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/detailServiceEnvelope"
          description: A single service
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Retrieves a single service
      tags:
      - Service
      x-accepts:
      - application/json
    patch:
      description: Update the supplied fields on a service. Requires admin access.
      operationId: patchService
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/servicePatch"
        description: A service patch object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The patch request was successful and the resource has been
            altered
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Update the supplied fields on a service
      tags:
      - Service
      x-codegen-request-body-name: service
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: Update all fields on a service by id. Requires admin access.
      operationId: updateService
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/serviceUpdate"
        description: A service update object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The update request was successful and the resource has been
            altered
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Update all fields on a service
      tags:
      - Service
      x-codegen-request-body-name: service
      x-content-type: application/json
      x-accepts:
      - application/json
  /services/{id}/edge-routers:
    get:
      description: |
        Retrieves the list of edge routers permitted to handle traffic for the specified service
      operationId: listServiceEdgeRouters
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: filter
        schema:
          type: string
      - description: "an optional JWT token use to authenticate the request. If provided,\
          \ the token must be valid else a not authorized response is returned."
        in: header
        name: session-token
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listServiceEdgeRoutersEnvelope"
          description: A list of edge routers suitable for dialing or binding the
            specified service by the authenticated identity
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List of edge routers permitted to handle traffic for the specified
        service
      tags:
      - Service
      x-accepts:
      - application/json
  /services/{id}/terminators:
    get:
      description: |
        Retrieves a list of terminator resources that are assigned specific service; supports filtering, sorting, and pagination.
      operationId: listServiceTerminators
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: filter
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listClientTerminatorsEnvelope"
          description: A list of terminators
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List of terminators assigned to a service
      tags:
      - Service
      x-accepts:
      - application/json
  /sessions:
    get:
      description: |
        Retrieves a list of active sessions resources; supports filtering, sorting, and pagination.

        Sessions are tied to an API session and are moved when an API session times out or logs out. Active sessions
        (i.e. Ziti SDK connected to an edge router) will keep the session and API session marked as active.
      operationId: listSessions
      parameters:
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: filter
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listSessionsEnvelope"
          description: A list of sessions
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List sessions
      tags:
      - Session
      x-accepts:
      - application/json
    post:
      description: Create a session resource.
      operationId: createSession
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/sessionCreate"
        description: A session to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sessionCreateEnvelope"
          description: The create request was successful and the resource has been
            added at the following location
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Create a session resource
      tags:
      - Session
      x-codegen-request-body-name: session
      x-content-type: application/json
      x-accepts:
      - application/json
  /sessions/{id}:
    delete:
      description: Delete a session by id.
      operationId: deleteSession
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The delete request was successful and the resource has been
            removed
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "409":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42
                  code: CONFLICT_CANNOT_MODIFY_REFERENCED
                  message: The resource cannot be deleted/modified. Remove all referencing
                    resources first.
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested to be removed/altered cannot be as it
            is referenced by another object.
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Delete a session
      tags:
      - Session
      x-accepts:
      - application/json
    get:
      description: Retrieves a single session by id.
      operationId: detailSession
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/detailSessionEnvelope"
          description: A single session
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Retrieves a single session
      tags:
      - Session
      x-accepts:
      - application/json
  /specs:
    get:
      description: Returns a list of spec files embedded within the controller for
        consumption/documentation/code geneartion
      operationId: listSpecs
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listSpecsEnvelope"
          description: A list of specifications
      security: []
      summary: Returns a list of API specs
      tags:
      - Informational
      x-accepts:
      - application/json
  /specs/{id}:
    get:
      description: Returns single spec resource embedded within the controller for
        consumption/documentation/code geneartion
      operationId: detailSpec
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/detailSpecEnvelope"
          description: A single specification
      security: []
      summary: Return a single spec resource
      tags:
      - Informational
      x-accepts:
      - application/json
  /specs/{id}/spec:
    get:
      description: "Return the body of the specification (i.e. Swagger, OpenAPI 2.0,\
        \ 3.0, etc)."
      operationId: detailSpecBody
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/yaml:
              schema:
                $ref: "#/components/schemas/detailSpecBodyEnvelope"
            application/json:
              schema:
                $ref: "#/components/schemas/detailSpecBodyEnvelope"
          description: Returns the document that represents the specification
      security: []
      summary: Returns the spec's file
      tags:
      - Informational
      x-accepts:
      - application/json
      - text/yaml
  /version:
    get:
      operationId: listVersion
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listVersionEnvelope"
          description: Version information for the controller
      security: []
      summary: Returns version information
      tags:
      - Informational
      x-accepts:
      - application/json
components:
  schemas:
    apiAddress:
      properties:
        url:
          type: string
        version:
          type: string
      type: object
    apiAddressArray:
      items:
        $ref: "#/components/schemas/apiAddress"
      type: array
    apiAddressList:
      additionalProperties:
        $ref: "#/components/schemas/apiAddressArray"
      type: object
    apiError:
      example:
        args:
          urlVars:
            key: urlVars
        code: code
        data:
          key: ""
        requestId: requestId
        cause:
          args:
            urlVars:
              key: urlVars
          reason: reason
          code: code
          field: field
          data:
            key: ""
          requestId: requestId
          cause: null
          message: message
          value: "{}"
          causeMessage: causeMessage
        message: message
        causeMessage: causeMessage
      properties:
        args:
          $ref: "#/components/schemas/apiErrorArgs"
        cause:
          $ref: "#/components/schemas/apiErrorCause"
        causeMessage:
          type: string
        code:
          type: string
        data:
          additionalProperties: true
          type: object
        message:
          type: string
        requestId:
          type: string
      type: object
    apiErrorArgs:
      example:
        urlVars:
          key: urlVars
      properties:
        urlVars:
          additionalProperties:
            type: string
          type: object
      type: object
    apiErrorCause:
      allOf:
      - $ref: "#/components/schemas/apiFieldError"
      - $ref: "#/components/schemas/apiError"
      example:
        args:
          urlVars:
            key: urlVars
        reason: reason
        code: code
        field: field
        data:
          key: ""
        requestId: requestId
        cause: null
        message: message
        value: "{}"
        causeMessage: causeMessage
    apiErrorEnvelope:
      example:
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
        error:
          args:
            urlVars:
              key: urlVars
          code: code
          data:
            key: ""
          requestId: requestId
          cause:
            args:
              urlVars:
                key: urlVars
            reason: reason
            code: code
            field: field
            data:
              key: ""
            requestId: requestId
            cause: null
            message: message
            value: "{}"
            causeMessage: causeMessage
          message: message
          causeMessage: causeMessage
      properties:
        error:
          $ref: "#/components/schemas/apiError"
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - error
      - meta
      type: object
    apiFieldError:
      properties:
        field:
          type: string
        reason:
          type: string
        value:
          description: "can be any value - string, number, boolean, array or object"
          type: object
      type: object
    apiSessionDetail:
      allOf:
      - $ref: "#/components/schemas/baseEntity"
      - properties:
          authQueries:
            $ref: "#/components/schemas/authQueryList"
          authenticatorId:
            type: string
          cachedLastActivityAt:
            format: date-time
            type: string
          configTypes:
            items:
              type: string
            type: array
          identity:
            $ref: "#/components/schemas/entityRef"
          identityId:
            type: string
          ipAddress:
            type: string
          isCertExtendable:
            type: boolean
          isMfaComplete:
            type: boolean
          isMfaRequired:
            type: boolean
          lastActivityAt:
            format: date-time
            type: string
          token:
            type: string
        required:
        - authQueries
        - authenticatorId
        - configTypes
        - identity
        - identityId
        - ipAddress
        - isCertExtendable
        - isMfaComplete
        - isMfaRequired
        - token
        type: object
      description: An API Session object
    apiVersion:
      example:
        path: path
        apiBaseUrls:
        - apiBaseUrls
        - apiBaseUrls
        version: version
      properties:
        apiBaseUrls:
          items:
            type: string
          type: array
        path:
          type: string
        version:
          type: string
      required:
      - path
      type: object
    attributes:
      description: A set of strings used to loosly couple this resource to policies
      items:
        type: string
      nullable: true
      type: array
      x-nullable: true
      x-omitempty: true
    authQueryDetail:
      example:
        clientId: clientId
        provider: ziti
        httpUrl: httpUrl
        minLength: 6
        format: numeric
        typeId: MFA
        id: id
        scopes:
        - scopes
        - scopes
        httpMethod: httpMethod
        maxLength: 0
      properties:
        clientId:
          type: string
        format:
          $ref: "#/components/schemas/mfaFormats"
        httpMethod:
          type: string
        httpUrl:
          type: string
        id:
          type: string
        maxLength:
          type: integer
        minLength:
          type: integer
        provider:
          $ref: "#/components/schemas/mfaProviders"
        scopes:
          items:
            type: string
          type: array
        typeId:
          $ref: "#/components/schemas/authQueryType"
      required:
      - provider
      type: object
    authQueryList:
      items:
        $ref: "#/components/schemas/authQueryDetail"
      type: array
    authQueryType:
      enum:
      - MFA
      - TOTP
      - EXT-JWT
      type: string
    authenticate:
      description: A generic authenticate object meant for use with the /authenticate
        path. Required fields depend on authentication method.
      properties:
        configTypes:
          description: Specific configuration types that should be returned
          items:
            type: string
          type: array
        envInfo:
          $ref: "#/components/schemas/envInfo"
        password:
          maxLength: 100
          minLength: 5
          type: string
        sdkInfo:
          $ref: "#/components/schemas/sdkInfo"
        username:
          maxLength: 100
          minLength: 4
          type: string
      type: object
    authenticatorDetail:
      allOf:
      - $ref: "#/components/schemas/baseEntity"
      - properties:
          certPem:
            type: string
          fingerprint:
            type: string
          identity:
            $ref: "#/components/schemas/entityRef"
          identityId:
            type: string
          isIssuedByNetwork:
            type: boolean
          method:
            type: string
          username:
            type: string
        required:
        - identity
        - identityId
        - method
        type: object
      description: A singular authenticator resource
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        method: method
        _links:
          key:
            method: method
            comment: comment
            href: https://openapi-generator.tech
        identity:
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          name: name
          id: id
          entity: entity
        identityId: identityId
        fingerprint: fingerprint
        certPem: certPem
        id: id
        isIssuedByNetwork: true
        tags: {}
        updatedAt: 2000-01-23T04:56:07.000+00:00
        username: username
    authenticatorList:
      description: An array of authenticator resources
      items:
        $ref: "#/components/schemas/authenticatorDetail"
      type: array
    authenticatorPatch:
      description: All of the fields on an authenticator that may be updated
      properties:
        password:
          maxLength: 100
          minLength: 5
          nullable: true
          type: string
          x-nullable: true
        tags:
          $ref: "#/components/schemas/tags"
        username:
          maxLength: 100
          minLength: 4
          nullable: true
          type: string
          x-nullable: true
      type: object
    authenticatorPatchWithCurrent:
      allOf:
      - $ref: "#/components/schemas/authenticatorPatch"
      - properties:
          currentPassword:
            $ref: "#/components/schemas/password"
        required:
        - currentPassword
        type: object
      description: All of the fields on an authenticator that may be updated
    authenticatorUpdate:
      description: All of the fields on an authenticator that will be updated
      properties:
        password:
          maxLength: 100
          minLength: 5
          type: string
        tags:
          $ref: "#/components/schemas/tags"
        username:
          maxLength: 100
          minLength: 4
          type: string
      required:
      - password
      - username
      type: object
    authenticatorUpdateWithCurrent:
      allOf:
      - $ref: "#/components/schemas/authenticatorUpdate"
      - properties:
          currentPassword:
            $ref: "#/components/schemas/password"
        required:
        - currentPassword
        type: object
      description: All of the fields on an authenticator that will be updated
    baseEntity:
      description: Fields shared by all Edge API entities
      properties:
        _links:
          additionalProperties:
            $ref: "#/components/schemas/link"
          description: A map of named links
          type: object
          x-omitempty: false
        createdAt:
          format: date-time
          type: string
        id:
          type: string
        tags:
          $ref: "#/components/schemas/tags"
        updatedAt:
          format: date-time
          type: string
      required:
      - _links
      - createdAt
      - id
      - updatedAt
      type: object
    capabilities:
      enum:
      - OIDC_AUTH
      - HA_CONTROLLER
      type: string
    clientExternalJwtSignerDetail:
      allOf:
      - $ref: "#/components/schemas/baseEntity"
      - properties:
          audience:
            nullable: true
            type: string
          clientId:
            nullable: true
            type: string
          externalAuthUrl:
            format: url
            type: string
          name:
            example: MyApps Signer
            type: string
          openIdConfigurationUrl:
            type: string
          scopes:
            items:
              type: string
            type: array
          targetToken:
            $ref: "#/components/schemas/targetToken"
        required:
        - externalAuthUrl
        - name
        type: object
      description: A External JWT Signer resource
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        audience: audience
        clientId: clientId
        externalAuthUrl: http://example.com/aeiou
        _links:
          key:
            method: method
            comment: comment
            href: https://openapi-generator.tech
        openIdConfigurationUrl: openIdConfigurationUrl
        name: MyApps Signer
        targetToken: ACCESS
        id: id
        scopes:
        - scopes
        - scopes
        tags: {}
        updatedAt: 2000-01-23T04:56:07.000+00:00
    clientExternalJwtSignerList:
      description: An array of External JWT Signers resources
      items:
        $ref: "#/components/schemas/clientExternalJwtSignerDetail"
      type: array
    commonEdgeRouterProperties:
      example:
        hostname: hostname
        cost: 5248
        name: name
        noTraversal: true
        disabled: true
        isOnline: true
        supportedProtocols:
          key: supportedProtocols
        appData: {}
        syncStatus: syncStatus
      properties:
        appData:
          $ref: "#/components/schemas/tags"
        cost:
          maximum: 65535
          minimum: 0
          nullable: true
          type: integer
        disabled:
          type: boolean
        hostname:
          type: string
        isOnline:
          type: boolean
        name:
          type: string
        noTraversal:
          nullable: true
          type: boolean
        supportedProtocols:
          additionalProperties:
            type: string
          type: object
        syncStatus:
          type: string
      required:
      - cost
      - disabled
      - hostname
      - isOnline
      - name
      - noTraversal
      - supportedProtocols
      - syncStatus
      type: object
    configTypes:
      description: Specific configuration types that should be returned
      items:
        type: string
      type: array
    controllerDetail:
      allOf:
      - $ref: "#/components/schemas/baseEntity"
      - properties:
          apiAddresses:
            $ref: "#/components/schemas/apiAddressList"
          certPem:
            type: string
          ctrlAddress:
            nullable: true
            type: string
          fingerprint:
            type: string
          isOnline:
            type: boolean
          lastJoinedAt:
            format: date-time
            type: string
          name:
            type: string
        required:
        - certPem
        - fingerprint
        - isOnline
        - lastJoinedAt
        - name
        type: object
      description: A controller resource
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        _links:
          key:
            method: method
            comment: comment
            href: https://openapi-generator.tech
        apiAddresses: null
        fingerprint: fingerprint
        name: name
        ctrlAddress: ctrlAddress
        certPem: certPem
        isOnline: true
        id: id
        lastJoinedAt: 2000-01-23T04:56:07.000+00:00
        tags: {}
        updatedAt: 2000-01-23T04:56:07.000+00:00
    controllersList:
      description: An array of controller resources
      items:
        $ref: "#/components/schemas/controllerDetail"
      type: array
    createCurrentApiSessionCertificateEnvelope:
      example:
        data:
          cas: cas
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          certificate: certificate
          id: id
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          $ref: "#/components/schemas/currentApiSessionCertificateCreateResponse"
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    createEnvelope:
      example:
        data:
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          id: id
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          $ref: "#/components/schemas/createLocation"
        meta:
          $ref: "#/components/schemas/meta"
      type: object
    createLocation:
      example:
        _links:
          key:
            method: method
            comment: comment
            href: https://openapi-generator.tech
        id: id
      properties:
        _links:
          additionalProperties:
            $ref: "#/components/schemas/link"
          description: A map of named links
          type: object
          x-omitempty: false
        id:
          type: string
      type: object
    currentApiSessionCertificateCreate:
      properties:
        csr:
          type: string
      required:
      - csr
      type: object
    currentApiSessionCertificateCreateResponse:
      allOf:
      - $ref: "#/components/schemas/createLocation"
      - properties:
          cas:
            type: string
          certificate:
            type: string
        required:
        - certificate
        type: object
      example:
        cas: cas
        _links:
          key:
            method: method
            comment: comment
            href: https://openapi-generator.tech
        certificate: certificate
        id: id
    currentApiSessionCertificateDetail:
      allOf:
      - $ref: "#/components/schemas/baseEntity"
      - properties:
          certificate:
            type: string
          fingerprint:
            type: string
          subject:
            type: string
          validFrom:
            format: date-time
            type: string
          validTo:
            format: date-time
            type: string
        required:
        - certificate
        - fingerprint
        - subject
        - validFrom
        - validTo
        type: object
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        _links:
          key:
            method: method
            comment: comment
            href: https://openapi-generator.tech
        subject: subject
        certificate: certificate
        fingerprint: fingerprint
        id: id
        validFrom: 2000-01-23T04:56:07.000+00:00
        tags: {}
        updatedAt: 2000-01-23T04:56:07.000+00:00
        validTo: 2000-01-23T04:56:07.000+00:00
    currentApiSessionCertificateList:
      items:
        $ref: "#/components/schemas/currentApiSessionCertificateDetail"
      type: array
    currentApiSessionDetail:
      allOf:
      - $ref: "#/components/schemas/apiSessionDetail"
      - properties:
          expirationSeconds:
            type: integer
          expiresAt:
            format: date-time
            type: string
        required:
        - expirationSeconds
        - expiresAt
        type: object
      description: An API Session object for the current API session
      example:
        _links:
          key:
            method: method
            comment: comment
            href: https://openapi-generator.tech
        configTypes:
        - configTypes
        - configTypes
        authQueries:
        - clientId: clientId
          provider: ziti
          httpUrl: httpUrl
          minLength: 6
          format: numeric
          typeId: MFA
          id: id
          scopes:
          - scopes
          - scopes
          httpMethod: httpMethod
          maxLength: 0
        - clientId: clientId
          provider: ziti
          httpUrl: httpUrl
          minLength: 6
          format: numeric
          typeId: MFA
          id: id
          scopes:
          - scopes
          - scopes
          httpMethod: httpMethod
          maxLength: 0
        expirationSeconds: 1
        ipAddress: ipAddress
        lastActivityAt: 2000-01-23T04:56:07.000+00:00
        isMfaRequired: true
        expiresAt: 2000-01-23T04:56:07.000+00:00
        tags: {}
        token: token
        createdAt: 2000-01-23T04:56:07.000+00:00
        isMfaComplete: true
        cachedLastActivityAt: 2000-01-23T04:56:07.000+00:00
        identity:
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          name: name
          id: id
          entity: entity
        identityId: identityId
        authenticatorId: authenticatorId
        id: id
        isCertExtendable: true
        updatedAt: 2000-01-23T04:56:07.000+00:00
    currentApiSessionDetailEnvelope:
      example:
        data:
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          configTypes:
          - configTypes
          - configTypes
          authQueries:
          - clientId: clientId
            provider: ziti
            httpUrl: httpUrl
            minLength: 6
            format: numeric
            typeId: MFA
            id: id
            scopes:
            - scopes
            - scopes
            httpMethod: httpMethod
            maxLength: 0
          - clientId: clientId
            provider: ziti
            httpUrl: httpUrl
            minLength: 6
            format: numeric
            typeId: MFA
            id: id
            scopes:
            - scopes
            - scopes
            httpMethod: httpMethod
            maxLength: 0
          expirationSeconds: 1
          ipAddress: ipAddress
          lastActivityAt: 2000-01-23T04:56:07.000+00:00
          isMfaRequired: true
          expiresAt: 2000-01-23T04:56:07.000+00:00
          tags: {}
          token: token
          createdAt: 2000-01-23T04:56:07.000+00:00
          isMfaComplete: true
          cachedLastActivityAt: 2000-01-23T04:56:07.000+00:00
          identity:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          identityId: identityId
          authenticatorId: authenticatorId
          id: id
          isCertExtendable: true
          updatedAt: 2000-01-23T04:56:07.000+00:00
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          $ref: "#/components/schemas/currentApiSessionDetail"
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    currentApiSessionServiceUpdateList:
      example:
        lastChangeAt: 2000-01-23T04:56:07.000+00:00
      properties:
        lastChangeAt:
          format: date-time
          type: string
      required:
      - lastChangeAt
      type: object
    currentIdentityDetailEnvelope:
      example:
        data:
          defaultHostingPrecedence: default
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          authPolicy:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          authenticators:
            cert:
              fingerprint: fingerprint
              id: id
            updb:
              id: id
              username: username
          type:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          isMfaEnabled: true
          appData: {}
          disabledAt: 2000-01-23T04:56:07.000+00:00
          createdAt: 2000-01-23T04:56:07.000+00:00
          roleAttributes:
          - null
          - null
          edgeRouterConnectionStatus: online
          hasEdgeRouterConnection: true
          serviceHostingPrecedences: null
          envInfo:
            hostname: hostname
            os: os
            osVersion: osVersion
            domain: domain
            arch: arch
            osRelease: osRelease
          hasApiSession: true
          disabled: true
          id: id
          updatedAt: 2000-01-23T04:56:07.000+00:00
          sdkInfo:
            appVersion: appVersion
            appId: appId
            type: type
            branch: branch
            version: version
            revision: revision
          defaultHostingCost: null
          authPolicyId: authPolicyId
          externalId: externalId
          disabledUntil: 2000-01-23T04:56:07.000+00:00
          isAdmin: true
          tags: {}
          enrollment:
            ott:
              jwt: jwt
              id: id
              expiresAt: 2000-01-23T04:56:07.000+00:00
              token: token
            ottca:
              jwt: jwt
              caId: caId
              id: id
              ca:
                _links:
                  key:
                    method: method
                    comment: comment
                    href: https://openapi-generator.tech
                name: name
                id: id
                entity: entity
              expiresAt: 2000-01-23T04:56:07.000+00:00
              token: token
            updb:
              jwt: jwt
              id: id
              expiresAt: 2000-01-23T04:56:07.000+00:00
              token: token
          isDefaultAdmin: true
          name: name
          typeId: typeId
          serviceHostingCosts: null
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          $ref: "#/components/schemas/identityDetail"
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    currentIdentityEdgeRouterDetail:
      allOf:
      - $ref: "#/components/schemas/baseEntity"
      - $ref: "#/components/schemas/commonEdgeRouterProperties"
      description: A detail edge router resource
      example:
        cost: 5248
        _links:
          key:
            method: method
            comment: comment
            href: https://openapi-generator.tech
        noTraversal: true
        isOnline: true
        supportedProtocols:
          key: supportedProtocols
        appData: {}
        tags: {}
        createdAt: 2000-01-23T04:56:07.000+00:00
        hostname: hostname
        name: name
        disabled: true
        id: id
        syncStatus: syncStatus
        updatedAt: 2000-01-23T04:56:07.000+00:00
    currentIdentityEdgeRouterList:
      description: A list of edge router resources
      items:
        $ref: "#/components/schemas/currentIdentityEdgeRouterDetail"
      type: array
    detailAuthenticatorEnvelope:
      example:
        data:
          createdAt: 2000-01-23T04:56:07.000+00:00
          method: method
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          identity:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          identityId: identityId
          fingerprint: fingerprint
          certPem: certPem
          id: id
          isIssuedByNetwork: true
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
          username: username
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          $ref: "#/components/schemas/authenticatorDetail"
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    detailCurrentApiSessionCertificateEnvelope:
      example:
        data:
          createdAt: 2000-01-23T04:56:07.000+00:00
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          subject: subject
          certificate: certificate
          fingerprint: fingerprint
          id: id
          validFrom: 2000-01-23T04:56:07.000+00:00
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
          validTo: 2000-01-23T04:56:07.000+00:00
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          $ref: "#/components/schemas/currentApiSessionCertificateDetail"
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    detailMfa:
      allOf:
      - $ref: "#/components/schemas/baseEntity"
      - properties:
          isVerified:
            type: boolean
          provisioningUrl:
            description: Not provided if MFA verification has been completed
            type: string
          recoveryCodes:
            description: Not provided if MFA verification has been completed
            items:
              type: string
            type: array
        required:
        - isVerified
        type: object
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        _links:
          key:
            method: method
            comment: comment
            href: https://openapi-generator.tech
        isVerified: true
        provisioningUrl: provisioningUrl
        id: id
        recoveryCodes:
        - recoveryCodes
        - recoveryCodes
        tags: {}
        updatedAt: 2000-01-23T04:56:07.000+00:00
    detailMfaEnvelope:
      example:
        data:
          createdAt: 2000-01-23T04:56:07.000+00:00
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          isVerified: true
          provisioningUrl: provisioningUrl
          id: id
          recoveryCodes:
          - recoveryCodes
          - recoveryCodes
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          $ref: "#/components/schemas/detailMfa"
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    detailMfaRecoveryCodes:
      allOf:
      - $ref: "#/components/schemas/baseEntity"
      - properties:
          recoveryCodes:
            items:
              type: string
            type: array
        required:
        - recoveryCodes
        type: object
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        _links:
          key:
            method: method
            comment: comment
            href: https://openapi-generator.tech
        id: id
        recoveryCodes:
        - recoveryCodes
        - recoveryCodes
        tags: {}
        updatedAt: 2000-01-23T04:56:07.000+00:00
    detailMfaRecoveryCodesEnvelope:
      example:
        data:
          createdAt: 2000-01-23T04:56:07.000+00:00
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          id: id
          recoveryCodes:
          - recoveryCodes
          - recoveryCodes
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          $ref: "#/components/schemas/detailMfaRecoveryCodes"
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    detailServiceEnvelope:
      example:
        data:
          maxIdleTimeMillis: 0
          configs:
          - configs
          - configs
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          encryptionRequired: true
          terminatorStrategy: terminatorStrategy
          tags: {}
          createdAt: 2000-01-23T04:56:07.000+00:00
          roleAttributes:
          - null
          - null
          postureQueries:
          - policyId: policyId
            postureQueries:
            - timeoutRemaining: 1
              createdAt: 2000-01-23T04:56:07.000+00:00
              process:
                path: path
                osType: Windows
              processes:
              - path: path
                osType: Windows
              - path: path
                osType: Windows
              _links:
                key:
                  method: method
                  comment: comment
                  href: https://openapi-generator.tech
              id: id
              isPassing: true
              timeout: 6
              tags: {}
              updatedAt: 2000-01-23T04:56:07.000+00:00
              queryType: OS
            - timeoutRemaining: 1
              createdAt: 2000-01-23T04:56:07.000+00:00
              process:
                path: path
                osType: Windows
              processes:
              - path: path
                osType: Windows
              - path: path
                osType: Windows
              _links:
                key:
                  method: method
                  comment: comment
                  href: https://openapi-generator.tech
              id: id
              isPassing: true
              timeout: 6
              tags: {}
              updatedAt: 2000-01-23T04:56:07.000+00:00
              queryType: OS
            policyType: null
            isPassing: true
          - policyId: policyId
            postureQueries:
            - timeoutRemaining: 1
              createdAt: 2000-01-23T04:56:07.000+00:00
              process:
                path: path
                osType: Windows
              processes:
              - path: path
                osType: Windows
              - path: path
                osType: Windows
              _links:
                key:
                  method: method
                  comment: comment
                  href: https://openapi-generator.tech
              id: id
              isPassing: true
              timeout: 6
              tags: {}
              updatedAt: 2000-01-23T04:56:07.000+00:00
              queryType: OS
            - timeoutRemaining: 1
              createdAt: 2000-01-23T04:56:07.000+00:00
              process:
                path: path
                osType: Windows
              processes:
              - path: path
                osType: Windows
              - path: path
                osType: Windows
              _links:
                key:
                  method: method
                  comment: comment
                  href: https://openapi-generator.tech
              id: id
              isPassing: true
              timeout: 6
              tags: {}
              updatedAt: 2000-01-23T04:56:07.000+00:00
              queryType: OS
            policyType: null
            isPassing: true
          permissions:
          - Dial
          - Dial
          name: name
          id: id
          config:
            key:
              key: "{}"
          updatedAt: 2000-01-23T04:56:07.000+00:00
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          $ref: "#/components/schemas/serviceDetail"
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    detailSessionEnvelope:
      example:
        data:
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          type: Dial
          tags: {}
          token: token
          createdAt: 2000-01-23T04:56:07.000+00:00
          apiSession:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          edgeRouters:
          - hostname: hostname
            urls:
              key: urls
            cost: 5248
            name: name
            noTraversal: true
            disabled: true
            isOnline: true
            supportedProtocols:
              key: supportedProtocols
            appData: {}
            syncStatus: syncStatus
          - hostname: hostname
            urls:
              key: urls
            cost: 5248
            name: name
            noTraversal: true
            disabled: true
            isOnline: true
            supportedProtocols:
              key: supportedProtocols
            appData: {}
            syncStatus: syncStatus
          identityId: identityId
          service:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          id: id
          serviceId: serviceId
          apiSessionId: apiSessionId
          updatedAt: 2000-01-23T04:56:07.000+00:00
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          $ref: "#/components/schemas/sessionDetail"
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    detailSpecBodyEnvelope:
      example:
        data: data
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          type: string
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    detailSpecEnvelope:
      example:
        data:
          createdAt: 2000-01-23T04:56:07.000+00:00
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          name: name
          id: id
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          $ref: "#/components/schemas/specDetail"
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    dialBind:
      enum:
      - Dial
      - Bind
      - Invalid
      type: string
    dialBindArray:
      items:
        $ref: "#/components/schemas/dialBind"
      type: array
    empty:
      example:
        data: {}
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          example: {}
          properties: {}
          type: object
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    enrollmentCerts:
      example:
        serverCert: serverCert
        cert: cert
        ca: ca
      properties:
        ca:
          description: A PEM encoded set of CA certificates to trust
          type: string
        cert:
          description: A PEM encoded set of certificates to use as the client chain
          type: string
        serverCert:
          description: A PEM encoded set of certificates to use as the servers chain
          type: string
      type: object
    enrollmentCertsEnvelope:
      example:
        data:
          serverCert: serverCert
          cert: cert
          ca: ca
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          $ref: "#/components/schemas/enrollmentCerts"
        meta:
          $ref: "#/components/schemas/meta"
      type: object
    entityRef:
      description: A reference to another resource and links to interact with it
      example:
        _links:
          key:
            method: method
            comment: comment
            href: https://openapi-generator.tech
        name: name
        id: id
        entity: entity
      properties:
        _links:
          additionalProperties:
            $ref: "#/components/schemas/link"
          description: A map of named links
          type: object
          x-omitempty: false
        entity:
          type: string
        id:
          type: string
        name:
          type: string
      type: object
    envInfo:
      description: Environment information an authenticating client may provide
      example:
        hostname: hostname
        os: os
        osVersion: osVersion
        domain: domain
        arch: arch
        osRelease: osRelease
      properties:
        arch:
          maxLength: 255
          type: string
        domain:
          maxLength: 253
          type: string
        hostname:
          maxLength: 253
          type: string
        os:
          maxLength: 255
          type: string
        osRelease:
          maxLength: 255
          type: string
        osVersion:
          maxLength: 255
          type: string
      type: object
    erOttEnrollmentRequest:
      properties:
        clientCsr:
          type: string
        serverCsr:
          type: string
        token:
          type: string
      type: object
    genericEnroll:
      properties:
        certCsr:
          type: string
        clientCsr:
          type: string
        name:
          type: string
        password:
          maxLength: 100
          minLength: 5
          type: string
        serverCertCsr:
          type: string
        username:
          maxLength: 100
          minLength: 4
          type: string
      type: object
    identityAuthenticators:
      example:
        cert:
          fingerprint: fingerprint
          id: id
        updb:
          id: id
          username: username
      properties:
        cert:
          $ref: "#/components/schemas/identityAuthenticators_cert"
        updb:
          $ref: "#/components/schemas/identityAuthenticators_updb"
      type: object
    identityDetail:
      allOf:
      - $ref: "#/components/schemas/baseEntity"
      - properties:
          appData:
            $ref: "#/components/schemas/tags"
          authPolicy:
            $ref: "#/components/schemas/entityRef"
          authPolicyId:
            type: string
          authenticators:
            $ref: "#/components/schemas/identityAuthenticators"
          defaultHostingCost:
            $ref: "#/components/schemas/terminatorCost"
          defaultHostingPrecedence:
            $ref: "#/components/schemas/terminatorPrecedence"
          disabled:
            type: boolean
          disabledAt:
            format: date-time
            nullable: true
            type: string
          disabledUntil:
            format: date-time
            nullable: true
            type: string
          edgeRouterConnectionStatus:
            enum:
            - online
            - offline
            - unknown
            type: string
          enrollment:
            $ref: "#/components/schemas/identityEnrollments"
          envInfo:
            $ref: "#/components/schemas/envInfo"
          externalId:
            nullable: true
            type: string
          hasApiSession:
            type: boolean
          hasEdgeRouterConnection:
            type: boolean
          isAdmin:
            type: boolean
          isDefaultAdmin:
            type: boolean
          isMfaEnabled:
            type: boolean
          name:
            type: string
          roleAttributes:
            $ref: "#/components/schemas/attributes"
          sdkInfo:
            $ref: "#/components/schemas/sdkInfo"
          serviceHostingCosts:
            $ref: "#/components/schemas/terminatorCostMap"
          serviceHostingPrecedences:
            $ref: "#/components/schemas/terminatorPrecedenceMap"
          type:
            $ref: "#/components/schemas/entityRef"
          typeId:
            type: string
        required:
        - authPolicy
        - authPolicyId
        - authenticators
        - defaultHostingCost
        - disabled
        - edgeRouterConnectionStatus
        - enrollment
        - envInfo
        - externalId
        - hasApiSession
        - hasEdgeRouterConnection
        - isAdmin
        - isDefaultAdmin
        - isMfaEnabled
        - name
        - roleAttributes
        - sdkInfo
        - serviceHostingCosts
        - serviceHostingPrecedences
        - type
        - typeId
        type: object
      description: Detail of a specific identity
      example:
        defaultHostingPrecedence: default
        _links:
          key:
            method: method
            comment: comment
            href: https://openapi-generator.tech
        authPolicy:
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          name: name
          id: id
          entity: entity
        authenticators:
          cert:
            fingerprint: fingerprint
            id: id
          updb:
            id: id
            username: username
        type:
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          name: name
          id: id
          entity: entity
        isMfaEnabled: true
        appData: {}
        disabledAt: 2000-01-23T04:56:07.000+00:00
        createdAt: 2000-01-23T04:56:07.000+00:00
        roleAttributes:
        - null
        - null
        edgeRouterConnectionStatus: online
        hasEdgeRouterConnection: true
        serviceHostingPrecedences: null
        envInfo:
          hostname: hostname
          os: os
          osVersion: osVersion
          domain: domain
          arch: arch
          osRelease: osRelease
        hasApiSession: true
        disabled: true
        id: id
        updatedAt: 2000-01-23T04:56:07.000+00:00
        sdkInfo:
          appVersion: appVersion
          appId: appId
          type: type
          branch: branch
          version: version
          revision: revision
        defaultHostingCost: null
        authPolicyId: authPolicyId
        externalId: externalId
        disabledUntil: 2000-01-23T04:56:07.000+00:00
        isAdmin: true
        tags: {}
        enrollment:
          ott:
            jwt: jwt
            id: id
            expiresAt: 2000-01-23T04:56:07.000+00:00
            token: token
          ottca:
            jwt: jwt
            caId: caId
            id: id
            ca:
              _links:
                key:
                  method: method
                  comment: comment
                  href: https://openapi-generator.tech
              name: name
              id: id
              entity: entity
            expiresAt: 2000-01-23T04:56:07.000+00:00
            token: token
          updb:
            jwt: jwt
            id: id
            expiresAt: 2000-01-23T04:56:07.000+00:00
            token: token
        isDefaultAdmin: true
        name: name
        typeId: typeId
        serviceHostingCosts: null
    identityEnrollments:
      example:
        ott:
          jwt: jwt
          id: id
          expiresAt: 2000-01-23T04:56:07.000+00:00
          token: token
        ottca:
          jwt: jwt
          caId: caId
          id: id
          ca:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          expiresAt: 2000-01-23T04:56:07.000+00:00
          token: token
        updb:
          jwt: jwt
          id: id
          expiresAt: 2000-01-23T04:56:07.000+00:00
          token: token
      properties:
        ott:
          $ref: "#/components/schemas/identityEnrollments_ott"
        ottca:
          $ref: "#/components/schemas/identityEnrollments_ottca"
        updb:
          $ref: "#/components/schemas/identityEnrollments_ott"
      type: object
    identityExtendCerts:
      example:
        clientCert: clientCert
        ca: ca
      properties:
        ca:
          description: A PEM encoded set of CA certificates
          type: string
        clientCert:
          description: A PEM encoded client certificate
          type: string
      type: object
    identityExtendEnrollmentEnvelope:
      example:
        data:
          clientCert: clientCert
          ca: ca
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          $ref: "#/components/schemas/identityExtendCerts"
        meta:
          $ref: "#/components/schemas/meta"
      type: object
    identityExtendEnrollmentRequest:
      properties:
        clientCertCsr:
          type: string
      required:
      - clientCertCsr
      type: object
    identityExtendValidateEnrollmentRequest:
      properties:
        clientCert:
          description: A PEM encoded client certificate previously returned after
            an extension request
          type: string
      required:
      - clientCert
      type: object
    jwk:
      example:
        oth:
        - r: r
          d: d
          t: t
        - r: r
          d: d
          t: t
        d: d
        e: e
        crv: crv
        use: use
        kid: kid
        x5c:
        - x5c
        - x5c
        dp: dp
        dq: dq
        "n": "n"
        p: p
        kty: kty
        q: q
        x5t#S256: x5t#S256
        x5t: x5t
        key_ops:
        - key_ops
        - key_ops
        qi: qi
        x: x
        x5u: x5u
        "y": "y"
        alg: alg
      properties:
        alg:
          description: Algorithm intended for use with the key.
          type: string
        crv:
          description: Curve for ECC Public Keys.
          type: string
        d:
          description: ECC Private Key or RSA Private Exponent.
          type: string
        dp:
          description: First Factor CRT Exponent for RSA.
          type: string
        dq:
          description: Second Factor CRT Exponent for RSA.
          type: string
        e:
          description: Exponent for RSA Public Key.
          type: string
        key_ops:
          description: "Intended key operations, e.g., sign, verify."
          items:
            type: string
          type: array
        kid:
          description: Key ID.
          type: string
        kty:
          description: Key Type.
          type: string
        "n":
          description: Modulus for RSA Public Key.
          type: string
        oth:
          description: Other Primes Info not represented by the first two primes.
          items:
            $ref: "#/components/schemas/otherPrime"
          type: array
        p:
          description: First Prime Factor for RSA.
          type: string
        q:
          description: Second Prime Factor for RSA.
          type: string
        qi:
          description: First CRT Coefficient for RSA.
          type: string
        use:
          description: "Public key use, e.g., sig (signature) or enc (encryption)."
          type: string
        x:
          description: X Coordinate for ECC Public Keys.
          type: string
        x5c:
          description: X.509 Certificate Chain.
          items:
            type: string
          type: array
        x5t:
          description: X.509 Certificate SHA-1 Thumbprint.
          type: string
        x5t#S256:
          description: X.509 Certificate SHA-256 Thumbprint.
          type: string
        x5u:
          description: X.509 URL.
          type: string
        "y":
          description: Y Coordinate for ECC Public Keys.
          type: string
      required:
      - kty
      type: object
    jwks:
      example:
        keys:
        - oth:
          - r: r
            d: d
            t: t
          - r: r
            d: d
            t: t
          d: d
          e: e
          crv: crv
          use: use
          kid: kid
          x5c:
          - x5c
          - x5c
          dp: dp
          dq: dq
          "n": "n"
          p: p
          kty: kty
          q: q
          x5t#S256: x5t#S256
          x5t: x5t
          key_ops:
          - key_ops
          - key_ops
          qi: qi
          x: x
          x5u: x5u
          "y": "y"
          alg: alg
        - oth:
          - r: r
            d: d
            t: t
          - r: r
            d: d
            t: t
          d: d
          e: e
          crv: crv
          use: use
          kid: kid
          x5c:
          - x5c
          - x5c
          dp: dp
          dq: dq
          "n": "n"
          p: p
          kty: kty
          q: q
          x5t#S256: x5t#S256
          x5t: x5t
          key_ops:
          - key_ops
          - key_ops
          qi: qi
          x: x
          x5u: x5u
          "y": "y"
          alg: alg
      properties:
        keys:
          items:
            $ref: "#/components/schemas/jwk"
          type: array
      type: object
    link:
      description: A link to another resource
      example:
        method: method
        comment: comment
        href: https://openapi-generator.tech
      properties:
        comment:
          type: string
        href:
          format: uri
          type: string
        method:
          type: string
      required:
      - href
      type: object
    links:
      additionalProperties:
        $ref: "#/components/schemas/link"
      description: A map of named links
      type: object
      x-omitempty: false
    listAuthenticatorsEnvelope:
      example:
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          method: method
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          identity:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          identityId: identityId
          fingerprint: fingerprint
          certPem: certPem
          id: id
          isIssuedByNetwork: true
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
          username: username
        - createdAt: 2000-01-23T04:56:07.000+00:00
          method: method
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          identity:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          identityId: identityId
          fingerprint: fingerprint
          certPem: certPem
          id: id
          isIssuedByNetwork: true
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
          username: username
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          description: An array of authenticator resources
          items:
            $ref: "#/components/schemas/authenticatorDetail"
          type: array
        meta:
          $ref: "#/components/schemas/meta"
      type: object
    listClientExternalJwtSignersEnvelope:
      example:
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          audience: audience
          clientId: clientId
          externalAuthUrl: http://example.com/aeiou
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          openIdConfigurationUrl: openIdConfigurationUrl
          name: MyApps Signer
          targetToken: ACCESS
          id: id
          scopes:
          - scopes
          - scopes
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          audience: audience
          clientId: clientId
          externalAuthUrl: http://example.com/aeiou
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          openIdConfigurationUrl: openIdConfigurationUrl
          name: MyApps Signer
          targetToken: ACCESS
          id: id
          scopes:
          - scopes
          - scopes
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          description: An array of External JWT Signers resources
          items:
            $ref: "#/components/schemas/clientExternalJwtSignerDetail"
          type: array
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    listClientTerminatorsEnvelope:
      example:
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          identity: identity
          routerId: routerId
          service:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          id: id
          serviceId: serviceId
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          identity: identity
          routerId: routerId
          service:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          id: id
          serviceId: serviceId
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          items:
            $ref: "#/components/schemas/terminatorClientDetail"
          type: array
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    listControllersEnvelope:
      example:
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          apiAddresses: null
          fingerprint: fingerprint
          name: name
          ctrlAddress: ctrlAddress
          certPem: certPem
          isOnline: true
          id: id
          lastJoinedAt: 2000-01-23T04:56:07.000+00:00
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          apiAddresses: null
          fingerprint: fingerprint
          name: name
          ctrlAddress: ctrlAddress
          certPem: certPem
          isOnline: true
          id: id
          lastJoinedAt: 2000-01-23T04:56:07.000+00:00
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          description: An array of controller resources
          items:
            $ref: "#/components/schemas/controllerDetail"
          type: array
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    listCurrentApiSessionCertificatesEnvelope:
      example:
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          subject: subject
          certificate: certificate
          fingerprint: fingerprint
          id: id
          validFrom: 2000-01-23T04:56:07.000+00:00
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
          validTo: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          subject: subject
          certificate: certificate
          fingerprint: fingerprint
          id: id
          validFrom: 2000-01-23T04:56:07.000+00:00
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
          validTo: 2000-01-23T04:56:07.000+00:00
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          items:
            $ref: "#/components/schemas/currentApiSessionCertificateDetail"
          type: array
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    listCurrentApiSessionServiceUpdatesEnvelope:
      example:
        data:
          lastChangeAt: 2000-01-23T04:56:07.000+00:00
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          $ref: "#/components/schemas/currentApiSessionServiceUpdateList"
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    listCurrentIdentityEdgeRoutersEnvelope:
      example:
        data:
        - cost: 5248
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          noTraversal: true
          isOnline: true
          supportedProtocols:
            key: supportedProtocols
          appData: {}
          tags: {}
          createdAt: 2000-01-23T04:56:07.000+00:00
          hostname: hostname
          name: name
          disabled: true
          id: id
          syncStatus: syncStatus
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - cost: 5248
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          noTraversal: true
          isOnline: true
          supportedProtocols:
            key: supportedProtocols
          appData: {}
          tags: {}
          createdAt: 2000-01-23T04:56:07.000+00:00
          hostname: hostname
          name: name
          disabled: true
          id: id
          syncStatus: syncStatus
          updatedAt: 2000-01-23T04:56:07.000+00:00
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          description: A list of edge router resources
          items:
            $ref: "#/components/schemas/currentIdentityEdgeRouterDetail"
          type: array
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    listEnumeratedCapabilitiesEnvelope:
      example:
        data:
        - OIDC_AUTH
        - OIDC_AUTH
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          items:
            $ref: "#/components/schemas/capabilities"
          type: array
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    listNetworkJWTsEnvelope:
      example:
        data:
        - name: name
          token: token
        - name: name
          token: token
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          description: An array of network JWTs
          items:
            $ref: "#/components/schemas/networkJWT"
          type: array
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    listProtocols:
      additionalProperties:
        $ref: "#/components/schemas/protocol"
      type: object
    listProtocolsEnvelope:
      example:
        data:
          key:
            address: address
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          additionalProperties:
            $ref: "#/components/schemas/protocol"
          type: object
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    listServiceEdgeRoutersEnvelope:
      example:
        data:
          edgeRouters:
          - hostname: hostname
            cost: 5248
            name: name
            noTraversal: true
            disabled: true
            isOnline: true
            supportedProtocols:
              key: supportedProtocols
            appData: {}
            syncStatus: syncStatus
          - hostname: hostname
            cost: 5248
            name: name
            noTraversal: true
            disabled: true
            isOnline: true
            supportedProtocols:
              key: supportedProtocols
            appData: {}
            syncStatus: syncStatus
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          $ref: "#/components/schemas/serviceEdgeRouters"
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    listServicesEnvelope:
      example:
        data:
        - maxIdleTimeMillis: 0
          configs:
          - configs
          - configs
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          encryptionRequired: true
          terminatorStrategy: terminatorStrategy
          tags: {}
          createdAt: 2000-01-23T04:56:07.000+00:00
          roleAttributes:
          - null
          - null
          postureQueries:
          - policyId: policyId
            postureQueries:
            - timeoutRemaining: 1
              createdAt: 2000-01-23T04:56:07.000+00:00
              process:
                path: path
                osType: Windows
              processes:
              - path: path
                osType: Windows
              - path: path
                osType: Windows
              _links:
                key:
                  method: method
                  comment: comment
                  href: https://openapi-generator.tech
              id: id
              isPassing: true
              timeout: 6
              tags: {}
              updatedAt: 2000-01-23T04:56:07.000+00:00
              queryType: OS
            - timeoutRemaining: 1
              createdAt: 2000-01-23T04:56:07.000+00:00
              process:
                path: path
                osType: Windows
              processes:
              - path: path
                osType: Windows
              - path: path
                osType: Windows
              _links:
                key:
                  method: method
                  comment: comment
                  href: https://openapi-generator.tech
              id: id
              isPassing: true
              timeout: 6
              tags: {}
              updatedAt: 2000-01-23T04:56:07.000+00:00
              queryType: OS
            policyType: null
            isPassing: true
          - policyId: policyId
            postureQueries:
            - timeoutRemaining: 1
              createdAt: 2000-01-23T04:56:07.000+00:00
              process:
                path: path
                osType: Windows
              processes:
              - path: path
                osType: Windows
              - path: path
                osType: Windows
              _links:
                key:
                  method: method
                  comment: comment
                  href: https://openapi-generator.tech
              id: id
              isPassing: true
              timeout: 6
              tags: {}
              updatedAt: 2000-01-23T04:56:07.000+00:00
              queryType: OS
            - timeoutRemaining: 1
              createdAt: 2000-01-23T04:56:07.000+00:00
              process:
                path: path
                osType: Windows
              processes:
              - path: path
                osType: Windows
              - path: path
                osType: Windows
              _links:
                key:
                  method: method
                  comment: comment
                  href: https://openapi-generator.tech
              id: id
              isPassing: true
              timeout: 6
              tags: {}
              updatedAt: 2000-01-23T04:56:07.000+00:00
              queryType: OS
            policyType: null
            isPassing: true
          permissions:
          - Dial
          - Dial
          name: name
          id: id
          config:
            key:
              key: "{}"
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - maxIdleTimeMillis: 0
          configs:
          - configs
          - configs
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          encryptionRequired: true
          terminatorStrategy: terminatorStrategy
          tags: {}
          createdAt: 2000-01-23T04:56:07.000+00:00
          roleAttributes:
          - null
          - null
          postureQueries:
          - policyId: policyId
            postureQueries:
            - timeoutRemaining: 1
              createdAt: 2000-01-23T04:56:07.000+00:00
              process:
                path: path
                osType: Windows
              processes:
              - path: path
                osType: Windows
              - path: path
                osType: Windows
              _links:
                key:
                  method: method
                  comment: comment
                  href: https://openapi-generator.tech
              id: id
              isPassing: true
              timeout: 6
              tags: {}
              updatedAt: 2000-01-23T04:56:07.000+00:00
              queryType: OS
            - timeoutRemaining: 1
              createdAt: 2000-01-23T04:56:07.000+00:00
              process:
                path: path
                osType: Windows
              processes:
              - path: path
                osType: Windows
              - path: path
                osType: Windows
              _links:
                key:
                  method: method
                  comment: comment
                  href: https://openapi-generator.tech
              id: id
              isPassing: true
              timeout: 6
              tags: {}
              updatedAt: 2000-01-23T04:56:07.000+00:00
              queryType: OS
            policyType: null
            isPassing: true
          - policyId: policyId
            postureQueries:
            - timeoutRemaining: 1
              createdAt: 2000-01-23T04:56:07.000+00:00
              process:
                path: path
                osType: Windows
              processes:
              - path: path
                osType: Windows
              - path: path
                osType: Windows
              _links:
                key:
                  method: method
                  comment: comment
                  href: https://openapi-generator.tech
              id: id
              isPassing: true
              timeout: 6
              tags: {}
              updatedAt: 2000-01-23T04:56:07.000+00:00
              queryType: OS
            - timeoutRemaining: 1
              createdAt: 2000-01-23T04:56:07.000+00:00
              process:
                path: path
                osType: Windows
              processes:
              - path: path
                osType: Windows
              - path: path
                osType: Windows
              _links:
                key:
                  method: method
                  comment: comment
                  href: https://openapi-generator.tech
              id: id
              isPassing: true
              timeout: 6
              tags: {}
              updatedAt: 2000-01-23T04:56:07.000+00:00
              queryType: OS
            policyType: null
            isPassing: true
          permissions:
          - Dial
          - Dial
          name: name
          id: id
          config:
            key:
              key: "{}"
          updatedAt: 2000-01-23T04:56:07.000+00:00
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          items:
            $ref: "#/components/schemas/serviceDetail"
          type: array
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    listSessionsEnvelope:
      example:
        data:
        - _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          type: Dial
          tags: {}
          token: token
          createdAt: 2000-01-23T04:56:07.000+00:00
          apiSession:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          edgeRouters:
          - hostname: hostname
            urls:
              key: urls
            cost: 5248
            name: name
            noTraversal: true
            disabled: true
            isOnline: true
            supportedProtocols:
              key: supportedProtocols
            appData: {}
            syncStatus: syncStatus
          - hostname: hostname
            urls:
              key: urls
            cost: 5248
            name: name
            noTraversal: true
            disabled: true
            isOnline: true
            supportedProtocols:
              key: supportedProtocols
            appData: {}
            syncStatus: syncStatus
          identityId: identityId
          service:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          id: id
          serviceId: serviceId
          apiSessionId: apiSessionId
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          type: Dial
          tags: {}
          token: token
          createdAt: 2000-01-23T04:56:07.000+00:00
          apiSession:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          edgeRouters:
          - hostname: hostname
            urls:
              key: urls
            cost: 5248
            name: name
            noTraversal: true
            disabled: true
            isOnline: true
            supportedProtocols:
              key: supportedProtocols
            appData: {}
            syncStatus: syncStatus
          - hostname: hostname
            urls:
              key: urls
            cost: 5248
            name: name
            noTraversal: true
            disabled: true
            isOnline: true
            supportedProtocols:
              key: supportedProtocols
            appData: {}
            syncStatus: syncStatus
          identityId: identityId
          service:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          id: id
          serviceId: serviceId
          apiSessionId: apiSessionId
          updatedAt: 2000-01-23T04:56:07.000+00:00
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          items:
            $ref: "#/components/schemas/sessionDetail"
          type: array
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    listSpecsEnvelope:
      example:
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          name: name
          id: id
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          name: name
          id: id
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          items:
            $ref: "#/components/schemas/specDetail"
          type: array
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    listVersionEnvelope:
      example:
        data:
          runtimeVersion: go1.13.5
          capabilities:
          - capabilities
          - capabilities
          apiVersions:
            key:
              key:
                path: path
                apiBaseUrls:
                - apiBaseUrls
                - apiBaseUrls
                version: version
          buildDate: 2020-02-11 16:09:08
          version: v0.9.0
          revision: ea556fc18740
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          $ref: "#/components/schemas/version"
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    meta:
      example:
        apiEnrollmentVersion: apiEnrollmentVersion
        apiVersion: apiVersion
        pagination:
          offset: 6.027456183070403
          limit: 0.8008281904610115
          totalCount: 1.4658129805029452
        filterableFields:
        - filterableFields
        - filterableFields
      properties:
        apiEnrollmentVersion:
          type: string
        apiVersion:
          type: string
        filterableFields:
          items:
            type: string
          type: array
          x-omitempty: true
        pagination:
          $ref: "#/components/schemas/pagination"
      type: object
    mfaCode:
      properties:
        code:
          type: string
      required:
      - code
      type: object
    mfaFormats:
      enum:
      - numeric
      - alpha
      - alphaNumeric
      type: string
    mfaProviders:
      enum:
      - ziti
      - url
      type: string
    networkJWT:
      allOf:
      - properties:
          name:
            type: string
          token:
            type: string
        required:
        - name
        - token
        type: object
      description: A network JWT
      example:
        name: name
        token: token
    networkJWTList:
      description: An array of network JWTs
      items:
        $ref: "#/components/schemas/networkJWT"
      type: array
    nonceChallenge:
      properties:
        keyId:
          type: string
        nonce:
          format: uuid
          type: string
      required:
      - keyId
      - nonce
      type: object
    nonceSignature:
      example:
        signature: signature
        caPool: caPool
        kid: kid
        algorithm: algorithm
      properties:
        algorithm:
          type: string
        caPool:
          type: string
        kid:
          type: string
        signature:
          type: string
      required:
      - algorithm
      - caPool
      - kid
      - signature
      type: object
    osType:
      enum:
      - Windows
      - WindowsServer
      - Android
      - iOS
      - Linux
      - macOS
      type: string
    otherPrime:
      example:
        r: r
        d: d
        t: t
      properties:
        d:
          description: Factor CRT exponent.
          type: string
        r:
          description: Prime factor.
          type: string
        t:
          description: Factor CRT coefficient.
          type: string
      type: object
    ottEnrollmentRequest:
      properties:
        clientCsr:
          type: string
        token:
          type: string
      type: object
    pagination:
      example:
        offset: 6.027456183070403
        limit: 0.8008281904610115
        totalCount: 1.4658129805029452
      properties:
        limit:
          format: int64
          type: number
        offset:
          format: int64
          type: number
        totalCount:
          format: int64
          type: number
      required:
      - limit
      - offset
      - totalCount
      type: object
    password:
      maxLength: 100
      minLength: 5
      type: string
    passwordNullable:
      maxLength: 100
      minLength: 5
      nullable: true
      type: string
      x-nullable: true
    postureCheckType:
      enum:
      - OS
      - PROCESS
      - DOMAIN
      - MAC
      - MFA
      - PROCESS_MULTI
      type: string
    postureQueries:
      example:
        policyId: policyId
        postureQueries:
        - timeoutRemaining: 1
          createdAt: 2000-01-23T04:56:07.000+00:00
          process:
            path: path
            osType: Windows
          processes:
          - path: path
            osType: Windows
          - path: path
            osType: Windows
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          id: id
          isPassing: true
          timeout: 6
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
          queryType: OS
        - timeoutRemaining: 1
          createdAt: 2000-01-23T04:56:07.000+00:00
          process:
            path: path
            osType: Windows
          processes:
          - path: path
            osType: Windows
          - path: path
            osType: Windows
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          id: id
          isPassing: true
          timeout: 6
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
          queryType: OS
        policyType: null
        isPassing: true
      properties:
        isPassing:
          type: boolean
        policyId:
          type: string
        policyType:
          $ref: "#/components/schemas/dialBind"
        postureQueries:
          items:
            $ref: "#/components/schemas/postureQuery"
          type: array
      required:
      - isPassing
      - policyId
      - postureQueries
      type: object
    postureQuery:
      allOf:
      - $ref: "#/components/schemas/baseEntity"
      - properties:
          isPassing:
            type: boolean
          process:
            $ref: "#/components/schemas/postureQueryProcess"
          processes:
            items:
              $ref: "#/components/schemas/postureQueryProcess"
            type: array
          queryType:
            $ref: "#/components/schemas/postureCheckType"
          timeout:
            type: integer
          timeoutRemaining:
            type: integer
        required:
        - isPassing
        - queryType
        - timeout
        - timeoutRemaining
        type: object
      example:
        timeoutRemaining: 1
        createdAt: 2000-01-23T04:56:07.000+00:00
        process:
          path: path
          osType: Windows
        processes:
        - path: path
          osType: Windows
        - path: path
          osType: Windows
        _links:
          key:
            method: method
            comment: comment
            href: https://openapi-generator.tech
        id: id
        isPassing: true
        timeout: 6
        tags: {}
        updatedAt: 2000-01-23T04:56:07.000+00:00
        queryType: OS
    postureQueryProcess:
      example:
        path: path
        osType: Windows
      properties:
        osType:
          $ref: "#/components/schemas/osType"
        path:
          type: string
      type: object
    postureResponse:
      example:
        services:
        - timeoutRemaining: 6
          name: name
          id: id
          postureQueryType: postureQueryType
          timeout: 0
        - timeoutRemaining: 6
          name: name
          id: id
          postureQueryType: postureQueryType
          timeout: 0
      properties:
        services:
          items:
            $ref: "#/components/schemas/postureResponseService"
          type: array
      required:
      - services
      type: object
    postureResponseCreate:
      discriminator:
        propertyName: typeId
      properties:
        id:
          type: string
        typeId:
          $ref: "#/components/schemas/postureCheckType"
      required:
      - id
      - typeId
      type: object
    postureResponseDomainCreate:
      allOf:
      - $ref: "#/components/schemas/postureResponseCreate"
      - properties:
          domain:
            type: string
        required:
        - domain
        type: object
      x-class: DOMAIN
    postureResponseEndpointStateCreate:
      allOf:
      - $ref: "#/components/schemas/postureResponseCreate"
      - properties:
          unlocked:
            type: boolean
          woken:
            type: boolean
        type: object
      x-class: ENDPOINT_STATE
    postureResponseEnvelope:
      example:
        data:
          services:
          - timeoutRemaining: 6
            name: name
            id: id
            postureQueryType: postureQueryType
            timeout: 0
          - timeoutRemaining: 6
            name: name
            id: id
            postureQueryType: postureQueryType
            timeout: 0
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          $ref: "#/components/schemas/postureResponse"
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    postureResponseMacAddressCreate:
      allOf:
      - $ref: "#/components/schemas/postureResponseCreate"
      - properties:
          macAddresses:
            items:
              type: string
            type: array
        required:
        - macAddresses
        type: object
      x-class: MAC
    postureResponseOperatingSystemCreate:
      allOf:
      - $ref: "#/components/schemas/postureResponseCreate"
      - properties:
          build:
            type: string
          type:
            type: string
          version:
            type: string
        required:
        - type
        - version
        type: object
      x-class: OS
    postureResponseProcessCreate:
      allOf:
      - $ref: "#/components/schemas/postureResponseCreate"
      - properties:
          hash:
            type: string
          isRunning:
            type: boolean
          path:
            type: string
          signerFingerprints:
            items:
              type: string
            type: array
        type: object
      x-class: PROCESS
    postureResponseService:
      example:
        timeoutRemaining: 6
        name: name
        id: id
        postureQueryType: postureQueryType
        timeout: 0
      properties:
        id:
          type: string
        name:
          type: string
        postureQueryType:
          type: string
        timeout:
          type: integer
        timeoutRemaining:
          type: integer
      required:
      - id
      - name
      - postureQueryType
      - timeout
      - timeoutRemaining
      type: object
    protocol:
      example:
        address: address
      properties:
        address:
          type: string
      required:
      - address
      type: object
    routerExtendEnrollmentRequest:
      properties:
        certCsr:
          type: string
        serverCertCsr:
          type: string
      required:
      - certCsr
      - serverCertCsr
      type: object
    sdkInfo:
      description: SDK information an authenticating client may provide
      example:
        appVersion: appVersion
        appId: appId
        type: type
        branch: branch
        version: version
        revision: revision
      properties:
        appId:
          maxLength: 255
          type: string
        appVersion:
          maxLength: 255
          type: string
        branch:
          maxLength: 255
          type: string
        revision:
          maxLength: 255
          type: string
        type:
          maxLength: 255
          type: string
        version:
          maxLength: 255
          type: string
      type: object
    serviceDetail:
      allOf:
      - $ref: "#/components/schemas/baseEntity"
      - properties:
          config:
            additionalProperties:
              additionalProperties:
                properties: {}
                type: object
              type: object
            description: map of config data for this service keyed by the config type
              name. Only configs of the types requested will be returned.
            type: object
          configs:
            items:
              type: string
            type: array
          encryptionRequired:
            description: "Describes whether connections must support end-to-end encryption\
              \ on both sides of the connection. Read-only property, set at create."
            type: boolean
          maxIdleTimeMillis:
            type: integer
          name:
            type: string
          permissions:
            $ref: "#/components/schemas/dialBindArray"
          postureQueries:
            items:
              $ref: "#/components/schemas/postureQueries"
            type: array
          roleAttributes:
            $ref: "#/components/schemas/attributes"
          terminatorStrategy:
            type: string
        required:
        - config
        - configs
        - encryptionRequired
        - maxIdleTimeMillis
        - name
        - permissions
        - postureQueries
        - roleAttributes
        - terminatorStrategy
        type: object
      example:
        maxIdleTimeMillis: 0
        configs:
        - configs
        - configs
        _links:
          key:
            method: method
            comment: comment
            href: https://openapi-generator.tech
        encryptionRequired: true
        terminatorStrategy: terminatorStrategy
        tags: {}
        createdAt: 2000-01-23T04:56:07.000+00:00
        roleAttributes:
        - null
        - null
        postureQueries:
        - policyId: policyId
          postureQueries:
          - timeoutRemaining: 1
            createdAt: 2000-01-23T04:56:07.000+00:00
            process:
              path: path
              osType: Windows
            processes:
            - path: path
              osType: Windows
            - path: path
              osType: Windows
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            id: id
            isPassing: true
            timeout: 6
            tags: {}
            updatedAt: 2000-01-23T04:56:07.000+00:00
            queryType: OS
          - timeoutRemaining: 1
            createdAt: 2000-01-23T04:56:07.000+00:00
            process:
              path: path
              osType: Windows
            processes:
            - path: path
              osType: Windows
            - path: path
              osType: Windows
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            id: id
            isPassing: true
            timeout: 6
            tags: {}
            updatedAt: 2000-01-23T04:56:07.000+00:00
            queryType: OS
          policyType: null
          isPassing: true
        - policyId: policyId
          postureQueries:
          - timeoutRemaining: 1
            createdAt: 2000-01-23T04:56:07.000+00:00
            process:
              path: path
              osType: Windows
            processes:
            - path: path
              osType: Windows
            - path: path
              osType: Windows
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            id: id
            isPassing: true
            timeout: 6
            tags: {}
            updatedAt: 2000-01-23T04:56:07.000+00:00
            queryType: OS
          - timeoutRemaining: 1
            createdAt: 2000-01-23T04:56:07.000+00:00
            process:
              path: path
              osType: Windows
            processes:
            - path: path
              osType: Windows
            - path: path
              osType: Windows
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            id: id
            isPassing: true
            timeout: 6
            tags: {}
            updatedAt: 2000-01-23T04:56:07.000+00:00
            queryType: OS
          policyType: null
          isPassing: true
        permissions:
        - Dial
        - Dial
        name: name
        id: id
        config:
          key:
            key: "{}"
        updatedAt: 2000-01-23T04:56:07.000+00:00
    serviceEdgeRouters:
      example:
        edgeRouters:
        - hostname: hostname
          cost: 5248
          name: name
          noTraversal: true
          disabled: true
          isOnline: true
          supportedProtocols:
            key: supportedProtocols
          appData: {}
          syncStatus: syncStatus
        - hostname: hostname
          cost: 5248
          name: name
          noTraversal: true
          disabled: true
          isOnline: true
          supportedProtocols:
            key: supportedProtocols
          appData: {}
          syncStatus: syncStatus
      properties:
        edgeRouters:
          items:
            $ref: "#/components/schemas/commonEdgeRouterProperties"
          type: array
      type: object
    serviceList:
      items:
        $ref: "#/components/schemas/serviceDetail"
      type: array
    servicePatch:
      properties:
        configs:
          items:
            type: string
          type: array
        encryptionRequired:
          description: "Describes whether connections must support end-to-end encryption\
            \ on both sides of the connection. Read-only property, set at create."
          type: boolean
        maxIdleTimeMillis:
          type: integer
        name:
          type: string
        roleAttributes:
          items:
            type: string
          type: array
        tags:
          $ref: "#/components/schemas/tags"
        terminatorStrategy:
          type: string
      type: object
    serviceUpdate:
      properties:
        configs:
          items:
            type: string
          type: array
        encryptionRequired:
          description: "Describes whether connections must support end-to-end encryption\
            \ on both sides of the connection. Read-only property, set at create."
          type: boolean
        maxIdleTimeMillis:
          type: integer
        name:
          type: string
        roleAttributes:
          items:
            type: string
          type: array
        tags:
          $ref: "#/components/schemas/tags"
        terminatorStrategy:
          type: string
      required:
      - name
      type: object
    sessionCreate:
      properties:
        serviceId:
          type: string
        tags:
          $ref: "#/components/schemas/tags"
        type:
          $ref: "#/components/schemas/dialBind"
      type: object
    sessionCreateEnvelope:
      example:
        data:
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          type: Dial
          tags: {}
          token: token
          createdAt: 2000-01-23T04:56:07.000+00:00
          apiSession:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          edgeRouters:
          - hostname: hostname
            urls:
              key: urls
            cost: 5248
            name: name
            noTraversal: true
            disabled: true
            isOnline: true
            supportedProtocols:
              key: supportedProtocols
            appData: {}
            syncStatus: syncStatus
          - hostname: hostname
            urls:
              key: urls
            cost: 5248
            name: name
            noTraversal: true
            disabled: true
            isOnline: true
            supportedProtocols:
              key: supportedProtocols
            appData: {}
            syncStatus: syncStatus
          identityId: identityId
          service:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          id: id
          serviceId: serviceId
          apiSessionId: apiSessionId
          updatedAt: 2000-01-23T04:56:07.000+00:00
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          $ref: "#/components/schemas/sessionDetail"
        meta:
          $ref: "#/components/schemas/meta"
      type: object
    sessionDetail:
      allOf:
      - $ref: "#/components/schemas/baseEntity"
      - properties:
          apiSession:
            $ref: "#/components/schemas/entityRef"
          apiSessionId:
            type: string
          edgeRouters:
            items:
              $ref: "#/components/schemas/sessionEdgeRouter"
            type: array
          identityId:
            type: string
          service:
            $ref: "#/components/schemas/entityRef"
          serviceId:
            type: string
          token:
            type: string
          type:
            $ref: "#/components/schemas/dialBind"
        required:
        - apiSession
        - apiSessionId
        - edgeRouters
        - identityId
        - service
        - serviceId
        - token
        - type
        type: object
      example:
        _links:
          key:
            method: method
            comment: comment
            href: https://openapi-generator.tech
        type: Dial
        tags: {}
        token: token
        createdAt: 2000-01-23T04:56:07.000+00:00
        apiSession:
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          name: name
          id: id
          entity: entity
        edgeRouters:
        - hostname: hostname
          urls:
            key: urls
          cost: 5248
          name: name
          noTraversal: true
          disabled: true
          isOnline: true
          supportedProtocols:
            key: supportedProtocols
          appData: {}
          syncStatus: syncStatus
        - hostname: hostname
          urls:
            key: urls
          cost: 5248
          name: name
          noTraversal: true
          disabled: true
          isOnline: true
          supportedProtocols:
            key: supportedProtocols
          appData: {}
          syncStatus: syncStatus
        identityId: identityId
        service:
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          name: name
          id: id
          entity: entity
        id: id
        serviceId: serviceId
        apiSessionId: apiSessionId
        updatedAt: 2000-01-23T04:56:07.000+00:00
    sessionEdgeRouter:
      allOf:
      - $ref: "#/components/schemas/commonEdgeRouterProperties"
      - properties:
          urls:
            additionalProperties:
              type: string
            type: object
        required:
        - urls
        type: object
      example:
        hostname: hostname
        urls:
          key: urls
        cost: 5248
        name: name
        noTraversal: true
        disabled: true
        isOnline: true
        supportedProtocols:
          key: supportedProtocols
        appData: {}
        syncStatus: syncStatus
    sessionList:
      items:
        $ref: "#/components/schemas/sessionDetail"
      type: array
    specBodyDetail:
      type: string
    specDetail:
      allOf:
      - $ref: "#/components/schemas/baseEntity"
      - properties:
          name:
            type: string
        required:
        - name
        type: object
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        _links:
          key:
            method: method
            comment: comment
            href: https://openapi-generator.tech
        name: name
        id: id
        tags: {}
        updatedAt: 2000-01-23T04:56:07.000+00:00
    specList:
      items:
        $ref: "#/components/schemas/specDetail"
      type: array
    subTags:
      additionalProperties:
        properties: {}
        type: object
      type: object
    tags:
      allOf:
      - $ref: "#/components/schemas/subTags"
      description: "A map of user defined fields and values. The values are limited\
        \ to the following types/values: null, string, boolean"
      example: {}
    targetToken:
      description: Defines the target token type
      enum:
      - ACCESS
      - ID
      nullable: true
      type: string
      x-nullable: true
    terminatorClientDetail:
      allOf:
      - $ref: "#/components/schemas/baseEntity"
      - properties:
          identity:
            type: string
          routerId:
            type: string
          service:
            $ref: "#/components/schemas/entityRef"
          serviceId:
            type: string
        required:
        - identity
        - routerId
        - service
        - serviceId
        type: object
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        _links:
          key:
            method: method
            comment: comment
            href: https://openapi-generator.tech
        identity: identity
        routerId: routerId
        service:
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          name: name
          id: id
          entity: entity
        id: id
        serviceId: serviceId
        tags: {}
        updatedAt: 2000-01-23T04:56:07.000+00:00
    terminatorClientList:
      items:
        $ref: "#/components/schemas/terminatorClientDetail"
      type: array
    terminatorCost:
      maximum: 65535
      minimum: 0
      type: integer
    terminatorCostMap:
      additionalProperties:
        $ref: "#/components/schemas/terminatorCost"
      type: object
    terminatorPrecedence:
      enum:
      - default
      - required
      - failed
      type: string
    terminatorPrecedenceMap:
      additionalProperties:
        $ref: "#/components/schemas/terminatorPrecedence"
      type: object
    username:
      maxLength: 100
      minLength: 4
      type: string
    usernameNullable:
      maxLength: 100
      minLength: 4
      nullable: true
      type: string
      x-nullable: true
    version:
      example:
        runtimeVersion: go1.13.5
        capabilities:
        - capabilities
        - capabilities
        apiVersions:
          key:
            key:
              path: path
              apiBaseUrls:
              - apiBaseUrls
              - apiBaseUrls
              version: version
        buildDate: 2020-02-11 16:09:08
        version: v0.9.0
        revision: ea556fc18740
      properties:
        apiVersions:
          additionalProperties:
            additionalProperties:
              $ref: "#/components/schemas/apiVersion"
            type: object
          type: object
        buildDate:
          example: 2020-02-11 16:09:08
          type: string
        capabilities:
          items:
            type: string
          type: array
        revision:
          example: ea556fc18740
          type: string
        runtimeVersion:
          example: go1.13.5
          type: string
        version:
          example: v0.9.0
          type: string
      type: object
    enrollUpdb_request:
      properties:
        password:
          maxLength: 100
          minLength: 5
          type: string
        username:
          maxLength: 100
          minLength: 4
          type: string
      type: object
    identityAuthenticators_cert:
      example:
        fingerprint: fingerprint
        id: id
      properties:
        fingerprint:
          type: string
        id:
          type: string
      type: object
    identityAuthenticators_updb:
      example:
        id: id
        username: username
      properties:
        id:
          type: string
        username:
          type: string
      type: object
    identityEnrollments_ott:
      example:
        jwt: jwt
        id: id
        expiresAt: 2000-01-23T04:56:07.000+00:00
        token: token
      properties:
        expiresAt:
          format: date-time
          type: string
        id:
          type: string
        jwt:
          type: string
        token:
          type: string
      type: object
    identityEnrollments_ottca:
      example:
        jwt: jwt
        caId: caId
        id: id
        ca:
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          name: name
          id: id
          entity: entity
        expiresAt: 2000-01-23T04:56:07.000+00:00
        token: token
      properties:
        ca:
          $ref: "#/components/schemas/entityRef"
        caId:
          type: string
        expiresAt:
          format: date-time
          type: string
        id:
          type: string
        jwt:
          type: string
        token:
          type: string
      type: object
  securitySchemes:
    oauth2:
      flows:
        authorizationCode:
          authorizationUrl: /oidc/authorize
          scopes:
            openid: openid
          tokenUrl: /oidc/token
      type: oauth2
    ztSession:
      description: An API Key that is provided post authentication
      in: header
      name: zt-session
      type: apiKey
x-original-swagger-version: "2.0"

