/*
 * Ziti Edge Client
 * OpenZiti Edge Client API
 *
 * The version of the OpenAPI document: 0.26.42
 * Contact: help@openziti.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openziti.edge.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonValue;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.StringJoiner;
import org.openapitools.jackson.nullable.JsonNullable;
import org.openziti.edge.ApiClient;

/** Detail of a specific identity */
@JsonPropertyOrder({
    IdentityDetail.JSON_PROPERTY_LINKS,
    IdentityDetail.JSON_PROPERTY_CREATED_AT,
    IdentityDetail.JSON_PROPERTY_ID,
    IdentityDetail.JSON_PROPERTY_TAGS,
    IdentityDetail.JSON_PROPERTY_UPDATED_AT,
    IdentityDetail.JSON_PROPERTY_APP_DATA,
    IdentityDetail.JSON_PROPERTY_AUTH_POLICY,
    IdentityDetail.JSON_PROPERTY_AUTH_POLICY_ID,
    IdentityDetail.JSON_PROPERTY_AUTHENTICATORS,
    IdentityDetail.JSON_PROPERTY_DEFAULT_HOSTING_COST,
    IdentityDetail.JSON_PROPERTY_DEFAULT_HOSTING_PRECEDENCE,
    IdentityDetail.JSON_PROPERTY_DISABLED,
    IdentityDetail.JSON_PROPERTY_DISABLED_AT,
    IdentityDetail.JSON_PROPERTY_DISABLED_UNTIL,
    IdentityDetail.JSON_PROPERTY_EDGE_ROUTER_CONNECTION_STATUS,
    IdentityDetail.JSON_PROPERTY_ENROLLMENT,
    IdentityDetail.JSON_PROPERTY_ENV_INFO,
    IdentityDetail.JSON_PROPERTY_EXTERNAL_ID,
    IdentityDetail.JSON_PROPERTY_HAS_API_SESSION,
    IdentityDetail.JSON_PROPERTY_HAS_EDGE_ROUTER_CONNECTION,
    IdentityDetail.JSON_PROPERTY_IS_ADMIN,
    IdentityDetail.JSON_PROPERTY_IS_DEFAULT_ADMIN,
    IdentityDetail.JSON_PROPERTY_IS_MFA_ENABLED,
    IdentityDetail.JSON_PROPERTY_NAME,
    IdentityDetail.JSON_PROPERTY_ROLE_ATTRIBUTES,
    IdentityDetail.JSON_PROPERTY_SDK_INFO,
    IdentityDetail.JSON_PROPERTY_SERVICE_HOSTING_COSTS,
    IdentityDetail.JSON_PROPERTY_SERVICE_HOSTING_PRECEDENCES,
    IdentityDetail.JSON_PROPERTY_TYPE,
    IdentityDetail.JSON_PROPERTY_TYPE_ID
})
@javax.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        date = "2025-03-17T12:51:45.850758361-04:00[America/New_York]",
        comments = "Generator version: 7.11.0")
public class IdentityDetail {
    public static final String JSON_PROPERTY_LINKS = "_links";
    @javax.annotation.Nonnull private Map<String, Link> links = new HashMap<>();

    public static final String JSON_PROPERTY_CREATED_AT = "createdAt";
    @javax.annotation.Nonnull private OffsetDateTime createdAt;

    public static final String JSON_PROPERTY_ID = "id";
    @javax.annotation.Nonnull private String id;

    public static final String JSON_PROPERTY_TAGS = "tags";
    @javax.annotation.Nullable private Tags tags;

    public static final String JSON_PROPERTY_UPDATED_AT = "updatedAt";
    @javax.annotation.Nonnull private OffsetDateTime updatedAt;

    public static final String JSON_PROPERTY_APP_DATA = "appData";
    @javax.annotation.Nullable private Tags appData;

    public static final String JSON_PROPERTY_AUTH_POLICY = "authPolicy";
    @javax.annotation.Nonnull private EntityRef authPolicy;

    public static final String JSON_PROPERTY_AUTH_POLICY_ID = "authPolicyId";
    @javax.annotation.Nonnull private String authPolicyId;

    public static final String JSON_PROPERTY_AUTHENTICATORS = "authenticators";
    @javax.annotation.Nonnull private IdentityAuthenticators authenticators;

    public static final String JSON_PROPERTY_DEFAULT_HOSTING_COST = "defaultHostingCost";
    @javax.annotation.Nonnull private Integer defaultHostingCost;

    public static final String JSON_PROPERTY_DEFAULT_HOSTING_PRECEDENCE =
            "defaultHostingPrecedence";
    @javax.annotation.Nullable private TerminatorPrecedence defaultHostingPrecedence;

    public static final String JSON_PROPERTY_DISABLED = "disabled";
    @javax.annotation.Nonnull private Boolean disabled;

    public static final String JSON_PROPERTY_DISABLED_AT = "disabledAt";
    private JsonNullable<OffsetDateTime> disabledAt = JsonNullable.<OffsetDateTime>undefined();

    public static final String JSON_PROPERTY_DISABLED_UNTIL = "disabledUntil";
    private JsonNullable<OffsetDateTime> disabledUntil = JsonNullable.<OffsetDateTime>undefined();

    /** Gets or Sets edgeRouterConnectionStatus */
    public enum EdgeRouterConnectionStatusEnum {
        ONLINE(String.valueOf("online")),

        OFFLINE(String.valueOf("offline")),

        UNKNOWN(String.valueOf("unknown"));

        private String value;

        EdgeRouterConnectionStatusEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static EdgeRouterConnectionStatusEnum fromValue(String value) {
            for (EdgeRouterConnectionStatusEnum b : EdgeRouterConnectionStatusEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
    }

    public static final String JSON_PROPERTY_EDGE_ROUTER_CONNECTION_STATUS =
            "edgeRouterConnectionStatus";
    @javax.annotation.Nonnull private EdgeRouterConnectionStatusEnum edgeRouterConnectionStatus;

    public static final String JSON_PROPERTY_ENROLLMENT = "enrollment";
    @javax.annotation.Nonnull private IdentityEnrollments enrollment;

    public static final String JSON_PROPERTY_ENV_INFO = "envInfo";
    @javax.annotation.Nonnull private EnvInfo envInfo;

    public static final String JSON_PROPERTY_EXTERNAL_ID = "externalId";
    @javax.annotation.Nullable private String externalId;

    public static final String JSON_PROPERTY_HAS_API_SESSION = "hasApiSession";
    @javax.annotation.Nonnull private Boolean hasApiSession;

    public static final String JSON_PROPERTY_HAS_EDGE_ROUTER_CONNECTION = "hasEdgeRouterConnection";
    @javax.annotation.Nonnull private Boolean hasEdgeRouterConnection;

    public static final String JSON_PROPERTY_IS_ADMIN = "isAdmin";
    @javax.annotation.Nonnull private Boolean isAdmin;

    public static final String JSON_PROPERTY_IS_DEFAULT_ADMIN = "isDefaultAdmin";
    @javax.annotation.Nonnull private Boolean isDefaultAdmin;

    public static final String JSON_PROPERTY_IS_MFA_ENABLED = "isMfaEnabled";
    @javax.annotation.Nonnull private Boolean isMfaEnabled;

    public static final String JSON_PROPERTY_NAME = "name";
    @javax.annotation.Nonnull private String name;

    public static final String JSON_PROPERTY_ROLE_ATTRIBUTES = "roleAttributes";
    @javax.annotation.Nullable private List<String> roleAttributes;

    public static final String JSON_PROPERTY_SDK_INFO = "sdkInfo";
    @javax.annotation.Nonnull private SdkInfo sdkInfo;

    public static final String JSON_PROPERTY_SERVICE_HOSTING_COSTS = "serviceHostingCosts";
    @javax.annotation.Nonnull private Map<String, Integer> serviceHostingCosts = new HashMap<>();

    public static final String JSON_PROPERTY_SERVICE_HOSTING_PRECEDENCES =
            "serviceHostingPrecedences";

    @javax.annotation.Nonnull
    private Map<String, TerminatorPrecedence> serviceHostingPrecedences = new HashMap<>();

    public static final String JSON_PROPERTY_TYPE = "type";
    @javax.annotation.Nonnull private EntityRef type;

    public static final String JSON_PROPERTY_TYPE_ID = "typeId";
    @javax.annotation.Nonnull private String typeId;

    public IdentityDetail() {}

    public IdentityDetail links(@javax.annotation.Nonnull Map<String, Link> links) {
        this.links = links;
        return this;
    }

    public IdentityDetail putLinksItem(String key, Link linksItem) {
        if (this.links == null) {
            this.links = new HashMap<>();
        }
        this.links.put(key, linksItem);
        return this;
    }

    /**
     * A map of named links
     *
     * @return links
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_LINKS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Map<String, Link> getLinks() {
        return links;
    }

    @JsonProperty(JSON_PROPERTY_LINKS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setLinks(@javax.annotation.Nonnull Map<String, Link> links) {
        this.links = links;
    }

    public IdentityDetail createdAt(@javax.annotation.Nonnull OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Get createdAt
     *
     * @return createdAt
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_CREATED_AT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public OffsetDateTime getCreatedAt() {
        return createdAt;
    }

    @JsonProperty(JSON_PROPERTY_CREATED_AT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setCreatedAt(@javax.annotation.Nonnull OffsetDateTime createdAt) {
        this.createdAt = createdAt;
    }

    public IdentityDetail id(@javax.annotation.Nonnull String id) {
        this.id = id;
        return this;
    }

    /**
     * Get id
     *
     * @return id
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getId() {
        return id;
    }

    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setId(@javax.annotation.Nonnull String id) {
        this.id = id;
    }

    public IdentityDetail tags(@javax.annotation.Nullable Tags tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Get tags
     *
     * @return tags
     */
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_TAGS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Tags getTags() {
        return tags;
    }

    @JsonProperty(JSON_PROPERTY_TAGS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTags(@javax.annotation.Nullable Tags tags) {
        this.tags = tags;
    }

    public IdentityDetail updatedAt(@javax.annotation.Nonnull OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    /**
     * Get updatedAt
     *
     * @return updatedAt
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_UPDATED_AT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public OffsetDateTime getUpdatedAt() {
        return updatedAt;
    }

    @JsonProperty(JSON_PROPERTY_UPDATED_AT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setUpdatedAt(@javax.annotation.Nonnull OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    public IdentityDetail appData(@javax.annotation.Nullable Tags appData) {
        this.appData = appData;
        return this;
    }

    /**
     * Get appData
     *
     * @return appData
     */
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_APP_DATA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Tags getAppData() {
        return appData;
    }

    @JsonProperty(JSON_PROPERTY_APP_DATA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAppData(@javax.annotation.Nullable Tags appData) {
        this.appData = appData;
    }

    public IdentityDetail authPolicy(@javax.annotation.Nonnull EntityRef authPolicy) {
        this.authPolicy = authPolicy;
        return this;
    }

    /**
     * Get authPolicy
     *
     * @return authPolicy
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_AUTH_POLICY)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public EntityRef getAuthPolicy() {
        return authPolicy;
    }

    @JsonProperty(JSON_PROPERTY_AUTH_POLICY)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setAuthPolicy(@javax.annotation.Nonnull EntityRef authPolicy) {
        this.authPolicy = authPolicy;
    }

    public IdentityDetail authPolicyId(@javax.annotation.Nonnull String authPolicyId) {
        this.authPolicyId = authPolicyId;
        return this;
    }

    /**
     * Get authPolicyId
     *
     * @return authPolicyId
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_AUTH_POLICY_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getAuthPolicyId() {
        return authPolicyId;
    }

    @JsonProperty(JSON_PROPERTY_AUTH_POLICY_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setAuthPolicyId(@javax.annotation.Nonnull String authPolicyId) {
        this.authPolicyId = authPolicyId;
    }

    public IdentityDetail authenticators(
            @javax.annotation.Nonnull IdentityAuthenticators authenticators) {
        this.authenticators = authenticators;
        return this;
    }

    /**
     * Get authenticators
     *
     * @return authenticators
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_AUTHENTICATORS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public IdentityAuthenticators getAuthenticators() {
        return authenticators;
    }

    @JsonProperty(JSON_PROPERTY_AUTHENTICATORS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setAuthenticators(@javax.annotation.Nonnull IdentityAuthenticators authenticators) {
        this.authenticators = authenticators;
    }

    public IdentityDetail defaultHostingCost(@javax.annotation.Nonnull Integer defaultHostingCost) {
        this.defaultHostingCost = defaultHostingCost;
        return this;
    }

    /**
     * Get defaultHostingCost minimum: 0 maximum: 65535
     *
     * @return defaultHostingCost
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_DEFAULT_HOSTING_COST)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Integer getDefaultHostingCost() {
        return defaultHostingCost;
    }

    @JsonProperty(JSON_PROPERTY_DEFAULT_HOSTING_COST)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setDefaultHostingCost(@javax.annotation.Nonnull Integer defaultHostingCost) {
        this.defaultHostingCost = defaultHostingCost;
    }

    public IdentityDetail defaultHostingPrecedence(
            @javax.annotation.Nullable TerminatorPrecedence defaultHostingPrecedence) {
        this.defaultHostingPrecedence = defaultHostingPrecedence;
        return this;
    }

    /**
     * Get defaultHostingPrecedence
     *
     * @return defaultHostingPrecedence
     */
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_DEFAULT_HOSTING_PRECEDENCE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public TerminatorPrecedence getDefaultHostingPrecedence() {
        return defaultHostingPrecedence;
    }

    @JsonProperty(JSON_PROPERTY_DEFAULT_HOSTING_PRECEDENCE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDefaultHostingPrecedence(
            @javax.annotation.Nullable TerminatorPrecedence defaultHostingPrecedence) {
        this.defaultHostingPrecedence = defaultHostingPrecedence;
    }

    public IdentityDetail disabled(@javax.annotation.Nonnull Boolean disabled) {
        this.disabled = disabled;
        return this;
    }

    /**
     * Get disabled
     *
     * @return disabled
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_DISABLED)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Boolean getDisabled() {
        return disabled;
    }

    @JsonProperty(JSON_PROPERTY_DISABLED)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setDisabled(@javax.annotation.Nonnull Boolean disabled) {
        this.disabled = disabled;
    }

    public IdentityDetail disabledAt(@javax.annotation.Nullable OffsetDateTime disabledAt) {
        this.disabledAt = JsonNullable.<OffsetDateTime>of(disabledAt);
        return this;
    }

    /**
     * Get disabledAt
     *
     * @return disabledAt
     */
    @javax.annotation.Nullable
    @JsonIgnore
    public OffsetDateTime getDisabledAt() {
        return disabledAt.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_DISABLED_AT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public JsonNullable<OffsetDateTime> getDisabledAt_JsonNullable() {
        return disabledAt;
    }

    @JsonProperty(JSON_PROPERTY_DISABLED_AT)
    public void setDisabledAt_JsonNullable(JsonNullable<OffsetDateTime> disabledAt) {
        this.disabledAt = disabledAt;
    }

    public void setDisabledAt(@javax.annotation.Nullable OffsetDateTime disabledAt) {
        this.disabledAt = JsonNullable.<OffsetDateTime>of(disabledAt);
    }

    public IdentityDetail disabledUntil(@javax.annotation.Nullable OffsetDateTime disabledUntil) {
        this.disabledUntil = JsonNullable.<OffsetDateTime>of(disabledUntil);
        return this;
    }

    /**
     * Get disabledUntil
     *
     * @return disabledUntil
     */
    @javax.annotation.Nullable
    @JsonIgnore
    public OffsetDateTime getDisabledUntil() {
        return disabledUntil.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_DISABLED_UNTIL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public JsonNullable<OffsetDateTime> getDisabledUntil_JsonNullable() {
        return disabledUntil;
    }

    @JsonProperty(JSON_PROPERTY_DISABLED_UNTIL)
    public void setDisabledUntil_JsonNullable(JsonNullable<OffsetDateTime> disabledUntil) {
        this.disabledUntil = disabledUntil;
    }

    public void setDisabledUntil(@javax.annotation.Nullable OffsetDateTime disabledUntil) {
        this.disabledUntil = JsonNullable.<OffsetDateTime>of(disabledUntil);
    }

    public IdentityDetail edgeRouterConnectionStatus(
            @javax.annotation.Nonnull EdgeRouterConnectionStatusEnum edgeRouterConnectionStatus) {
        this.edgeRouterConnectionStatus = edgeRouterConnectionStatus;
        return this;
    }

    /**
     * Get edgeRouterConnectionStatus
     *
     * @return edgeRouterConnectionStatus
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_EDGE_ROUTER_CONNECTION_STATUS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public EdgeRouterConnectionStatusEnum getEdgeRouterConnectionStatus() {
        return edgeRouterConnectionStatus;
    }

    @JsonProperty(JSON_PROPERTY_EDGE_ROUTER_CONNECTION_STATUS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setEdgeRouterConnectionStatus(
            @javax.annotation.Nonnull EdgeRouterConnectionStatusEnum edgeRouterConnectionStatus) {
        this.edgeRouterConnectionStatus = edgeRouterConnectionStatus;
    }

    public IdentityDetail enrollment(@javax.annotation.Nonnull IdentityEnrollments enrollment) {
        this.enrollment = enrollment;
        return this;
    }

    /**
     * Get enrollment
     *
     * @return enrollment
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_ENROLLMENT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public IdentityEnrollments getEnrollment() {
        return enrollment;
    }

    @JsonProperty(JSON_PROPERTY_ENROLLMENT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setEnrollment(@javax.annotation.Nonnull IdentityEnrollments enrollment) {
        this.enrollment = enrollment;
    }

    public IdentityDetail envInfo(@javax.annotation.Nonnull EnvInfo envInfo) {
        this.envInfo = envInfo;
        return this;
    }

    /**
     * Get envInfo
     *
     * @return envInfo
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_ENV_INFO)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public EnvInfo getEnvInfo() {
        return envInfo;
    }

    @JsonProperty(JSON_PROPERTY_ENV_INFO)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setEnvInfo(@javax.annotation.Nonnull EnvInfo envInfo) {
        this.envInfo = envInfo;
    }

    public IdentityDetail externalId(@javax.annotation.Nullable String externalId) {
        this.externalId = externalId;
        return this;
    }

    /**
     * Get externalId
     *
     * @return externalId
     */
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_EXTERNAL_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getExternalId() {
        return externalId;
    }

    @JsonProperty(JSON_PROPERTY_EXTERNAL_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setExternalId(@javax.annotation.Nullable String externalId) {
        this.externalId = externalId;
    }

    public IdentityDetail hasApiSession(@javax.annotation.Nonnull Boolean hasApiSession) {
        this.hasApiSession = hasApiSession;
        return this;
    }

    /**
     * Get hasApiSession
     *
     * @return hasApiSession
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_HAS_API_SESSION)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Boolean getHasApiSession() {
        return hasApiSession;
    }

    @JsonProperty(JSON_PROPERTY_HAS_API_SESSION)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setHasApiSession(@javax.annotation.Nonnull Boolean hasApiSession) {
        this.hasApiSession = hasApiSession;
    }

    public IdentityDetail hasEdgeRouterConnection(
            @javax.annotation.Nonnull Boolean hasEdgeRouterConnection) {
        this.hasEdgeRouterConnection = hasEdgeRouterConnection;
        return this;
    }

    /**
     * Get hasEdgeRouterConnection
     *
     * @return hasEdgeRouterConnection
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_HAS_EDGE_ROUTER_CONNECTION)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Boolean getHasEdgeRouterConnection() {
        return hasEdgeRouterConnection;
    }

    @JsonProperty(JSON_PROPERTY_HAS_EDGE_ROUTER_CONNECTION)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setHasEdgeRouterConnection(
            @javax.annotation.Nonnull Boolean hasEdgeRouterConnection) {
        this.hasEdgeRouterConnection = hasEdgeRouterConnection;
    }

    public IdentityDetail isAdmin(@javax.annotation.Nonnull Boolean isAdmin) {
        this.isAdmin = isAdmin;
        return this;
    }

    /**
     * Get isAdmin
     *
     * @return isAdmin
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_IS_ADMIN)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Boolean getIsAdmin() {
        return isAdmin;
    }

    @JsonProperty(JSON_PROPERTY_IS_ADMIN)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setIsAdmin(@javax.annotation.Nonnull Boolean isAdmin) {
        this.isAdmin = isAdmin;
    }

    public IdentityDetail isDefaultAdmin(@javax.annotation.Nonnull Boolean isDefaultAdmin) {
        this.isDefaultAdmin = isDefaultAdmin;
        return this;
    }

    /**
     * Get isDefaultAdmin
     *
     * @return isDefaultAdmin
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_IS_DEFAULT_ADMIN)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Boolean getIsDefaultAdmin() {
        return isDefaultAdmin;
    }

    @JsonProperty(JSON_PROPERTY_IS_DEFAULT_ADMIN)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setIsDefaultAdmin(@javax.annotation.Nonnull Boolean isDefaultAdmin) {
        this.isDefaultAdmin = isDefaultAdmin;
    }

    public IdentityDetail isMfaEnabled(@javax.annotation.Nonnull Boolean isMfaEnabled) {
        this.isMfaEnabled = isMfaEnabled;
        return this;
    }

    /**
     * Get isMfaEnabled
     *
     * @return isMfaEnabled
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_IS_MFA_ENABLED)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Boolean getIsMfaEnabled() {
        return isMfaEnabled;
    }

    @JsonProperty(JSON_PROPERTY_IS_MFA_ENABLED)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setIsMfaEnabled(@javax.annotation.Nonnull Boolean isMfaEnabled) {
        this.isMfaEnabled = isMfaEnabled;
    }

    public IdentityDetail name(@javax.annotation.Nonnull String name) {
        this.name = name;
        return this;
    }

    /**
     * Get name
     *
     * @return name
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getName() {
        return name;
    }

    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setName(@javax.annotation.Nonnull String name) {
        this.name = name;
    }

    public IdentityDetail roleAttributes(@javax.annotation.Nullable List<String> roleAttributes) {
        this.roleAttributes = roleAttributes;
        return this;
    }

    public IdentityDetail addRoleAttributesItem(String roleAttributesItem) {
        if (this.roleAttributes == null) {
            this.roleAttributes = new ArrayList<>();
        }
        this.roleAttributes.add(roleAttributesItem);
        return this;
    }

    /**
     * A set of strings used to loosly couple this resource to policies
     *
     * @return roleAttributes
     */
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_ROLE_ATTRIBUTES)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public List<String> getRoleAttributes() {
        return roleAttributes;
    }

    @JsonProperty(JSON_PROPERTY_ROLE_ATTRIBUTES)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setRoleAttributes(@javax.annotation.Nullable List<String> roleAttributes) {
        this.roleAttributes = roleAttributes;
    }

    public IdentityDetail sdkInfo(@javax.annotation.Nonnull SdkInfo sdkInfo) {
        this.sdkInfo = sdkInfo;
        return this;
    }

    /**
     * Get sdkInfo
     *
     * @return sdkInfo
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_SDK_INFO)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public SdkInfo getSdkInfo() {
        return sdkInfo;
    }

    @JsonProperty(JSON_PROPERTY_SDK_INFO)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setSdkInfo(@javax.annotation.Nonnull SdkInfo sdkInfo) {
        this.sdkInfo = sdkInfo;
    }

    public IdentityDetail serviceHostingCosts(
            @javax.annotation.Nonnull Map<String, Integer> serviceHostingCosts) {
        this.serviceHostingCosts = serviceHostingCosts;
        return this;
    }

    public IdentityDetail putServiceHostingCostsItem(String key, Integer serviceHostingCostsItem) {
        if (this.serviceHostingCosts == null) {
            this.serviceHostingCosts = new HashMap<>();
        }
        this.serviceHostingCosts.put(key, serviceHostingCostsItem);
        return this;
    }

    /**
     * Get serviceHostingCosts
     *
     * @return serviceHostingCosts
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_SERVICE_HOSTING_COSTS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Map<String, Integer> getServiceHostingCosts() {
        return serviceHostingCosts;
    }

    @JsonProperty(JSON_PROPERTY_SERVICE_HOSTING_COSTS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setServiceHostingCosts(
            @javax.annotation.Nonnull Map<String, Integer> serviceHostingCosts) {
        this.serviceHostingCosts = serviceHostingCosts;
    }

    public IdentityDetail serviceHostingPrecedences(
            @javax.annotation.Nonnull Map<String, TerminatorPrecedence> serviceHostingPrecedences) {
        this.serviceHostingPrecedences = serviceHostingPrecedences;
        return this;
    }

    public IdentityDetail putServiceHostingPrecedencesItem(
            String key, TerminatorPrecedence serviceHostingPrecedencesItem) {
        if (this.serviceHostingPrecedences == null) {
            this.serviceHostingPrecedences = new HashMap<>();
        }
        this.serviceHostingPrecedences.put(key, serviceHostingPrecedencesItem);
        return this;
    }

    /**
     * Get serviceHostingPrecedences
     *
     * @return serviceHostingPrecedences
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_SERVICE_HOSTING_PRECEDENCES)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Map<String, TerminatorPrecedence> getServiceHostingPrecedences() {
        return serviceHostingPrecedences;
    }

    @JsonProperty(JSON_PROPERTY_SERVICE_HOSTING_PRECEDENCES)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setServiceHostingPrecedences(
            @javax.annotation.Nonnull Map<String, TerminatorPrecedence> serviceHostingPrecedences) {
        this.serviceHostingPrecedences = serviceHostingPrecedences;
    }

    public IdentityDetail type(@javax.annotation.Nonnull EntityRef type) {
        this.type = type;
        return this;
    }

    /**
     * Get type
     *
     * @return type
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public EntityRef getType() {
        return type;
    }

    @JsonProperty(JSON_PROPERTY_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setType(@javax.annotation.Nonnull EntityRef type) {
        this.type = type;
    }

    public IdentityDetail typeId(@javax.annotation.Nonnull String typeId) {
        this.typeId = typeId;
        return this;
    }

    /**
     * Get typeId
     *
     * @return typeId
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_TYPE_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getTypeId() {
        return typeId;
    }

    @JsonProperty(JSON_PROPERTY_TYPE_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setTypeId(@javax.annotation.Nonnull String typeId) {
        this.typeId = typeId;
    }

    /** Return true if this identityDetail object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        IdentityDetail identityDetail = (IdentityDetail) o;
        return Objects.equals(this.links, identityDetail.links)
                && Objects.equals(this.createdAt, identityDetail.createdAt)
                && Objects.equals(this.id, identityDetail.id)
                && Objects.equals(this.tags, identityDetail.tags)
                && Objects.equals(this.updatedAt, identityDetail.updatedAt)
                && Objects.equals(this.appData, identityDetail.appData)
                && Objects.equals(this.authPolicy, identityDetail.authPolicy)
                && Objects.equals(this.authPolicyId, identityDetail.authPolicyId)
                && Objects.equals(this.authenticators, identityDetail.authenticators)
                && Objects.equals(this.defaultHostingCost, identityDetail.defaultHostingCost)
                && Objects.equals(
                        this.defaultHostingPrecedence, identityDetail.defaultHostingPrecedence)
                && Objects.equals(this.disabled, identityDetail.disabled)
                && equalsNullable(this.disabledAt, identityDetail.disabledAt)
                && equalsNullable(this.disabledUntil, identityDetail.disabledUntil)
                && Objects.equals(
                        this.edgeRouterConnectionStatus, identityDetail.edgeRouterConnectionStatus)
                && Objects.equals(this.enrollment, identityDetail.enrollment)
                && Objects.equals(this.envInfo, identityDetail.envInfo)
                && Objects.equals(this.externalId, identityDetail.externalId)
                && Objects.equals(this.hasApiSession, identityDetail.hasApiSession)
                && Objects.equals(
                        this.hasEdgeRouterConnection, identityDetail.hasEdgeRouterConnection)
                && Objects.equals(this.isAdmin, identityDetail.isAdmin)
                && Objects.equals(this.isDefaultAdmin, identityDetail.isDefaultAdmin)
                && Objects.equals(this.isMfaEnabled, identityDetail.isMfaEnabled)
                && Objects.equals(this.name, identityDetail.name)
                && Objects.equals(this.roleAttributes, identityDetail.roleAttributes)
                && Objects.equals(this.sdkInfo, identityDetail.sdkInfo)
                && Objects.equals(this.serviceHostingCosts, identityDetail.serviceHostingCosts)
                && Objects.equals(
                        this.serviceHostingPrecedences, identityDetail.serviceHostingPrecedences)
                && Objects.equals(this.type, identityDetail.type)
                && Objects.equals(this.typeId, identityDetail.typeId);
    }

    private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
        return a == b
                || (a != null
                        && b != null
                        && a.isPresent()
                        && b.isPresent()
                        && Objects.deepEquals(a.get(), b.get()));
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                links,
                createdAt,
                id,
                tags,
                updatedAt,
                appData,
                authPolicy,
                authPolicyId,
                authenticators,
                defaultHostingCost,
                defaultHostingPrecedence,
                disabled,
                hashCodeNullable(disabledAt),
                hashCodeNullable(disabledUntil),
                edgeRouterConnectionStatus,
                enrollment,
                envInfo,
                externalId,
                hasApiSession,
                hasEdgeRouterConnection,
                isAdmin,
                isDefaultAdmin,
                isMfaEnabled,
                name,
                roleAttributes,
                sdkInfo,
                serviceHostingCosts,
                serviceHostingPrecedences,
                type,
                typeId);
    }

    private static <T> int hashCodeNullable(JsonNullable<T> a) {
        if (a == null) {
            return 1;
        }
        return a.isPresent() ? Arrays.deepHashCode(new Object[] {a.get()}) : 31;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class IdentityDetail {\n");
        sb.append("    links: ").append(toIndentedString(links)).append("\n");
        sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
        sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
        sb.append("    appData: ").append(toIndentedString(appData)).append("\n");
        sb.append("    authPolicy: ").append(toIndentedString(authPolicy)).append("\n");
        sb.append("    authPolicyId: ").append(toIndentedString(authPolicyId)).append("\n");
        sb.append("    authenticators: ").append(toIndentedString(authenticators)).append("\n");
        sb.append("    defaultHostingCost: ")
                .append(toIndentedString(defaultHostingCost))
                .append("\n");
        sb.append("    defaultHostingPrecedence: ")
                .append(toIndentedString(defaultHostingPrecedence))
                .append("\n");
        sb.append("    disabled: ").append(toIndentedString(disabled)).append("\n");
        sb.append("    disabledAt: ").append(toIndentedString(disabledAt)).append("\n");
        sb.append("    disabledUntil: ").append(toIndentedString(disabledUntil)).append("\n");
        sb.append("    edgeRouterConnectionStatus: ")
                .append(toIndentedString(edgeRouterConnectionStatus))
                .append("\n");
        sb.append("    enrollment: ").append(toIndentedString(enrollment)).append("\n");
        sb.append("    envInfo: ").append(toIndentedString(envInfo)).append("\n");
        sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
        sb.append("    hasApiSession: ").append(toIndentedString(hasApiSession)).append("\n");
        sb.append("    hasEdgeRouterConnection: ")
                .append(toIndentedString(hasEdgeRouterConnection))
                .append("\n");
        sb.append("    isAdmin: ").append(toIndentedString(isAdmin)).append("\n");
        sb.append("    isDefaultAdmin: ").append(toIndentedString(isDefaultAdmin)).append("\n");
        sb.append("    isMfaEnabled: ").append(toIndentedString(isMfaEnabled)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    roleAttributes: ").append(toIndentedString(roleAttributes)).append("\n");
        sb.append("    sdkInfo: ").append(toIndentedString(sdkInfo)).append("\n");
        sb.append("    serviceHostingCosts: ")
                .append(toIndentedString(serviceHostingCosts))
                .append("\n");
        sb.append("    serviceHostingPrecedences: ")
                .append(toIndentedString(serviceHostingPrecedences))
                .append("\n");
        sb.append("    type: ").append(toIndentedString(type)).append("\n");
        sb.append("    typeId: ").append(toIndentedString(typeId)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `_links` to the URL query string
        if (getLinks() != null) {
            for (String _key : getLinks().keySet()) {
                if (getLinks().get(_key) != null) {
                    joiner.add(
                            getLinks()
                                    .get(_key)
                                    .toUrlQueryString(
                                            String.format(
                                                    "%s_links%s%s",
                                                    prefix,
                                                    suffix,
                                                    "".equals(suffix)
                                                            ? ""
                                                            : String.format(
                                                                    "%s%d%s",
                                                                    containerPrefix,
                                                                    _key,
                                                                    containerSuffix))));
                }
            }
        }

        // add `createdAt` to the URL query string
        if (getCreatedAt() != null) {
            joiner.add(
                    String.format(
                            "%screatedAt%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getCreatedAt()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `id` to the URL query string
        if (getId() != null) {
            joiner.add(
                    String.format(
                            "%sid%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getId()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `tags` to the URL query string
        if (getTags() != null) {
            joiner.add(getTags().toUrlQueryString(prefix + "tags" + suffix));
        }

        // add `updatedAt` to the URL query string
        if (getUpdatedAt() != null) {
            joiner.add(
                    String.format(
                            "%supdatedAt%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getUpdatedAt()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `appData` to the URL query string
        if (getAppData() != null) {
            joiner.add(getAppData().toUrlQueryString(prefix + "appData" + suffix));
        }

        // add `authPolicy` to the URL query string
        if (getAuthPolicy() != null) {
            joiner.add(getAuthPolicy().toUrlQueryString(prefix + "authPolicy" + suffix));
        }

        // add `authPolicyId` to the URL query string
        if (getAuthPolicyId() != null) {
            joiner.add(
                    String.format(
                            "%sauthPolicyId%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getAuthPolicyId()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `authenticators` to the URL query string
        if (getAuthenticators() != null) {
            joiner.add(getAuthenticators().toUrlQueryString(prefix + "authenticators" + suffix));
        }

        // add `defaultHostingCost` to the URL query string
        if (getDefaultHostingCost() != null) {
            joiner.add(
                    String.format(
                            "%sdefaultHostingCost%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getDefaultHostingCost()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `defaultHostingPrecedence` to the URL query string
        if (getDefaultHostingPrecedence() != null) {
            joiner.add(
                    String.format(
                            "%sdefaultHostingPrecedence%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getDefaultHostingPrecedence()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `disabled` to the URL query string
        if (getDisabled() != null) {
            joiner.add(
                    String.format(
                            "%sdisabled%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getDisabled()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `disabledAt` to the URL query string
        if (getDisabledAt() != null) {
            joiner.add(
                    String.format(
                            "%sdisabledAt%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getDisabledAt()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `disabledUntil` to the URL query string
        if (getDisabledUntil() != null) {
            joiner.add(
                    String.format(
                            "%sdisabledUntil%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getDisabledUntil()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `edgeRouterConnectionStatus` to the URL query string
        if (getEdgeRouterConnectionStatus() != null) {
            joiner.add(
                    String.format(
                            "%sedgeRouterConnectionStatus%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(
                                                    getEdgeRouterConnectionStatus()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `enrollment` to the URL query string
        if (getEnrollment() != null) {
            joiner.add(getEnrollment().toUrlQueryString(prefix + "enrollment" + suffix));
        }

        // add `envInfo` to the URL query string
        if (getEnvInfo() != null) {
            joiner.add(getEnvInfo().toUrlQueryString(prefix + "envInfo" + suffix));
        }

        // add `externalId` to the URL query string
        if (getExternalId() != null) {
            joiner.add(
                    String.format(
                            "%sexternalId%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getExternalId()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `hasApiSession` to the URL query string
        if (getHasApiSession() != null) {
            joiner.add(
                    String.format(
                            "%shasApiSession%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getHasApiSession()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `hasEdgeRouterConnection` to the URL query string
        if (getHasEdgeRouterConnection() != null) {
            joiner.add(
                    String.format(
                            "%shasEdgeRouterConnection%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getHasEdgeRouterConnection()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `isAdmin` to the URL query string
        if (getIsAdmin() != null) {
            joiner.add(
                    String.format(
                            "%sisAdmin%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getIsAdmin()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `isDefaultAdmin` to the URL query string
        if (getIsDefaultAdmin() != null) {
            joiner.add(
                    String.format(
                            "%sisDefaultAdmin%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getIsDefaultAdmin()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `isMfaEnabled` to the URL query string
        if (getIsMfaEnabled() != null) {
            joiner.add(
                    String.format(
                            "%sisMfaEnabled%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getIsMfaEnabled()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `name` to the URL query string
        if (getName() != null) {
            joiner.add(
                    String.format(
                            "%sname%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getName()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `roleAttributes` to the URL query string
        if (getRoleAttributes() != null) {
            for (int i = 0; i < getRoleAttributes().size(); i++) {
                joiner.add(
                        String.format(
                                "%sroleAttributes%s%s=%s",
                                prefix,
                                suffix,
                                "".equals(suffix)
                                        ? ""
                                        : String.format(
                                                "%s%d%s", containerPrefix, i, containerSuffix),
                                URLEncoder.encode(
                                                ApiClient.valueToString(getRoleAttributes().get(i)),
                                                StandardCharsets.UTF_8)
                                        .replaceAll("\\+", "%20")));
            }
        }

        // add `sdkInfo` to the URL query string
        if (getSdkInfo() != null) {
            joiner.add(getSdkInfo().toUrlQueryString(prefix + "sdkInfo" + suffix));
        }

        // add `serviceHostingCosts` to the URL query string
        if (getServiceHostingCosts() != null) {
            for (String _key : getServiceHostingCosts().keySet()) {
                joiner.add(
                        String.format(
                                "%sserviceHostingCosts%s%s=%s",
                                prefix,
                                suffix,
                                "".equals(suffix)
                                        ? ""
                                        : String.format(
                                                "%s%d%s", containerPrefix, _key, containerSuffix),
                                getServiceHostingCosts().get(_key),
                                URLEncoder.encode(
                                                ApiClient.valueToString(
                                                        getServiceHostingCosts().get(_key)),
                                                StandardCharsets.UTF_8)
                                        .replaceAll("\\+", "%20")));
            }
        }

        // add `serviceHostingPrecedences` to the URL query string
        if (getServiceHostingPrecedences() != null) {
            for (String _key : getServiceHostingPrecedences().keySet()) {
                joiner.add(
                        String.format(
                                "%sserviceHostingPrecedences%s%s=%s",
                                prefix,
                                suffix,
                                "".equals(suffix)
                                        ? ""
                                        : String.format(
                                                "%s%d%s", containerPrefix, _key, containerSuffix),
                                getServiceHostingPrecedences().get(_key),
                                URLEncoder.encode(
                                                ApiClient.valueToString(
                                                        getServiceHostingPrecedences().get(_key)),
                                                StandardCharsets.UTF_8)
                                        .replaceAll("\\+", "%20")));
            }
        }

        // add `type` to the URL query string
        if (getType() != null) {
            joiner.add(getType().toUrlQueryString(prefix + "type" + suffix));
        }

        // add `typeId` to the URL query string
        if (getTypeId() != null) {
            joiner.add(
                    String.format(
                            "%stypeId%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getTypeId()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        return joiner.toString();
    }
}
