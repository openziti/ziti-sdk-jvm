/*
 * Ziti Edge Client
 * OpenZiti Edge Client API
 *
 * The version of the OpenAPI document: 0.26.42
 * Contact: help@openziti.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openziti.edge.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.StringJoiner;
import org.openziti.edge.ApiClient;

/** A detail edge router resource */
@JsonPropertyOrder({
    CurrentIdentityEdgeRouterDetail.JSON_PROPERTY_LINKS,
    CurrentIdentityEdgeRouterDetail.JSON_PROPERTY_CREATED_AT,
    CurrentIdentityEdgeRouterDetail.JSON_PROPERTY_ID,
    CurrentIdentityEdgeRouterDetail.JSON_PROPERTY_TAGS,
    CurrentIdentityEdgeRouterDetail.JSON_PROPERTY_UPDATED_AT,
    CurrentIdentityEdgeRouterDetail.JSON_PROPERTY_APP_DATA,
    CurrentIdentityEdgeRouterDetail.JSON_PROPERTY_COST,
    CurrentIdentityEdgeRouterDetail.JSON_PROPERTY_DISABLED,
    CurrentIdentityEdgeRouterDetail.JSON_PROPERTY_HOSTNAME,
    CurrentIdentityEdgeRouterDetail.JSON_PROPERTY_IS_ONLINE,
    CurrentIdentityEdgeRouterDetail.JSON_PROPERTY_NAME,
    CurrentIdentityEdgeRouterDetail.JSON_PROPERTY_NO_TRAVERSAL,
    CurrentIdentityEdgeRouterDetail.JSON_PROPERTY_SUPPORTED_PROTOCOLS,
    CurrentIdentityEdgeRouterDetail.JSON_PROPERTY_SYNC_STATUS
})
@javax.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        date = "2025-03-17T12:51:45.850758361-04:00[America/New_York]",
        comments = "Generator version: 7.11.0")
public class CurrentIdentityEdgeRouterDetail {
    public static final String JSON_PROPERTY_LINKS = "_links";
    @javax.annotation.Nonnull private Map<String, Link> links = new HashMap<>();

    public static final String JSON_PROPERTY_CREATED_AT = "createdAt";
    @javax.annotation.Nonnull private OffsetDateTime createdAt;

    public static final String JSON_PROPERTY_ID = "id";
    @javax.annotation.Nonnull private String id;

    public static final String JSON_PROPERTY_TAGS = "tags";
    @javax.annotation.Nullable private Tags tags;

    public static final String JSON_PROPERTY_UPDATED_AT = "updatedAt";
    @javax.annotation.Nonnull private OffsetDateTime updatedAt;

    public static final String JSON_PROPERTY_APP_DATA = "appData";
    @javax.annotation.Nullable private Tags appData;

    public static final String JSON_PROPERTY_COST = "cost";
    @javax.annotation.Nullable private Integer cost;

    public static final String JSON_PROPERTY_DISABLED = "disabled";
    @javax.annotation.Nonnull private Boolean disabled;

    public static final String JSON_PROPERTY_HOSTNAME = "hostname";
    @javax.annotation.Nonnull private String hostname;

    public static final String JSON_PROPERTY_IS_ONLINE = "isOnline";
    @javax.annotation.Nonnull private Boolean isOnline;

    public static final String JSON_PROPERTY_NAME = "name";
    @javax.annotation.Nonnull private String name;

    public static final String JSON_PROPERTY_NO_TRAVERSAL = "noTraversal";
    @javax.annotation.Nullable private Boolean noTraversal;

    public static final String JSON_PROPERTY_SUPPORTED_PROTOCOLS = "supportedProtocols";
    @javax.annotation.Nonnull private Map<String, String> supportedProtocols = new HashMap<>();

    public static final String JSON_PROPERTY_SYNC_STATUS = "syncStatus";
    @javax.annotation.Nonnull private String syncStatus;

    public CurrentIdentityEdgeRouterDetail() {}

    public CurrentIdentityEdgeRouterDetail links(
            @javax.annotation.Nonnull Map<String, Link> links) {
        this.links = links;
        return this;
    }

    public CurrentIdentityEdgeRouterDetail putLinksItem(String key, Link linksItem) {
        if (this.links == null) {
            this.links = new HashMap<>();
        }
        this.links.put(key, linksItem);
        return this;
    }

    /**
     * A map of named links
     *
     * @return links
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_LINKS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Map<String, Link> getLinks() {
        return links;
    }

    @JsonProperty(JSON_PROPERTY_LINKS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setLinks(@javax.annotation.Nonnull Map<String, Link> links) {
        this.links = links;
    }

    public CurrentIdentityEdgeRouterDetail createdAt(
            @javax.annotation.Nonnull OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Get createdAt
     *
     * @return createdAt
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_CREATED_AT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public OffsetDateTime getCreatedAt() {
        return createdAt;
    }

    @JsonProperty(JSON_PROPERTY_CREATED_AT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setCreatedAt(@javax.annotation.Nonnull OffsetDateTime createdAt) {
        this.createdAt = createdAt;
    }

    public CurrentIdentityEdgeRouterDetail id(@javax.annotation.Nonnull String id) {
        this.id = id;
        return this;
    }

    /**
     * Get id
     *
     * @return id
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getId() {
        return id;
    }

    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setId(@javax.annotation.Nonnull String id) {
        this.id = id;
    }

    public CurrentIdentityEdgeRouterDetail tags(@javax.annotation.Nullable Tags tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Get tags
     *
     * @return tags
     */
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_TAGS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Tags getTags() {
        return tags;
    }

    @JsonProperty(JSON_PROPERTY_TAGS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTags(@javax.annotation.Nullable Tags tags) {
        this.tags = tags;
    }

    public CurrentIdentityEdgeRouterDetail updatedAt(
            @javax.annotation.Nonnull OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    /**
     * Get updatedAt
     *
     * @return updatedAt
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_UPDATED_AT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public OffsetDateTime getUpdatedAt() {
        return updatedAt;
    }

    @JsonProperty(JSON_PROPERTY_UPDATED_AT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setUpdatedAt(@javax.annotation.Nonnull OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    public CurrentIdentityEdgeRouterDetail appData(@javax.annotation.Nullable Tags appData) {
        this.appData = appData;
        return this;
    }

    /**
     * Get appData
     *
     * @return appData
     */
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_APP_DATA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Tags getAppData() {
        return appData;
    }

    @JsonProperty(JSON_PROPERTY_APP_DATA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAppData(@javax.annotation.Nullable Tags appData) {
        this.appData = appData;
    }

    public CurrentIdentityEdgeRouterDetail cost(@javax.annotation.Nullable Integer cost) {
        this.cost = cost;
        return this;
    }

    /**
     * Get cost minimum: 0 maximum: 65535
     *
     * @return cost
     */
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_COST)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Integer getCost() {
        return cost;
    }

    @JsonProperty(JSON_PROPERTY_COST)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setCost(@javax.annotation.Nullable Integer cost) {
        this.cost = cost;
    }

    public CurrentIdentityEdgeRouterDetail disabled(@javax.annotation.Nonnull Boolean disabled) {
        this.disabled = disabled;
        return this;
    }

    /**
     * Get disabled
     *
     * @return disabled
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_DISABLED)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Boolean getDisabled() {
        return disabled;
    }

    @JsonProperty(JSON_PROPERTY_DISABLED)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setDisabled(@javax.annotation.Nonnull Boolean disabled) {
        this.disabled = disabled;
    }

    public CurrentIdentityEdgeRouterDetail hostname(@javax.annotation.Nonnull String hostname) {
        this.hostname = hostname;
        return this;
    }

    /**
     * Get hostname
     *
     * @return hostname
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_HOSTNAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getHostname() {
        return hostname;
    }

    @JsonProperty(JSON_PROPERTY_HOSTNAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setHostname(@javax.annotation.Nonnull String hostname) {
        this.hostname = hostname;
    }

    public CurrentIdentityEdgeRouterDetail isOnline(@javax.annotation.Nonnull Boolean isOnline) {
        this.isOnline = isOnline;
        return this;
    }

    /**
     * Get isOnline
     *
     * @return isOnline
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_IS_ONLINE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Boolean getIsOnline() {
        return isOnline;
    }

    @JsonProperty(JSON_PROPERTY_IS_ONLINE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setIsOnline(@javax.annotation.Nonnull Boolean isOnline) {
        this.isOnline = isOnline;
    }

    public CurrentIdentityEdgeRouterDetail name(@javax.annotation.Nonnull String name) {
        this.name = name;
        return this;
    }

    /**
     * Get name
     *
     * @return name
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getName() {
        return name;
    }

    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setName(@javax.annotation.Nonnull String name) {
        this.name = name;
    }

    public CurrentIdentityEdgeRouterDetail noTraversal(
            @javax.annotation.Nullable Boolean noTraversal) {
        this.noTraversal = noTraversal;
        return this;
    }

    /**
     * Get noTraversal
     *
     * @return noTraversal
     */
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_NO_TRAVERSAL)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Boolean getNoTraversal() {
        return noTraversal;
    }

    @JsonProperty(JSON_PROPERTY_NO_TRAVERSAL)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setNoTraversal(@javax.annotation.Nullable Boolean noTraversal) {
        this.noTraversal = noTraversal;
    }

    public CurrentIdentityEdgeRouterDetail supportedProtocols(
            @javax.annotation.Nonnull Map<String, String> supportedProtocols) {
        this.supportedProtocols = supportedProtocols;
        return this;
    }

    public CurrentIdentityEdgeRouterDetail putSupportedProtocolsItem(
            String key, String supportedProtocolsItem) {
        if (this.supportedProtocols == null) {
            this.supportedProtocols = new HashMap<>();
        }
        this.supportedProtocols.put(key, supportedProtocolsItem);
        return this;
    }

    /**
     * Get supportedProtocols
     *
     * @return supportedProtocols
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_SUPPORTED_PROTOCOLS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Map<String, String> getSupportedProtocols() {
        return supportedProtocols;
    }

    @JsonProperty(JSON_PROPERTY_SUPPORTED_PROTOCOLS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setSupportedProtocols(
            @javax.annotation.Nonnull Map<String, String> supportedProtocols) {
        this.supportedProtocols = supportedProtocols;
    }

    public CurrentIdentityEdgeRouterDetail syncStatus(@javax.annotation.Nonnull String syncStatus) {
        this.syncStatus = syncStatus;
        return this;
    }

    /**
     * Get syncStatus
     *
     * @return syncStatus
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_SYNC_STATUS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getSyncStatus() {
        return syncStatus;
    }

    @JsonProperty(JSON_PROPERTY_SYNC_STATUS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setSyncStatus(@javax.annotation.Nonnull String syncStatus) {
        this.syncStatus = syncStatus;
    }

    /** Return true if this currentIdentityEdgeRouterDetail object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CurrentIdentityEdgeRouterDetail currentIdentityEdgeRouterDetail =
                (CurrentIdentityEdgeRouterDetail) o;
        return Objects.equals(this.links, currentIdentityEdgeRouterDetail.links)
                && Objects.equals(this.createdAt, currentIdentityEdgeRouterDetail.createdAt)
                && Objects.equals(this.id, currentIdentityEdgeRouterDetail.id)
                && Objects.equals(this.tags, currentIdentityEdgeRouterDetail.tags)
                && Objects.equals(this.updatedAt, currentIdentityEdgeRouterDetail.updatedAt)
                && Objects.equals(this.appData, currentIdentityEdgeRouterDetail.appData)
                && Objects.equals(this.cost, currentIdentityEdgeRouterDetail.cost)
                && Objects.equals(this.disabled, currentIdentityEdgeRouterDetail.disabled)
                && Objects.equals(this.hostname, currentIdentityEdgeRouterDetail.hostname)
                && Objects.equals(this.isOnline, currentIdentityEdgeRouterDetail.isOnline)
                && Objects.equals(this.name, currentIdentityEdgeRouterDetail.name)
                && Objects.equals(this.noTraversal, currentIdentityEdgeRouterDetail.noTraversal)
                && Objects.equals(
                        this.supportedProtocols, currentIdentityEdgeRouterDetail.supportedProtocols)
                && Objects.equals(this.syncStatus, currentIdentityEdgeRouterDetail.syncStatus);
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                links,
                createdAt,
                id,
                tags,
                updatedAt,
                appData,
                cost,
                disabled,
                hostname,
                isOnline,
                name,
                noTraversal,
                supportedProtocols,
                syncStatus);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class CurrentIdentityEdgeRouterDetail {\n");
        sb.append("    links: ").append(toIndentedString(links)).append("\n");
        sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
        sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
        sb.append("    appData: ").append(toIndentedString(appData)).append("\n");
        sb.append("    cost: ").append(toIndentedString(cost)).append("\n");
        sb.append("    disabled: ").append(toIndentedString(disabled)).append("\n");
        sb.append("    hostname: ").append(toIndentedString(hostname)).append("\n");
        sb.append("    isOnline: ").append(toIndentedString(isOnline)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    noTraversal: ").append(toIndentedString(noTraversal)).append("\n");
        sb.append("    supportedProtocols: ")
                .append(toIndentedString(supportedProtocols))
                .append("\n");
        sb.append("    syncStatus: ").append(toIndentedString(syncStatus)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `_links` to the URL query string
        if (getLinks() != null) {
            for (String _key : getLinks().keySet()) {
                if (getLinks().get(_key) != null) {
                    joiner.add(
                            getLinks()
                                    .get(_key)
                                    .toUrlQueryString(
                                            String.format(
                                                    "%s_links%s%s",
                                                    prefix,
                                                    suffix,
                                                    "".equals(suffix)
                                                            ? ""
                                                            : String.format(
                                                                    "%s%d%s",
                                                                    containerPrefix,
                                                                    _key,
                                                                    containerSuffix))));
                }
            }
        }

        // add `createdAt` to the URL query string
        if (getCreatedAt() != null) {
            joiner.add(
                    String.format(
                            "%screatedAt%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getCreatedAt()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `id` to the URL query string
        if (getId() != null) {
            joiner.add(
                    String.format(
                            "%sid%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getId()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `tags` to the URL query string
        if (getTags() != null) {
            joiner.add(getTags().toUrlQueryString(prefix + "tags" + suffix));
        }

        // add `updatedAt` to the URL query string
        if (getUpdatedAt() != null) {
            joiner.add(
                    String.format(
                            "%supdatedAt%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getUpdatedAt()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `appData` to the URL query string
        if (getAppData() != null) {
            joiner.add(getAppData().toUrlQueryString(prefix + "appData" + suffix));
        }

        // add `cost` to the URL query string
        if (getCost() != null) {
            joiner.add(
                    String.format(
                            "%scost%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getCost()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `disabled` to the URL query string
        if (getDisabled() != null) {
            joiner.add(
                    String.format(
                            "%sdisabled%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getDisabled()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `hostname` to the URL query string
        if (getHostname() != null) {
            joiner.add(
                    String.format(
                            "%shostname%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getHostname()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `isOnline` to the URL query string
        if (getIsOnline() != null) {
            joiner.add(
                    String.format(
                            "%sisOnline%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getIsOnline()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `name` to the URL query string
        if (getName() != null) {
            joiner.add(
                    String.format(
                            "%sname%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getName()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `noTraversal` to the URL query string
        if (getNoTraversal() != null) {
            joiner.add(
                    String.format(
                            "%snoTraversal%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getNoTraversal()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `supportedProtocols` to the URL query string
        if (getSupportedProtocols() != null) {
            for (String _key : getSupportedProtocols().keySet()) {
                joiner.add(
                        String.format(
                                "%ssupportedProtocols%s%s=%s",
                                prefix,
                                suffix,
                                "".equals(suffix)
                                        ? ""
                                        : String.format(
                                                "%s%d%s", containerPrefix, _key, containerSuffix),
                                getSupportedProtocols().get(_key),
                                URLEncoder.encode(
                                                ApiClient.valueToString(
                                                        getSupportedProtocols().get(_key)),
                                                StandardCharsets.UTF_8)
                                        .replaceAll("\\+", "%20")));
            }
        }

        // add `syncStatus` to the URL query string
        if (getSyncStatus() != null) {
            joiner.add(
                    String.format(
                            "%ssyncStatus%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getSyncStatus()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        return joiner.toString();
    }
}
