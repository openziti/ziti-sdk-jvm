/*
 * Ziti Edge Management
 * OpenZiti Edge Management API
 *
 * The version of the OpenAPI document: 0.26.42
 * Contact: help@openziti.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openziti.management.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.Objects;
import java.util.StringJoiner;
import org.openziti.management.ApiClient;

/** VersionInfo */
@JsonPropertyOrder({
    VersionInfo.JSON_PROPERTY_ARCH,
    VersionInfo.JSON_PROPERTY_BUILD_DATE,
    VersionInfo.JSON_PROPERTY_OS,
    VersionInfo.JSON_PROPERTY_REVISION,
    VersionInfo.JSON_PROPERTY_VERSION
})
@javax.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        date = "2025-03-17T12:51:49.931993799-04:00[America/New_York]",
        comments = "Generator version: 7.11.0")
public class VersionInfo {
    public static final String JSON_PROPERTY_ARCH = "arch";
    @javax.annotation.Nonnull private String arch;

    public static final String JSON_PROPERTY_BUILD_DATE = "buildDate";
    @javax.annotation.Nonnull private String buildDate;

    public static final String JSON_PROPERTY_OS = "os";
    @javax.annotation.Nonnull private String os;

    public static final String JSON_PROPERTY_REVISION = "revision";
    @javax.annotation.Nonnull private String revision;

    public static final String JSON_PROPERTY_VERSION = "version";
    @javax.annotation.Nonnull private String version;

    public VersionInfo() {}

    public VersionInfo arch(@javax.annotation.Nonnull String arch) {
        this.arch = arch;
        return this;
    }

    /**
     * Get arch
     *
     * @return arch
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_ARCH)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getArch() {
        return arch;
    }

    @JsonProperty(JSON_PROPERTY_ARCH)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setArch(@javax.annotation.Nonnull String arch) {
        this.arch = arch;
    }

    public VersionInfo buildDate(@javax.annotation.Nonnull String buildDate) {
        this.buildDate = buildDate;
        return this;
    }

    /**
     * Get buildDate
     *
     * @return buildDate
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_BUILD_DATE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getBuildDate() {
        return buildDate;
    }

    @JsonProperty(JSON_PROPERTY_BUILD_DATE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setBuildDate(@javax.annotation.Nonnull String buildDate) {
        this.buildDate = buildDate;
    }

    public VersionInfo os(@javax.annotation.Nonnull String os) {
        this.os = os;
        return this;
    }

    /**
     * Get os
     *
     * @return os
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_OS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getOs() {
        return os;
    }

    @JsonProperty(JSON_PROPERTY_OS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setOs(@javax.annotation.Nonnull String os) {
        this.os = os;
    }

    public VersionInfo revision(@javax.annotation.Nonnull String revision) {
        this.revision = revision;
        return this;
    }

    /**
     * Get revision
     *
     * @return revision
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_REVISION)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getRevision() {
        return revision;
    }

    @JsonProperty(JSON_PROPERTY_REVISION)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setRevision(@javax.annotation.Nonnull String revision) {
        this.revision = revision;
    }

    public VersionInfo version(@javax.annotation.Nonnull String version) {
        this.version = version;
        return this;
    }

    /**
     * Get version
     *
     * @return version
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_VERSION)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getVersion() {
        return version;
    }

    @JsonProperty(JSON_PROPERTY_VERSION)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setVersion(@javax.annotation.Nonnull String version) {
        this.version = version;
    }

    /** Return true if this versionInfo object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        VersionInfo versionInfo = (VersionInfo) o;
        return Objects.equals(this.arch, versionInfo.arch)
                && Objects.equals(this.buildDate, versionInfo.buildDate)
                && Objects.equals(this.os, versionInfo.os)
                && Objects.equals(this.revision, versionInfo.revision)
                && Objects.equals(this.version, versionInfo.version);
    }

    @Override
    public int hashCode() {
        return Objects.hash(arch, buildDate, os, revision, version);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class VersionInfo {\n");
        sb.append("    arch: ").append(toIndentedString(arch)).append("\n");
        sb.append("    buildDate: ").append(toIndentedString(buildDate)).append("\n");
        sb.append("    os: ").append(toIndentedString(os)).append("\n");
        sb.append("    revision: ").append(toIndentedString(revision)).append("\n");
        sb.append("    version: ").append(toIndentedString(version)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `arch` to the URL query string
        if (getArch() != null) {
            joiner.add(
                    String.format(
                            "%sarch%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getArch()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `buildDate` to the URL query string
        if (getBuildDate() != null) {
            joiner.add(
                    String.format(
                            "%sbuildDate%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getBuildDate()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `os` to the URL query string
        if (getOs() != null) {
            joiner.add(
                    String.format(
                            "%sos%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getOs()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `revision` to the URL query string
        if (getRevision() != null) {
            joiner.add(
                    String.format(
                            "%srevision%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getRevision()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `version` to the URL query string
        if (getVersion() != null) {
            joiner.add(
                    String.format(
                            "%sversion%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getVersion()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        return joiner.toString();
    }
}
