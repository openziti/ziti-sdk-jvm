/*
 * Ziti Edge Management
 * OpenZiti Edge Management API
 *
 * The version of the OpenAPI document: 0.26.42
 * Contact: help@openziti.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openziti.management.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.StringJoiner;
import org.openziti.management.ApiClient;

/** TraceSpec */
@JsonPropertyOrder({
    TraceSpec.JSON_PROPERTY_CHANNELS,
    TraceSpec.JSON_PROPERTY_DURATION,
    TraceSpec.JSON_PROPERTY_ENABLED,
    TraceSpec.JSON_PROPERTY_TRACE_ID
})
@javax.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        date = "2025-03-17T12:51:49.931993799-04:00[America/New_York]",
        comments = "Generator version: 7.11.0")
public class TraceSpec {
    public static final String JSON_PROPERTY_CHANNELS = "channels";
    @javax.annotation.Nullable private List<String> channels = new ArrayList<>();

    public static final String JSON_PROPERTY_DURATION = "duration";
    @javax.annotation.Nullable private String duration;

    public static final String JSON_PROPERTY_ENABLED = "enabled";
    @javax.annotation.Nullable private Boolean enabled;

    public static final String JSON_PROPERTY_TRACE_ID = "traceId";
    @javax.annotation.Nullable private String traceId;

    public TraceSpec() {}

    public TraceSpec channels(@javax.annotation.Nullable List<String> channels) {
        this.channels = channels;
        return this;
    }

    public TraceSpec addChannelsItem(String channelsItem) {
        if (this.channels == null) {
            this.channels = new ArrayList<>();
        }
        this.channels.add(channelsItem);
        return this;
    }

    /**
     * Get channels
     *
     * @return channels
     */
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_CHANNELS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<String> getChannels() {
        return channels;
    }

    @JsonProperty(JSON_PROPERTY_CHANNELS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setChannels(@javax.annotation.Nullable List<String> channels) {
        this.channels = channels;
    }

    public TraceSpec duration(@javax.annotation.Nullable String duration) {
        this.duration = duration;
        return this;
    }

    /**
     * Get duration
     *
     * @return duration
     */
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_DURATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getDuration() {
        return duration;
    }

    @JsonProperty(JSON_PROPERTY_DURATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDuration(@javax.annotation.Nullable String duration) {
        this.duration = duration;
    }

    public TraceSpec enabled(@javax.annotation.Nullable Boolean enabled) {
        this.enabled = enabled;
        return this;
    }

    /**
     * Get enabled
     *
     * @return enabled
     */
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_ENABLED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Boolean getEnabled() {
        return enabled;
    }

    @JsonProperty(JSON_PROPERTY_ENABLED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEnabled(@javax.annotation.Nullable Boolean enabled) {
        this.enabled = enabled;
    }

    public TraceSpec traceId(@javax.annotation.Nullable String traceId) {
        this.traceId = traceId;
        return this;
    }

    /**
     * Get traceId
     *
     * @return traceId
     */
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_TRACE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getTraceId() {
        return traceId;
    }

    @JsonProperty(JSON_PROPERTY_TRACE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTraceId(@javax.annotation.Nullable String traceId) {
        this.traceId = traceId;
    }

    /** Return true if this traceSpec object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        TraceSpec traceSpec = (TraceSpec) o;
        return Objects.equals(this.channels, traceSpec.channels)
                && Objects.equals(this.duration, traceSpec.duration)
                && Objects.equals(this.enabled, traceSpec.enabled)
                && Objects.equals(this.traceId, traceSpec.traceId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(channels, duration, enabled, traceId);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class TraceSpec {\n");
        sb.append("    channels: ").append(toIndentedString(channels)).append("\n");
        sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
        sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
        sb.append("    traceId: ").append(toIndentedString(traceId)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `channels` to the URL query string
        if (getChannels() != null) {
            for (int i = 0; i < getChannels().size(); i++) {
                joiner.add(
                        String.format(
                                "%schannels%s%s=%s",
                                prefix,
                                suffix,
                                "".equals(suffix)
                                        ? ""
                                        : String.format(
                                                "%s%d%s", containerPrefix, i, containerSuffix),
                                URLEncoder.encode(
                                                ApiClient.valueToString(getChannels().get(i)),
                                                StandardCharsets.UTF_8)
                                        .replaceAll("\\+", "%20")));
            }
        }

        // add `duration` to the URL query string
        if (getDuration() != null) {
            joiner.add(
                    String.format(
                            "%sduration%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getDuration()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `enabled` to the URL query string
        if (getEnabled() != null) {
            joiner.add(
                    String.format(
                            "%senabled%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getEnabled()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `traceId` to the URL query string
        if (getTraceId() != null) {
            joiner.add(
                    String.format(
                            "%straceId%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getTraceId()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        return joiner.toString();
    }
}
