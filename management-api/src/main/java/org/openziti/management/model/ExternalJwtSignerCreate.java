/*
 * Ziti Edge Management
 * OpenZiti Edge Management API
 *
 * The version of the OpenAPI document: 0.26.42
 * Contact: help@openziti.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openziti.management.model;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.net.URI;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Objects;
import java.util.StringJoiner;
import org.openapitools.jackson.nullable.JsonNullable;
import org.openziti.management.ApiClient;

/** A create Certificate Authority (CA) object */
@JsonPropertyOrder({
    ExternalJwtSignerCreate.JSON_PROPERTY_AUDIENCE,
    ExternalJwtSignerCreate.JSON_PROPERTY_CERT_PEM,
    ExternalJwtSignerCreate.JSON_PROPERTY_CLAIMS_PROPERTY,
    ExternalJwtSignerCreate.JSON_PROPERTY_CLIENT_ID,
    ExternalJwtSignerCreate.JSON_PROPERTY_ENABLED,
    ExternalJwtSignerCreate.JSON_PROPERTY_EXTERNAL_AUTH_URL,
    ExternalJwtSignerCreate.JSON_PROPERTY_ISSUER,
    ExternalJwtSignerCreate.JSON_PROPERTY_JWKS_ENDPOINT,
    ExternalJwtSignerCreate.JSON_PROPERTY_KID,
    ExternalJwtSignerCreate.JSON_PROPERTY_NAME,
    ExternalJwtSignerCreate.JSON_PROPERTY_SCOPES,
    ExternalJwtSignerCreate.JSON_PROPERTY_TAGS,
    ExternalJwtSignerCreate.JSON_PROPERTY_TARGET_TOKEN,
    ExternalJwtSignerCreate.JSON_PROPERTY_USE_EXTERNAL_ID
})
@javax.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        date = "2025-03-17T12:51:49.931993799-04:00[America/New_York]",
        comments = "Generator version: 7.11.0")
public class ExternalJwtSignerCreate {
    public static final String JSON_PROPERTY_AUDIENCE = "audience";
    @javax.annotation.Nullable private String audience;

    public static final String JSON_PROPERTY_CERT_PEM = "certPem";
    private JsonNullable<String> certPem = JsonNullable.<String>undefined();

    public static final String JSON_PROPERTY_CLAIMS_PROPERTY = "claimsProperty";
    private JsonNullable<String> claimsProperty = JsonNullable.<String>undefined();

    public static final String JSON_PROPERTY_CLIENT_ID = "clientId";
    private JsonNullable<String> clientId = JsonNullable.<String>undefined();

    public static final String JSON_PROPERTY_ENABLED = "enabled";
    @javax.annotation.Nonnull private Boolean enabled;

    public static final String JSON_PROPERTY_EXTERNAL_AUTH_URL = "externalAuthUrl";
    private JsonNullable<String> externalAuthUrl = JsonNullable.<String>undefined();

    public static final String JSON_PROPERTY_ISSUER = "issuer";
    @javax.annotation.Nonnull private String issuer;

    public static final String JSON_PROPERTY_JWKS_ENDPOINT = "jwksEndpoint";
    private JsonNullable<URI> jwksEndpoint = JsonNullable.<URI>undefined();

    public static final String JSON_PROPERTY_KID = "kid";
    private JsonNullable<String> kid = JsonNullable.<String>undefined();

    public static final String JSON_PROPERTY_NAME = "name";
    @javax.annotation.Nonnull private String name;

    public static final String JSON_PROPERTY_SCOPES = "scopes";
    private JsonNullable<List<String>> scopes = JsonNullable.<List<String>>undefined();

    public static final String JSON_PROPERTY_TAGS = "tags";
    @javax.annotation.Nullable private Tags tags;

    public static final String JSON_PROPERTY_TARGET_TOKEN = "targetToken";
    private JsonNullable<TargetToken> targetToken = JsonNullable.<TargetToken>undefined();

    public static final String JSON_PROPERTY_USE_EXTERNAL_ID = "useExternalId";
    private JsonNullable<Boolean> useExternalId = JsonNullable.<Boolean>undefined();

    public ExternalJwtSignerCreate() {}

    public ExternalJwtSignerCreate audience(@javax.annotation.Nullable String audience) {
        this.audience = audience;
        return this;
    }

    /**
     * Get audience
     *
     * @return audience
     */
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_AUDIENCE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getAudience() {
        return audience;
    }

    @JsonProperty(JSON_PROPERTY_AUDIENCE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setAudience(@javax.annotation.Nullable String audience) {
        this.audience = audience;
    }

    public ExternalJwtSignerCreate certPem(@javax.annotation.Nullable String certPem) {
        this.certPem = JsonNullable.<String>of(certPem);
        return this;
    }

    /**
     * Get certPem
     *
     * @return certPem
     */
    @javax.annotation.Nullable
    @JsonIgnore
    public String getCertPem() {
        return certPem.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_CERT_PEM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public JsonNullable<String> getCertPem_JsonNullable() {
        return certPem;
    }

    @JsonProperty(JSON_PROPERTY_CERT_PEM)
    public void setCertPem_JsonNullable(JsonNullable<String> certPem) {
        this.certPem = certPem;
    }

    public void setCertPem(@javax.annotation.Nullable String certPem) {
        this.certPem = JsonNullable.<String>of(certPem);
    }

    public ExternalJwtSignerCreate claimsProperty(
            @javax.annotation.Nullable String claimsProperty) {
        this.claimsProperty = JsonNullable.<String>of(claimsProperty);
        return this;
    }

    /**
     * Get claimsProperty
     *
     * @return claimsProperty
     */
    @javax.annotation.Nullable
    @JsonIgnore
    public String getClaimsProperty() {
        return claimsProperty.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_CLAIMS_PROPERTY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public JsonNullable<String> getClaimsProperty_JsonNullable() {
        return claimsProperty;
    }

    @JsonProperty(JSON_PROPERTY_CLAIMS_PROPERTY)
    public void setClaimsProperty_JsonNullable(JsonNullable<String> claimsProperty) {
        this.claimsProperty = claimsProperty;
    }

    public void setClaimsProperty(@javax.annotation.Nullable String claimsProperty) {
        this.claimsProperty = JsonNullable.<String>of(claimsProperty);
    }

    public ExternalJwtSignerCreate clientId(@javax.annotation.Nullable String clientId) {
        this.clientId = JsonNullable.<String>of(clientId);
        return this;
    }

    /**
     * Get clientId
     *
     * @return clientId
     */
    @javax.annotation.Nullable
    @JsonIgnore
    public String getClientId() {
        return clientId.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_CLIENT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public JsonNullable<String> getClientId_JsonNullable() {
        return clientId;
    }

    @JsonProperty(JSON_PROPERTY_CLIENT_ID)
    public void setClientId_JsonNullable(JsonNullable<String> clientId) {
        this.clientId = clientId;
    }

    public void setClientId(@javax.annotation.Nullable String clientId) {
        this.clientId = JsonNullable.<String>of(clientId);
    }

    public ExternalJwtSignerCreate enabled(@javax.annotation.Nonnull Boolean enabled) {
        this.enabled = enabled;
        return this;
    }

    /**
     * Get enabled
     *
     * @return enabled
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_ENABLED)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Boolean getEnabled() {
        return enabled;
    }

    @JsonProperty(JSON_PROPERTY_ENABLED)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setEnabled(@javax.annotation.Nonnull Boolean enabled) {
        this.enabled = enabled;
    }

    public ExternalJwtSignerCreate externalAuthUrl(
            @javax.annotation.Nullable String externalAuthUrl) {
        this.externalAuthUrl = JsonNullable.<String>of(externalAuthUrl);
        return this;
    }

    /**
     * Get externalAuthUrl
     *
     * @return externalAuthUrl
     */
    @javax.annotation.Nullable
    @JsonIgnore
    public String getExternalAuthUrl() {
        return externalAuthUrl.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_EXTERNAL_AUTH_URL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public JsonNullable<String> getExternalAuthUrl_JsonNullable() {
        return externalAuthUrl;
    }

    @JsonProperty(JSON_PROPERTY_EXTERNAL_AUTH_URL)
    public void setExternalAuthUrl_JsonNullable(JsonNullable<String> externalAuthUrl) {
        this.externalAuthUrl = externalAuthUrl;
    }

    public void setExternalAuthUrl(@javax.annotation.Nullable String externalAuthUrl) {
        this.externalAuthUrl = JsonNullable.<String>of(externalAuthUrl);
    }

    public ExternalJwtSignerCreate issuer(@javax.annotation.Nonnull String issuer) {
        this.issuer = issuer;
        return this;
    }

    /**
     * Get issuer
     *
     * @return issuer
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_ISSUER)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getIssuer() {
        return issuer;
    }

    @JsonProperty(JSON_PROPERTY_ISSUER)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setIssuer(@javax.annotation.Nonnull String issuer) {
        this.issuer = issuer;
    }

    public ExternalJwtSignerCreate jwksEndpoint(@javax.annotation.Nullable URI jwksEndpoint) {
        this.jwksEndpoint = JsonNullable.<URI>of(jwksEndpoint);
        return this;
    }

    /**
     * Get jwksEndpoint
     *
     * @return jwksEndpoint
     */
    @javax.annotation.Nullable
    @JsonIgnore
    public URI getJwksEndpoint() {
        return jwksEndpoint.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_JWKS_ENDPOINT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public JsonNullable<URI> getJwksEndpoint_JsonNullable() {
        return jwksEndpoint;
    }

    @JsonProperty(JSON_PROPERTY_JWKS_ENDPOINT)
    public void setJwksEndpoint_JsonNullable(JsonNullable<URI> jwksEndpoint) {
        this.jwksEndpoint = jwksEndpoint;
    }

    public void setJwksEndpoint(@javax.annotation.Nullable URI jwksEndpoint) {
        this.jwksEndpoint = JsonNullable.<URI>of(jwksEndpoint);
    }

    public ExternalJwtSignerCreate kid(@javax.annotation.Nullable String kid) {
        this.kid = JsonNullable.<String>of(kid);
        return this;
    }

    /**
     * Get kid
     *
     * @return kid
     */
    @javax.annotation.Nullable
    @JsonIgnore
    public String getKid() {
        return kid.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_KID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public JsonNullable<String> getKid_JsonNullable() {
        return kid;
    }

    @JsonProperty(JSON_PROPERTY_KID)
    public void setKid_JsonNullable(JsonNullable<String> kid) {
        this.kid = kid;
    }

    public void setKid(@javax.annotation.Nullable String kid) {
        this.kid = JsonNullable.<String>of(kid);
    }

    public ExternalJwtSignerCreate name(@javax.annotation.Nonnull String name) {
        this.name = name;
        return this;
    }

    /**
     * Get name
     *
     * @return name
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getName() {
        return name;
    }

    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setName(@javax.annotation.Nonnull String name) {
        this.name = name;
    }

    public ExternalJwtSignerCreate scopes(@javax.annotation.Nullable List<String> scopes) {
        this.scopes = JsonNullable.<List<String>>of(scopes);
        return this;
    }

    public ExternalJwtSignerCreate addScopesItem(String scopesItem) {
        if (this.scopes == null || !this.scopes.isPresent()) {
            this.scopes = JsonNullable.<List<String>>of(new ArrayList<>());
        }
        try {
            this.scopes.get().add(scopesItem);
        } catch (java.util.NoSuchElementException e) {
            // this can never happen, as we make sure above that the value is present
        }
        return this;
    }

    /**
     * Get scopes
     *
     * @return scopes
     */
    @javax.annotation.Nullable
    @JsonIgnore
    public List<String> getScopes() {
        return scopes.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_SCOPES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public JsonNullable<List<String>> getScopes_JsonNullable() {
        return scopes;
    }

    @JsonProperty(JSON_PROPERTY_SCOPES)
    public void setScopes_JsonNullable(JsonNullable<List<String>> scopes) {
        this.scopes = scopes;
    }

    public void setScopes(@javax.annotation.Nullable List<String> scopes) {
        this.scopes = JsonNullable.<List<String>>of(scopes);
    }

    public ExternalJwtSignerCreate tags(@javax.annotation.Nullable Tags tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Get tags
     *
     * @return tags
     */
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_TAGS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Tags getTags() {
        return tags;
    }

    @JsonProperty(JSON_PROPERTY_TAGS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTags(@javax.annotation.Nullable Tags tags) {
        this.tags = tags;
    }

    public ExternalJwtSignerCreate targetToken(@javax.annotation.Nullable TargetToken targetToken) {
        this.targetToken = JsonNullable.<TargetToken>of(targetToken);
        return this;
    }

    /**
     * Get targetToken
     *
     * @return targetToken
     */
    @javax.annotation.Nullable
    @JsonIgnore
    public TargetToken getTargetToken() {
        return targetToken.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_TARGET_TOKEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public JsonNullable<TargetToken> getTargetToken_JsonNullable() {
        return targetToken;
    }

    @JsonProperty(JSON_PROPERTY_TARGET_TOKEN)
    public void setTargetToken_JsonNullable(JsonNullable<TargetToken> targetToken) {
        this.targetToken = targetToken;
    }

    public void setTargetToken(@javax.annotation.Nullable TargetToken targetToken) {
        this.targetToken = JsonNullable.<TargetToken>of(targetToken);
    }

    public ExternalJwtSignerCreate useExternalId(@javax.annotation.Nullable Boolean useExternalId) {
        this.useExternalId = JsonNullable.<Boolean>of(useExternalId);
        return this;
    }

    /**
     * Get useExternalId
     *
     * @return useExternalId
     */
    @javax.annotation.Nullable
    @JsonIgnore
    public Boolean getUseExternalId() {
        return useExternalId.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_USE_EXTERNAL_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public JsonNullable<Boolean> getUseExternalId_JsonNullable() {
        return useExternalId;
    }

    @JsonProperty(JSON_PROPERTY_USE_EXTERNAL_ID)
    public void setUseExternalId_JsonNullable(JsonNullable<Boolean> useExternalId) {
        this.useExternalId = useExternalId;
    }

    public void setUseExternalId(@javax.annotation.Nullable Boolean useExternalId) {
        this.useExternalId = JsonNullable.<Boolean>of(useExternalId);
    }

    /** Return true if this externalJwtSignerCreate object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ExternalJwtSignerCreate externalJwtSignerCreate = (ExternalJwtSignerCreate) o;
        return Objects.equals(this.audience, externalJwtSignerCreate.audience)
                && equalsNullable(this.certPem, externalJwtSignerCreate.certPem)
                && equalsNullable(this.claimsProperty, externalJwtSignerCreate.claimsProperty)
                && equalsNullable(this.clientId, externalJwtSignerCreate.clientId)
                && Objects.equals(this.enabled, externalJwtSignerCreate.enabled)
                && equalsNullable(this.externalAuthUrl, externalJwtSignerCreate.externalAuthUrl)
                && Objects.equals(this.issuer, externalJwtSignerCreate.issuer)
                && equalsNullable(this.jwksEndpoint, externalJwtSignerCreate.jwksEndpoint)
                && equalsNullable(this.kid, externalJwtSignerCreate.kid)
                && Objects.equals(this.name, externalJwtSignerCreate.name)
                && equalsNullable(this.scopes, externalJwtSignerCreate.scopes)
                && Objects.equals(this.tags, externalJwtSignerCreate.tags)
                && equalsNullable(this.targetToken, externalJwtSignerCreate.targetToken)
                && equalsNullable(this.useExternalId, externalJwtSignerCreate.useExternalId);
    }

    private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
        return a == b
                || (a != null
                        && b != null
                        && a.isPresent()
                        && b.isPresent()
                        && Objects.deepEquals(a.get(), b.get()));
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                audience,
                hashCodeNullable(certPem),
                hashCodeNullable(claimsProperty),
                hashCodeNullable(clientId),
                enabled,
                hashCodeNullable(externalAuthUrl),
                issuer,
                hashCodeNullable(jwksEndpoint),
                hashCodeNullable(kid),
                name,
                hashCodeNullable(scopes),
                tags,
                hashCodeNullable(targetToken),
                hashCodeNullable(useExternalId));
    }

    private static <T> int hashCodeNullable(JsonNullable<T> a) {
        if (a == null) {
            return 1;
        }
        return a.isPresent() ? Arrays.deepHashCode(new Object[] {a.get()}) : 31;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ExternalJwtSignerCreate {\n");
        sb.append("    audience: ").append(toIndentedString(audience)).append("\n");
        sb.append("    certPem: ").append(toIndentedString(certPem)).append("\n");
        sb.append("    claimsProperty: ").append(toIndentedString(claimsProperty)).append("\n");
        sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
        sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
        sb.append("    externalAuthUrl: ").append(toIndentedString(externalAuthUrl)).append("\n");
        sb.append("    issuer: ").append(toIndentedString(issuer)).append("\n");
        sb.append("    jwksEndpoint: ").append(toIndentedString(jwksEndpoint)).append("\n");
        sb.append("    kid: ").append(toIndentedString(kid)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    scopes: ").append(toIndentedString(scopes)).append("\n");
        sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
        sb.append("    targetToken: ").append(toIndentedString(targetToken)).append("\n");
        sb.append("    useExternalId: ").append(toIndentedString(useExternalId)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `audience` to the URL query string
        if (getAudience() != null) {
            joiner.add(
                    String.format(
                            "%saudience%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getAudience()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `certPem` to the URL query string
        if (getCertPem() != null) {
            joiner.add(
                    String.format(
                            "%scertPem%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getCertPem()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `claimsProperty` to the URL query string
        if (getClaimsProperty() != null) {
            joiner.add(
                    String.format(
                            "%sclaimsProperty%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getClaimsProperty()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `clientId` to the URL query string
        if (getClientId() != null) {
            joiner.add(
                    String.format(
                            "%sclientId%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getClientId()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `enabled` to the URL query string
        if (getEnabled() != null) {
            joiner.add(
                    String.format(
                            "%senabled%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getEnabled()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `externalAuthUrl` to the URL query string
        if (getExternalAuthUrl() != null) {
            joiner.add(
                    String.format(
                            "%sexternalAuthUrl%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getExternalAuthUrl()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `issuer` to the URL query string
        if (getIssuer() != null) {
            joiner.add(
                    String.format(
                            "%sissuer%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getIssuer()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `jwksEndpoint` to the URL query string
        if (getJwksEndpoint() != null) {
            joiner.add(
                    String.format(
                            "%sjwksEndpoint%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getJwksEndpoint()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `kid` to the URL query string
        if (getKid() != null) {
            joiner.add(
                    String.format(
                            "%skid%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getKid()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `name` to the URL query string
        if (getName() != null) {
            joiner.add(
                    String.format(
                            "%sname%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getName()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `scopes` to the URL query string
        if (getScopes() != null) {
            for (int i = 0; i < getScopes().size(); i++) {
                joiner.add(
                        String.format(
                                "%sscopes%s%s=%s",
                                prefix,
                                suffix,
                                "".equals(suffix)
                                        ? ""
                                        : String.format(
                                                "%s%d%s", containerPrefix, i, containerSuffix),
                                URLEncoder.encode(
                                                ApiClient.valueToString(getScopes().get(i)),
                                                StandardCharsets.UTF_8)
                                        .replaceAll("\\+", "%20")));
            }
        }

        // add `tags` to the URL query string
        if (getTags() != null) {
            joiner.add(getTags().toUrlQueryString(prefix + "tags" + suffix));
        }

        // add `targetToken` to the URL query string
        if (getTargetToken() != null) {
            joiner.add(
                    String.format(
                            "%stargetToken%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getTargetToken()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `useExternalId` to the URL query string
        if (getUseExternalId() != null) {
            joiner.add(
                    String.format(
                            "%suseExternalId%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getUseExternalId()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        return joiner.toString();
    }
}
