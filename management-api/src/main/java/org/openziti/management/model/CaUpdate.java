/*
 * Ziti Edge Management
 * OpenZiti Edge Management API
 *
 * The version of the OpenAPI document: 0.26.42
 * Contact: help@openziti.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openziti.management.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.StringJoiner;
import org.openziti.management.ApiClient;

/** CaUpdate */
@JsonPropertyOrder({
    CaUpdate.JSON_PROPERTY_EXTERNAL_ID_CLAIM,
    CaUpdate.JSON_PROPERTY_IDENTITY_NAME_FORMAT,
    CaUpdate.JSON_PROPERTY_IDENTITY_ROLES,
    CaUpdate.JSON_PROPERTY_IS_AUTH_ENABLED,
    CaUpdate.JSON_PROPERTY_IS_AUTO_CA_ENROLLMENT_ENABLED,
    CaUpdate.JSON_PROPERTY_IS_OTT_CA_ENROLLMENT_ENABLED,
    CaUpdate.JSON_PROPERTY_NAME,
    CaUpdate.JSON_PROPERTY_TAGS
})
@javax.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        date = "2025-03-17T12:51:49.931993799-04:00[America/New_York]",
        comments = "Generator version: 7.11.0")
public class CaUpdate {
    public static final String JSON_PROPERTY_EXTERNAL_ID_CLAIM = "externalIdClaim";
    @javax.annotation.Nullable private ExternalIdClaim externalIdClaim;

    public static final String JSON_PROPERTY_IDENTITY_NAME_FORMAT = "identityNameFormat";
    @javax.annotation.Nonnull private String identityNameFormat;

    public static final String JSON_PROPERTY_IDENTITY_ROLES = "identityRoles";
    @javax.annotation.Nonnull private List<String> identityRoles = new ArrayList<>();

    public static final String JSON_PROPERTY_IS_AUTH_ENABLED = "isAuthEnabled";
    @javax.annotation.Nonnull private Boolean isAuthEnabled;

    public static final String JSON_PROPERTY_IS_AUTO_CA_ENROLLMENT_ENABLED =
            "isAutoCaEnrollmentEnabled";
    @javax.annotation.Nonnull private Boolean isAutoCaEnrollmentEnabled;

    public static final String JSON_PROPERTY_IS_OTT_CA_ENROLLMENT_ENABLED =
            "isOttCaEnrollmentEnabled";
    @javax.annotation.Nonnull private Boolean isOttCaEnrollmentEnabled;

    public static final String JSON_PROPERTY_NAME = "name";
    @javax.annotation.Nonnull private String name;

    public static final String JSON_PROPERTY_TAGS = "tags";
    @javax.annotation.Nullable private Tags tags;

    public CaUpdate() {}

    public CaUpdate externalIdClaim(@javax.annotation.Nullable ExternalIdClaim externalIdClaim) {
        this.externalIdClaim = externalIdClaim;
        return this;
    }

    /**
     * Get externalIdClaim
     *
     * @return externalIdClaim
     */
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_EXTERNAL_ID_CLAIM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public ExternalIdClaim getExternalIdClaim() {
        return externalIdClaim;
    }

    @JsonProperty(JSON_PROPERTY_EXTERNAL_ID_CLAIM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setExternalIdClaim(@javax.annotation.Nullable ExternalIdClaim externalIdClaim) {
        this.externalIdClaim = externalIdClaim;
    }

    public CaUpdate identityNameFormat(@javax.annotation.Nonnull String identityNameFormat) {
        this.identityNameFormat = identityNameFormat;
        return this;
    }

    /**
     * Get identityNameFormat
     *
     * @return identityNameFormat
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_IDENTITY_NAME_FORMAT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getIdentityNameFormat() {
        return identityNameFormat;
    }

    @JsonProperty(JSON_PROPERTY_IDENTITY_NAME_FORMAT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setIdentityNameFormat(@javax.annotation.Nonnull String identityNameFormat) {
        this.identityNameFormat = identityNameFormat;
    }

    public CaUpdate identityRoles(@javax.annotation.Nonnull List<String> identityRoles) {
        this.identityRoles = identityRoles;
        return this;
    }

    public CaUpdate addIdentityRolesItem(String identityRolesItem) {
        if (this.identityRoles == null) {
            this.identityRoles = new ArrayList<>();
        }
        this.identityRoles.add(identityRolesItem);
        return this;
    }

    /**
     * Get identityRoles
     *
     * @return identityRoles
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_IDENTITY_ROLES)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public List<String> getIdentityRoles() {
        return identityRoles;
    }

    @JsonProperty(JSON_PROPERTY_IDENTITY_ROLES)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setIdentityRoles(@javax.annotation.Nonnull List<String> identityRoles) {
        this.identityRoles = identityRoles;
    }

    public CaUpdate isAuthEnabled(@javax.annotation.Nonnull Boolean isAuthEnabled) {
        this.isAuthEnabled = isAuthEnabled;
        return this;
    }

    /**
     * Get isAuthEnabled
     *
     * @return isAuthEnabled
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_IS_AUTH_ENABLED)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Boolean getIsAuthEnabled() {
        return isAuthEnabled;
    }

    @JsonProperty(JSON_PROPERTY_IS_AUTH_ENABLED)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setIsAuthEnabled(@javax.annotation.Nonnull Boolean isAuthEnabled) {
        this.isAuthEnabled = isAuthEnabled;
    }

    public CaUpdate isAutoCaEnrollmentEnabled(
            @javax.annotation.Nonnull Boolean isAutoCaEnrollmentEnabled) {
        this.isAutoCaEnrollmentEnabled = isAutoCaEnrollmentEnabled;
        return this;
    }

    /**
     * Get isAutoCaEnrollmentEnabled
     *
     * @return isAutoCaEnrollmentEnabled
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_IS_AUTO_CA_ENROLLMENT_ENABLED)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Boolean getIsAutoCaEnrollmentEnabled() {
        return isAutoCaEnrollmentEnabled;
    }

    @JsonProperty(JSON_PROPERTY_IS_AUTO_CA_ENROLLMENT_ENABLED)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setIsAutoCaEnrollmentEnabled(
            @javax.annotation.Nonnull Boolean isAutoCaEnrollmentEnabled) {
        this.isAutoCaEnrollmentEnabled = isAutoCaEnrollmentEnabled;
    }

    public CaUpdate isOttCaEnrollmentEnabled(
            @javax.annotation.Nonnull Boolean isOttCaEnrollmentEnabled) {
        this.isOttCaEnrollmentEnabled = isOttCaEnrollmentEnabled;
        return this;
    }

    /**
     * Get isOttCaEnrollmentEnabled
     *
     * @return isOttCaEnrollmentEnabled
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_IS_OTT_CA_ENROLLMENT_ENABLED)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Boolean getIsOttCaEnrollmentEnabled() {
        return isOttCaEnrollmentEnabled;
    }

    @JsonProperty(JSON_PROPERTY_IS_OTT_CA_ENROLLMENT_ENABLED)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setIsOttCaEnrollmentEnabled(
            @javax.annotation.Nonnull Boolean isOttCaEnrollmentEnabled) {
        this.isOttCaEnrollmentEnabled = isOttCaEnrollmentEnabled;
    }

    public CaUpdate name(@javax.annotation.Nonnull String name) {
        this.name = name;
        return this;
    }

    /**
     * Get name
     *
     * @return name
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getName() {
        return name;
    }

    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setName(@javax.annotation.Nonnull String name) {
        this.name = name;
    }

    public CaUpdate tags(@javax.annotation.Nullable Tags tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Get tags
     *
     * @return tags
     */
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_TAGS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Tags getTags() {
        return tags;
    }

    @JsonProperty(JSON_PROPERTY_TAGS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTags(@javax.annotation.Nullable Tags tags) {
        this.tags = tags;
    }

    /** Return true if this caUpdate object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CaUpdate caUpdate = (CaUpdate) o;
        return Objects.equals(this.externalIdClaim, caUpdate.externalIdClaim)
                && Objects.equals(this.identityNameFormat, caUpdate.identityNameFormat)
                && Objects.equals(this.identityRoles, caUpdate.identityRoles)
                && Objects.equals(this.isAuthEnabled, caUpdate.isAuthEnabled)
                && Objects.equals(
                        this.isAutoCaEnrollmentEnabled, caUpdate.isAutoCaEnrollmentEnabled)
                && Objects.equals(this.isOttCaEnrollmentEnabled, caUpdate.isOttCaEnrollmentEnabled)
                && Objects.equals(this.name, caUpdate.name)
                && Objects.equals(this.tags, caUpdate.tags);
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                externalIdClaim,
                identityNameFormat,
                identityRoles,
                isAuthEnabled,
                isAutoCaEnrollmentEnabled,
                isOttCaEnrollmentEnabled,
                name,
                tags);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class CaUpdate {\n");
        sb.append("    externalIdClaim: ").append(toIndentedString(externalIdClaim)).append("\n");
        sb.append("    identityNameFormat: ")
                .append(toIndentedString(identityNameFormat))
                .append("\n");
        sb.append("    identityRoles: ").append(toIndentedString(identityRoles)).append("\n");
        sb.append("    isAuthEnabled: ").append(toIndentedString(isAuthEnabled)).append("\n");
        sb.append("    isAutoCaEnrollmentEnabled: ")
                .append(toIndentedString(isAutoCaEnrollmentEnabled))
                .append("\n");
        sb.append("    isOttCaEnrollmentEnabled: ")
                .append(toIndentedString(isOttCaEnrollmentEnabled))
                .append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `externalIdClaim` to the URL query string
        if (getExternalIdClaim() != null) {
            joiner.add(getExternalIdClaim().toUrlQueryString(prefix + "externalIdClaim" + suffix));
        }

        // add `identityNameFormat` to the URL query string
        if (getIdentityNameFormat() != null) {
            joiner.add(
                    String.format(
                            "%sidentityNameFormat%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getIdentityNameFormat()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `identityRoles` to the URL query string
        if (getIdentityRoles() != null) {
            for (int i = 0; i < getIdentityRoles().size(); i++) {
                joiner.add(
                        String.format(
                                "%sidentityRoles%s%s=%s",
                                prefix,
                                suffix,
                                "".equals(suffix)
                                        ? ""
                                        : String.format(
                                                "%s%d%s", containerPrefix, i, containerSuffix),
                                URLEncoder.encode(
                                                ApiClient.valueToString(getIdentityRoles().get(i)),
                                                StandardCharsets.UTF_8)
                                        .replaceAll("\\+", "%20")));
            }
        }

        // add `isAuthEnabled` to the URL query string
        if (getIsAuthEnabled() != null) {
            joiner.add(
                    String.format(
                            "%sisAuthEnabled%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getIsAuthEnabled()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `isAutoCaEnrollmentEnabled` to the URL query string
        if (getIsAutoCaEnrollmentEnabled() != null) {
            joiner.add(
                    String.format(
                            "%sisAutoCaEnrollmentEnabled%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getIsAutoCaEnrollmentEnabled()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `isOttCaEnrollmentEnabled` to the URL query string
        if (getIsOttCaEnrollmentEnabled() != null) {
            joiner.add(
                    String.format(
                            "%sisOttCaEnrollmentEnabled%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getIsOttCaEnrollmentEnabled()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `name` to the URL query string
        if (getName() != null) {
            joiner.add(
                    String.format(
                            "%sname%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getName()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `tags` to the URL query string
        if (getTags() != null) {
            joiner.add(getTags().toUrlQueryString(prefix + "tags" + suffix));
        }

        return joiner.toString();
    }
}
