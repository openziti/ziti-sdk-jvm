/*
 * Ziti Edge Management
 * OpenZiti Edge Management API
 *
 * The version of the OpenAPI document: 0.26.42
 * Contact: help@openziti.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openziti.management.model;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.StringJoiner;
import org.openapitools.jackson.nullable.JsonNullable;
import org.openziti.management.ApiClient;

/** A detail edge router resource */
@JsonPropertyOrder({
    EdgeRouterDetail.JSON_PROPERTY_LINKS,
    EdgeRouterDetail.JSON_PROPERTY_CREATED_AT,
    EdgeRouterDetail.JSON_PROPERTY_ID,
    EdgeRouterDetail.JSON_PROPERTY_TAGS,
    EdgeRouterDetail.JSON_PROPERTY_UPDATED_AT,
    EdgeRouterDetail.JSON_PROPERTY_APP_DATA,
    EdgeRouterDetail.JSON_PROPERTY_COST,
    EdgeRouterDetail.JSON_PROPERTY_DISABLED,
    EdgeRouterDetail.JSON_PROPERTY_HOSTNAME,
    EdgeRouterDetail.JSON_PROPERTY_IS_ONLINE,
    EdgeRouterDetail.JSON_PROPERTY_NAME,
    EdgeRouterDetail.JSON_PROPERTY_NO_TRAVERSAL,
    EdgeRouterDetail.JSON_PROPERTY_SUPPORTED_PROTOCOLS,
    EdgeRouterDetail.JSON_PROPERTY_SYNC_STATUS,
    EdgeRouterDetail.JSON_PROPERTY_CERT_PEM,
    EdgeRouterDetail.JSON_PROPERTY_ENROLLMENT_CREATED_AT,
    EdgeRouterDetail.JSON_PROPERTY_ENROLLMENT_EXPIRES_AT,
    EdgeRouterDetail.JSON_PROPERTY_ENROLLMENT_JWT,
    EdgeRouterDetail.JSON_PROPERTY_ENROLLMENT_TOKEN,
    EdgeRouterDetail.JSON_PROPERTY_FINGERPRINT,
    EdgeRouterDetail.JSON_PROPERTY_IS_TUNNELER_ENABLED,
    EdgeRouterDetail.JSON_PROPERTY_IS_VERIFIED,
    EdgeRouterDetail.JSON_PROPERTY_ROLE_ATTRIBUTES,
    EdgeRouterDetail.JSON_PROPERTY_UNVERIFIED_CERT_PEM,
    EdgeRouterDetail.JSON_PROPERTY_UNVERIFIED_FINGERPRINT,
    EdgeRouterDetail.JSON_PROPERTY_VERSION_INFO
})
@javax.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        date = "2025-03-17T12:51:49.931993799-04:00[America/New_York]",
        comments = "Generator version: 7.11.0")
public class EdgeRouterDetail {
    public static final String JSON_PROPERTY_LINKS = "_links";
    @javax.annotation.Nonnull private Map<String, Link> links = new HashMap<>();

    public static final String JSON_PROPERTY_CREATED_AT = "createdAt";
    @javax.annotation.Nonnull private OffsetDateTime createdAt;

    public static final String JSON_PROPERTY_ID = "id";
    @javax.annotation.Nonnull private String id;

    public static final String JSON_PROPERTY_TAGS = "tags";
    @javax.annotation.Nullable private Tags tags;

    public static final String JSON_PROPERTY_UPDATED_AT = "updatedAt";
    @javax.annotation.Nonnull private OffsetDateTime updatedAt;

    public static final String JSON_PROPERTY_APP_DATA = "appData";
    @javax.annotation.Nullable private Tags appData;

    public static final String JSON_PROPERTY_COST = "cost";
    @javax.annotation.Nullable private Integer cost;

    public static final String JSON_PROPERTY_DISABLED = "disabled";
    @javax.annotation.Nonnull private Boolean disabled;

    public static final String JSON_PROPERTY_HOSTNAME = "hostname";
    @javax.annotation.Nonnull private String hostname;

    public static final String JSON_PROPERTY_IS_ONLINE = "isOnline";
    @javax.annotation.Nonnull private Boolean isOnline;

    public static final String JSON_PROPERTY_NAME = "name";
    @javax.annotation.Nonnull private String name;

    public static final String JSON_PROPERTY_NO_TRAVERSAL = "noTraversal";
    @javax.annotation.Nullable private Boolean noTraversal;

    public static final String JSON_PROPERTY_SUPPORTED_PROTOCOLS = "supportedProtocols";
    @javax.annotation.Nonnull private Map<String, String> supportedProtocols = new HashMap<>();

    public static final String JSON_PROPERTY_SYNC_STATUS = "syncStatus";
    @javax.annotation.Nonnull private String syncStatus;

    public static final String JSON_PROPERTY_CERT_PEM = "certPem";
    private JsonNullable<String> certPem = JsonNullable.<String>undefined();

    public static final String JSON_PROPERTY_ENROLLMENT_CREATED_AT = "enrollmentCreatedAt";
    private JsonNullable<OffsetDateTime> enrollmentCreatedAt =
            JsonNullable.<OffsetDateTime>undefined();

    public static final String JSON_PROPERTY_ENROLLMENT_EXPIRES_AT = "enrollmentExpiresAt";
    private JsonNullable<OffsetDateTime> enrollmentExpiresAt =
            JsonNullable.<OffsetDateTime>undefined();

    public static final String JSON_PROPERTY_ENROLLMENT_JWT = "enrollmentJwt";
    private JsonNullable<String> enrollmentJwt = JsonNullable.<String>undefined();

    public static final String JSON_PROPERTY_ENROLLMENT_TOKEN = "enrollmentToken";
    private JsonNullable<String> enrollmentToken = JsonNullable.<String>undefined();

    public static final String JSON_PROPERTY_FINGERPRINT = "fingerprint";
    @javax.annotation.Nullable private String fingerprint;

    public static final String JSON_PROPERTY_IS_TUNNELER_ENABLED = "isTunnelerEnabled";
    @javax.annotation.Nonnull private Boolean isTunnelerEnabled;

    public static final String JSON_PROPERTY_IS_VERIFIED = "isVerified";
    @javax.annotation.Nonnull private Boolean isVerified;

    public static final String JSON_PROPERTY_ROLE_ATTRIBUTES = "roleAttributes";
    @javax.annotation.Nullable private List<String> roleAttributes;

    public static final String JSON_PROPERTY_UNVERIFIED_CERT_PEM = "unverifiedCertPem";
    private JsonNullable<String> unverifiedCertPem = JsonNullable.<String>undefined();

    public static final String JSON_PROPERTY_UNVERIFIED_FINGERPRINT = "unverifiedFingerprint";
    private JsonNullable<String> unverifiedFingerprint = JsonNullable.<String>undefined();

    public static final String JSON_PROPERTY_VERSION_INFO = "versionInfo";
    @javax.annotation.Nullable private VersionInfo versionInfo;

    public EdgeRouterDetail() {}

    public EdgeRouterDetail links(@javax.annotation.Nonnull Map<String, Link> links) {
        this.links = links;
        return this;
    }

    public EdgeRouterDetail putLinksItem(String key, Link linksItem) {
        if (this.links == null) {
            this.links = new HashMap<>();
        }
        this.links.put(key, linksItem);
        return this;
    }

    /**
     * A map of named links
     *
     * @return links
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_LINKS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Map<String, Link> getLinks() {
        return links;
    }

    @JsonProperty(JSON_PROPERTY_LINKS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setLinks(@javax.annotation.Nonnull Map<String, Link> links) {
        this.links = links;
    }

    public EdgeRouterDetail createdAt(@javax.annotation.Nonnull OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Get createdAt
     *
     * @return createdAt
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_CREATED_AT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public OffsetDateTime getCreatedAt() {
        return createdAt;
    }

    @JsonProperty(JSON_PROPERTY_CREATED_AT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setCreatedAt(@javax.annotation.Nonnull OffsetDateTime createdAt) {
        this.createdAt = createdAt;
    }

    public EdgeRouterDetail id(@javax.annotation.Nonnull String id) {
        this.id = id;
        return this;
    }

    /**
     * Get id
     *
     * @return id
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getId() {
        return id;
    }

    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setId(@javax.annotation.Nonnull String id) {
        this.id = id;
    }

    public EdgeRouterDetail tags(@javax.annotation.Nullable Tags tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Get tags
     *
     * @return tags
     */
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_TAGS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Tags getTags() {
        return tags;
    }

    @JsonProperty(JSON_PROPERTY_TAGS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTags(@javax.annotation.Nullable Tags tags) {
        this.tags = tags;
    }

    public EdgeRouterDetail updatedAt(@javax.annotation.Nonnull OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    /**
     * Get updatedAt
     *
     * @return updatedAt
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_UPDATED_AT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public OffsetDateTime getUpdatedAt() {
        return updatedAt;
    }

    @JsonProperty(JSON_PROPERTY_UPDATED_AT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setUpdatedAt(@javax.annotation.Nonnull OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    public EdgeRouterDetail appData(@javax.annotation.Nullable Tags appData) {
        this.appData = appData;
        return this;
    }

    /**
     * Get appData
     *
     * @return appData
     */
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_APP_DATA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Tags getAppData() {
        return appData;
    }

    @JsonProperty(JSON_PROPERTY_APP_DATA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAppData(@javax.annotation.Nullable Tags appData) {
        this.appData = appData;
    }

    public EdgeRouterDetail cost(@javax.annotation.Nullable Integer cost) {
        this.cost = cost;
        return this;
    }

    /**
     * Get cost minimum: 0 maximum: 65535
     *
     * @return cost
     */
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_COST)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Integer getCost() {
        return cost;
    }

    @JsonProperty(JSON_PROPERTY_COST)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setCost(@javax.annotation.Nullable Integer cost) {
        this.cost = cost;
    }

    public EdgeRouterDetail disabled(@javax.annotation.Nonnull Boolean disabled) {
        this.disabled = disabled;
        return this;
    }

    /**
     * Get disabled
     *
     * @return disabled
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_DISABLED)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Boolean getDisabled() {
        return disabled;
    }

    @JsonProperty(JSON_PROPERTY_DISABLED)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setDisabled(@javax.annotation.Nonnull Boolean disabled) {
        this.disabled = disabled;
    }

    public EdgeRouterDetail hostname(@javax.annotation.Nonnull String hostname) {
        this.hostname = hostname;
        return this;
    }

    /**
     * Get hostname
     *
     * @return hostname
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_HOSTNAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getHostname() {
        return hostname;
    }

    @JsonProperty(JSON_PROPERTY_HOSTNAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setHostname(@javax.annotation.Nonnull String hostname) {
        this.hostname = hostname;
    }

    public EdgeRouterDetail isOnline(@javax.annotation.Nonnull Boolean isOnline) {
        this.isOnline = isOnline;
        return this;
    }

    /**
     * Get isOnline
     *
     * @return isOnline
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_IS_ONLINE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Boolean getIsOnline() {
        return isOnline;
    }

    @JsonProperty(JSON_PROPERTY_IS_ONLINE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setIsOnline(@javax.annotation.Nonnull Boolean isOnline) {
        this.isOnline = isOnline;
    }

    public EdgeRouterDetail name(@javax.annotation.Nonnull String name) {
        this.name = name;
        return this;
    }

    /**
     * Get name
     *
     * @return name
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getName() {
        return name;
    }

    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setName(@javax.annotation.Nonnull String name) {
        this.name = name;
    }

    public EdgeRouterDetail noTraversal(@javax.annotation.Nullable Boolean noTraversal) {
        this.noTraversal = noTraversal;
        return this;
    }

    /**
     * Get noTraversal
     *
     * @return noTraversal
     */
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_NO_TRAVERSAL)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Boolean getNoTraversal() {
        return noTraversal;
    }

    @JsonProperty(JSON_PROPERTY_NO_TRAVERSAL)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setNoTraversal(@javax.annotation.Nullable Boolean noTraversal) {
        this.noTraversal = noTraversal;
    }

    public EdgeRouterDetail supportedProtocols(
            @javax.annotation.Nonnull Map<String, String> supportedProtocols) {
        this.supportedProtocols = supportedProtocols;
        return this;
    }

    public EdgeRouterDetail putSupportedProtocolsItem(String key, String supportedProtocolsItem) {
        if (this.supportedProtocols == null) {
            this.supportedProtocols = new HashMap<>();
        }
        this.supportedProtocols.put(key, supportedProtocolsItem);
        return this;
    }

    /**
     * Get supportedProtocols
     *
     * @return supportedProtocols
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_SUPPORTED_PROTOCOLS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Map<String, String> getSupportedProtocols() {
        return supportedProtocols;
    }

    @JsonProperty(JSON_PROPERTY_SUPPORTED_PROTOCOLS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setSupportedProtocols(
            @javax.annotation.Nonnull Map<String, String> supportedProtocols) {
        this.supportedProtocols = supportedProtocols;
    }

    public EdgeRouterDetail syncStatus(@javax.annotation.Nonnull String syncStatus) {
        this.syncStatus = syncStatus;
        return this;
    }

    /**
     * Get syncStatus
     *
     * @return syncStatus
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_SYNC_STATUS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getSyncStatus() {
        return syncStatus;
    }

    @JsonProperty(JSON_PROPERTY_SYNC_STATUS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setSyncStatus(@javax.annotation.Nonnull String syncStatus) {
        this.syncStatus = syncStatus;
    }

    public EdgeRouterDetail certPem(@javax.annotation.Nullable String certPem) {
        this.certPem = JsonNullable.<String>of(certPem);
        return this;
    }

    /**
     * Get certPem
     *
     * @return certPem
     */
    @javax.annotation.Nullable
    @JsonIgnore
    public String getCertPem() {
        return certPem.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_CERT_PEM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public JsonNullable<String> getCertPem_JsonNullable() {
        return certPem;
    }

    @JsonProperty(JSON_PROPERTY_CERT_PEM)
    public void setCertPem_JsonNullable(JsonNullable<String> certPem) {
        this.certPem = certPem;
    }

    public void setCertPem(@javax.annotation.Nullable String certPem) {
        this.certPem = JsonNullable.<String>of(certPem);
    }

    public EdgeRouterDetail enrollmentCreatedAt(
            @javax.annotation.Nullable OffsetDateTime enrollmentCreatedAt) {
        this.enrollmentCreatedAt = JsonNullable.<OffsetDateTime>of(enrollmentCreatedAt);
        return this;
    }

    /**
     * Get enrollmentCreatedAt
     *
     * @return enrollmentCreatedAt
     */
    @javax.annotation.Nullable
    @JsonIgnore
    public OffsetDateTime getEnrollmentCreatedAt() {
        return enrollmentCreatedAt.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_ENROLLMENT_CREATED_AT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public JsonNullable<OffsetDateTime> getEnrollmentCreatedAt_JsonNullable() {
        return enrollmentCreatedAt;
    }

    @JsonProperty(JSON_PROPERTY_ENROLLMENT_CREATED_AT)
    public void setEnrollmentCreatedAt_JsonNullable(
            JsonNullable<OffsetDateTime> enrollmentCreatedAt) {
        this.enrollmentCreatedAt = enrollmentCreatedAt;
    }

    public void setEnrollmentCreatedAt(
            @javax.annotation.Nullable OffsetDateTime enrollmentCreatedAt) {
        this.enrollmentCreatedAt = JsonNullable.<OffsetDateTime>of(enrollmentCreatedAt);
    }

    public EdgeRouterDetail enrollmentExpiresAt(
            @javax.annotation.Nullable OffsetDateTime enrollmentExpiresAt) {
        this.enrollmentExpiresAt = JsonNullable.<OffsetDateTime>of(enrollmentExpiresAt);
        return this;
    }

    /**
     * Get enrollmentExpiresAt
     *
     * @return enrollmentExpiresAt
     */
    @javax.annotation.Nullable
    @JsonIgnore
    public OffsetDateTime getEnrollmentExpiresAt() {
        return enrollmentExpiresAt.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_ENROLLMENT_EXPIRES_AT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public JsonNullable<OffsetDateTime> getEnrollmentExpiresAt_JsonNullable() {
        return enrollmentExpiresAt;
    }

    @JsonProperty(JSON_PROPERTY_ENROLLMENT_EXPIRES_AT)
    public void setEnrollmentExpiresAt_JsonNullable(
            JsonNullable<OffsetDateTime> enrollmentExpiresAt) {
        this.enrollmentExpiresAt = enrollmentExpiresAt;
    }

    public void setEnrollmentExpiresAt(
            @javax.annotation.Nullable OffsetDateTime enrollmentExpiresAt) {
        this.enrollmentExpiresAt = JsonNullable.<OffsetDateTime>of(enrollmentExpiresAt);
    }

    public EdgeRouterDetail enrollmentJwt(@javax.annotation.Nullable String enrollmentJwt) {
        this.enrollmentJwt = JsonNullable.<String>of(enrollmentJwt);
        return this;
    }

    /**
     * Get enrollmentJwt
     *
     * @return enrollmentJwt
     */
    @javax.annotation.Nullable
    @JsonIgnore
    public String getEnrollmentJwt() {
        return enrollmentJwt.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_ENROLLMENT_JWT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public JsonNullable<String> getEnrollmentJwt_JsonNullable() {
        return enrollmentJwt;
    }

    @JsonProperty(JSON_PROPERTY_ENROLLMENT_JWT)
    public void setEnrollmentJwt_JsonNullable(JsonNullable<String> enrollmentJwt) {
        this.enrollmentJwt = enrollmentJwt;
    }

    public void setEnrollmentJwt(@javax.annotation.Nullable String enrollmentJwt) {
        this.enrollmentJwt = JsonNullable.<String>of(enrollmentJwt);
    }

    public EdgeRouterDetail enrollmentToken(@javax.annotation.Nullable String enrollmentToken) {
        this.enrollmentToken = JsonNullable.<String>of(enrollmentToken);
        return this;
    }

    /**
     * Get enrollmentToken
     *
     * @return enrollmentToken
     */
    @javax.annotation.Nullable
    @JsonIgnore
    public String getEnrollmentToken() {
        return enrollmentToken.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_ENROLLMENT_TOKEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public JsonNullable<String> getEnrollmentToken_JsonNullable() {
        return enrollmentToken;
    }

    @JsonProperty(JSON_PROPERTY_ENROLLMENT_TOKEN)
    public void setEnrollmentToken_JsonNullable(JsonNullable<String> enrollmentToken) {
        this.enrollmentToken = enrollmentToken;
    }

    public void setEnrollmentToken(@javax.annotation.Nullable String enrollmentToken) {
        this.enrollmentToken = JsonNullable.<String>of(enrollmentToken);
    }

    public EdgeRouterDetail fingerprint(@javax.annotation.Nullable String fingerprint) {
        this.fingerprint = fingerprint;
        return this;
    }

    /**
     * Get fingerprint
     *
     * @return fingerprint
     */
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_FINGERPRINT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getFingerprint() {
        return fingerprint;
    }

    @JsonProperty(JSON_PROPERTY_FINGERPRINT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFingerprint(@javax.annotation.Nullable String fingerprint) {
        this.fingerprint = fingerprint;
    }

    public EdgeRouterDetail isTunnelerEnabled(@javax.annotation.Nonnull Boolean isTunnelerEnabled) {
        this.isTunnelerEnabled = isTunnelerEnabled;
        return this;
    }

    /**
     * Get isTunnelerEnabled
     *
     * @return isTunnelerEnabled
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_IS_TUNNELER_ENABLED)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Boolean getIsTunnelerEnabled() {
        return isTunnelerEnabled;
    }

    @JsonProperty(JSON_PROPERTY_IS_TUNNELER_ENABLED)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setIsTunnelerEnabled(@javax.annotation.Nonnull Boolean isTunnelerEnabled) {
        this.isTunnelerEnabled = isTunnelerEnabled;
    }

    public EdgeRouterDetail isVerified(@javax.annotation.Nonnull Boolean isVerified) {
        this.isVerified = isVerified;
        return this;
    }

    /**
     * Get isVerified
     *
     * @return isVerified
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_IS_VERIFIED)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Boolean getIsVerified() {
        return isVerified;
    }

    @JsonProperty(JSON_PROPERTY_IS_VERIFIED)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setIsVerified(@javax.annotation.Nonnull Boolean isVerified) {
        this.isVerified = isVerified;
    }

    public EdgeRouterDetail roleAttributes(@javax.annotation.Nullable List<String> roleAttributes) {
        this.roleAttributes = roleAttributes;
        return this;
    }

    public EdgeRouterDetail addRoleAttributesItem(String roleAttributesItem) {
        if (this.roleAttributes == null) {
            this.roleAttributes = new ArrayList<>();
        }
        this.roleAttributes.add(roleAttributesItem);
        return this;
    }

    /**
     * A set of strings used to loosly couple this resource to policies
     *
     * @return roleAttributes
     */
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_ROLE_ATTRIBUTES)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public List<String> getRoleAttributes() {
        return roleAttributes;
    }

    @JsonProperty(JSON_PROPERTY_ROLE_ATTRIBUTES)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setRoleAttributes(@javax.annotation.Nullable List<String> roleAttributes) {
        this.roleAttributes = roleAttributes;
    }

    public EdgeRouterDetail unverifiedCertPem(@javax.annotation.Nullable String unverifiedCertPem) {
        this.unverifiedCertPem = JsonNullable.<String>of(unverifiedCertPem);
        return this;
    }

    /**
     * Get unverifiedCertPem
     *
     * @return unverifiedCertPem
     */
    @javax.annotation.Nullable
    @JsonIgnore
    public String getUnverifiedCertPem() {
        return unverifiedCertPem.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_UNVERIFIED_CERT_PEM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public JsonNullable<String> getUnverifiedCertPem_JsonNullable() {
        return unverifiedCertPem;
    }

    @JsonProperty(JSON_PROPERTY_UNVERIFIED_CERT_PEM)
    public void setUnverifiedCertPem_JsonNullable(JsonNullable<String> unverifiedCertPem) {
        this.unverifiedCertPem = unverifiedCertPem;
    }

    public void setUnverifiedCertPem(@javax.annotation.Nullable String unverifiedCertPem) {
        this.unverifiedCertPem = JsonNullable.<String>of(unverifiedCertPem);
    }

    public EdgeRouterDetail unverifiedFingerprint(
            @javax.annotation.Nullable String unverifiedFingerprint) {
        this.unverifiedFingerprint = JsonNullable.<String>of(unverifiedFingerprint);
        return this;
    }

    /**
     * Get unverifiedFingerprint
     *
     * @return unverifiedFingerprint
     */
    @javax.annotation.Nullable
    @JsonIgnore
    public String getUnverifiedFingerprint() {
        return unverifiedFingerprint.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_UNVERIFIED_FINGERPRINT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public JsonNullable<String> getUnverifiedFingerprint_JsonNullable() {
        return unverifiedFingerprint;
    }

    @JsonProperty(JSON_PROPERTY_UNVERIFIED_FINGERPRINT)
    public void setUnverifiedFingerprint_JsonNullable(JsonNullable<String> unverifiedFingerprint) {
        this.unverifiedFingerprint = unverifiedFingerprint;
    }

    public void setUnverifiedFingerprint(@javax.annotation.Nullable String unverifiedFingerprint) {
        this.unverifiedFingerprint = JsonNullable.<String>of(unverifiedFingerprint);
    }

    public EdgeRouterDetail versionInfo(@javax.annotation.Nullable VersionInfo versionInfo) {
        this.versionInfo = versionInfo;
        return this;
    }

    /**
     * Get versionInfo
     *
     * @return versionInfo
     */
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_VERSION_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public VersionInfo getVersionInfo() {
        return versionInfo;
    }

    @JsonProperty(JSON_PROPERTY_VERSION_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setVersionInfo(@javax.annotation.Nullable VersionInfo versionInfo) {
        this.versionInfo = versionInfo;
    }

    /** Return true if this edgeRouterDetail object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        EdgeRouterDetail edgeRouterDetail = (EdgeRouterDetail) o;
        return Objects.equals(this.links, edgeRouterDetail.links)
                && Objects.equals(this.createdAt, edgeRouterDetail.createdAt)
                && Objects.equals(this.id, edgeRouterDetail.id)
                && Objects.equals(this.tags, edgeRouterDetail.tags)
                && Objects.equals(this.updatedAt, edgeRouterDetail.updatedAt)
                && Objects.equals(this.appData, edgeRouterDetail.appData)
                && Objects.equals(this.cost, edgeRouterDetail.cost)
                && Objects.equals(this.disabled, edgeRouterDetail.disabled)
                && Objects.equals(this.hostname, edgeRouterDetail.hostname)
                && Objects.equals(this.isOnline, edgeRouterDetail.isOnline)
                && Objects.equals(this.name, edgeRouterDetail.name)
                && Objects.equals(this.noTraversal, edgeRouterDetail.noTraversal)
                && Objects.equals(this.supportedProtocols, edgeRouterDetail.supportedProtocols)
                && Objects.equals(this.syncStatus, edgeRouterDetail.syncStatus)
                && equalsNullable(this.certPem, edgeRouterDetail.certPem)
                && equalsNullable(this.enrollmentCreatedAt, edgeRouterDetail.enrollmentCreatedAt)
                && equalsNullable(this.enrollmentExpiresAt, edgeRouterDetail.enrollmentExpiresAt)
                && equalsNullable(this.enrollmentJwt, edgeRouterDetail.enrollmentJwt)
                && equalsNullable(this.enrollmentToken, edgeRouterDetail.enrollmentToken)
                && Objects.equals(this.fingerprint, edgeRouterDetail.fingerprint)
                && Objects.equals(this.isTunnelerEnabled, edgeRouterDetail.isTunnelerEnabled)
                && Objects.equals(this.isVerified, edgeRouterDetail.isVerified)
                && Objects.equals(this.roleAttributes, edgeRouterDetail.roleAttributes)
                && equalsNullable(this.unverifiedCertPem, edgeRouterDetail.unverifiedCertPem)
                && equalsNullable(
                        this.unverifiedFingerprint, edgeRouterDetail.unverifiedFingerprint)
                && Objects.equals(this.versionInfo, edgeRouterDetail.versionInfo);
    }

    private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
        return a == b
                || (a != null
                        && b != null
                        && a.isPresent()
                        && b.isPresent()
                        && Objects.deepEquals(a.get(), b.get()));
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                links,
                createdAt,
                id,
                tags,
                updatedAt,
                appData,
                cost,
                disabled,
                hostname,
                isOnline,
                name,
                noTraversal,
                supportedProtocols,
                syncStatus,
                hashCodeNullable(certPem),
                hashCodeNullable(enrollmentCreatedAt),
                hashCodeNullable(enrollmentExpiresAt),
                hashCodeNullable(enrollmentJwt),
                hashCodeNullable(enrollmentToken),
                fingerprint,
                isTunnelerEnabled,
                isVerified,
                roleAttributes,
                hashCodeNullable(unverifiedCertPem),
                hashCodeNullable(unverifiedFingerprint),
                versionInfo);
    }

    private static <T> int hashCodeNullable(JsonNullable<T> a) {
        if (a == null) {
            return 1;
        }
        return a.isPresent() ? Arrays.deepHashCode(new Object[] {a.get()}) : 31;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class EdgeRouterDetail {\n");
        sb.append("    links: ").append(toIndentedString(links)).append("\n");
        sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
        sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
        sb.append("    appData: ").append(toIndentedString(appData)).append("\n");
        sb.append("    cost: ").append(toIndentedString(cost)).append("\n");
        sb.append("    disabled: ").append(toIndentedString(disabled)).append("\n");
        sb.append("    hostname: ").append(toIndentedString(hostname)).append("\n");
        sb.append("    isOnline: ").append(toIndentedString(isOnline)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    noTraversal: ").append(toIndentedString(noTraversal)).append("\n");
        sb.append("    supportedProtocols: ")
                .append(toIndentedString(supportedProtocols))
                .append("\n");
        sb.append("    syncStatus: ").append(toIndentedString(syncStatus)).append("\n");
        sb.append("    certPem: ").append(toIndentedString(certPem)).append("\n");
        sb.append("    enrollmentCreatedAt: ")
                .append(toIndentedString(enrollmentCreatedAt))
                .append("\n");
        sb.append("    enrollmentExpiresAt: ")
                .append(toIndentedString(enrollmentExpiresAt))
                .append("\n");
        sb.append("    enrollmentJwt: ").append(toIndentedString(enrollmentJwt)).append("\n");
        sb.append("    enrollmentToken: ").append(toIndentedString(enrollmentToken)).append("\n");
        sb.append("    fingerprint: ").append(toIndentedString(fingerprint)).append("\n");
        sb.append("    isTunnelerEnabled: ")
                .append(toIndentedString(isTunnelerEnabled))
                .append("\n");
        sb.append("    isVerified: ").append(toIndentedString(isVerified)).append("\n");
        sb.append("    roleAttributes: ").append(toIndentedString(roleAttributes)).append("\n");
        sb.append("    unverifiedCertPem: ")
                .append(toIndentedString(unverifiedCertPem))
                .append("\n");
        sb.append("    unverifiedFingerprint: ")
                .append(toIndentedString(unverifiedFingerprint))
                .append("\n");
        sb.append("    versionInfo: ").append(toIndentedString(versionInfo)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `_links` to the URL query string
        if (getLinks() != null) {
            for (String _key : getLinks().keySet()) {
                if (getLinks().get(_key) != null) {
                    joiner.add(
                            getLinks()
                                    .get(_key)
                                    .toUrlQueryString(
                                            String.format(
                                                    "%s_links%s%s",
                                                    prefix,
                                                    suffix,
                                                    "".equals(suffix)
                                                            ? ""
                                                            : String.format(
                                                                    "%s%d%s",
                                                                    containerPrefix,
                                                                    _key,
                                                                    containerSuffix))));
                }
            }
        }

        // add `createdAt` to the URL query string
        if (getCreatedAt() != null) {
            joiner.add(
                    String.format(
                            "%screatedAt%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getCreatedAt()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `id` to the URL query string
        if (getId() != null) {
            joiner.add(
                    String.format(
                            "%sid%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getId()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `tags` to the URL query string
        if (getTags() != null) {
            joiner.add(getTags().toUrlQueryString(prefix + "tags" + suffix));
        }

        // add `updatedAt` to the URL query string
        if (getUpdatedAt() != null) {
            joiner.add(
                    String.format(
                            "%supdatedAt%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getUpdatedAt()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `appData` to the URL query string
        if (getAppData() != null) {
            joiner.add(getAppData().toUrlQueryString(prefix + "appData" + suffix));
        }

        // add `cost` to the URL query string
        if (getCost() != null) {
            joiner.add(
                    String.format(
                            "%scost%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getCost()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `disabled` to the URL query string
        if (getDisabled() != null) {
            joiner.add(
                    String.format(
                            "%sdisabled%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getDisabled()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `hostname` to the URL query string
        if (getHostname() != null) {
            joiner.add(
                    String.format(
                            "%shostname%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getHostname()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `isOnline` to the URL query string
        if (getIsOnline() != null) {
            joiner.add(
                    String.format(
                            "%sisOnline%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getIsOnline()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `name` to the URL query string
        if (getName() != null) {
            joiner.add(
                    String.format(
                            "%sname%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getName()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `noTraversal` to the URL query string
        if (getNoTraversal() != null) {
            joiner.add(
                    String.format(
                            "%snoTraversal%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getNoTraversal()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `supportedProtocols` to the URL query string
        if (getSupportedProtocols() != null) {
            for (String _key : getSupportedProtocols().keySet()) {
                joiner.add(
                        String.format(
                                "%ssupportedProtocols%s%s=%s",
                                prefix,
                                suffix,
                                "".equals(suffix)
                                        ? ""
                                        : String.format(
                                                "%s%d%s", containerPrefix, _key, containerSuffix),
                                getSupportedProtocols().get(_key),
                                URLEncoder.encode(
                                                ApiClient.valueToString(
                                                        getSupportedProtocols().get(_key)),
                                                StandardCharsets.UTF_8)
                                        .replaceAll("\\+", "%20")));
            }
        }

        // add `syncStatus` to the URL query string
        if (getSyncStatus() != null) {
            joiner.add(
                    String.format(
                            "%ssyncStatus%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getSyncStatus()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `certPem` to the URL query string
        if (getCertPem() != null) {
            joiner.add(
                    String.format(
                            "%scertPem%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getCertPem()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `enrollmentCreatedAt` to the URL query string
        if (getEnrollmentCreatedAt() != null) {
            joiner.add(
                    String.format(
                            "%senrollmentCreatedAt%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getEnrollmentCreatedAt()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `enrollmentExpiresAt` to the URL query string
        if (getEnrollmentExpiresAt() != null) {
            joiner.add(
                    String.format(
                            "%senrollmentExpiresAt%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getEnrollmentExpiresAt()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `enrollmentJwt` to the URL query string
        if (getEnrollmentJwt() != null) {
            joiner.add(
                    String.format(
                            "%senrollmentJwt%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getEnrollmentJwt()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `enrollmentToken` to the URL query string
        if (getEnrollmentToken() != null) {
            joiner.add(
                    String.format(
                            "%senrollmentToken%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getEnrollmentToken()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `fingerprint` to the URL query string
        if (getFingerprint() != null) {
            joiner.add(
                    String.format(
                            "%sfingerprint%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getFingerprint()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `isTunnelerEnabled` to the URL query string
        if (getIsTunnelerEnabled() != null) {
            joiner.add(
                    String.format(
                            "%sisTunnelerEnabled%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getIsTunnelerEnabled()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `isVerified` to the URL query string
        if (getIsVerified() != null) {
            joiner.add(
                    String.format(
                            "%sisVerified%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getIsVerified()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `roleAttributes` to the URL query string
        if (getRoleAttributes() != null) {
            for (int i = 0; i < getRoleAttributes().size(); i++) {
                joiner.add(
                        String.format(
                                "%sroleAttributes%s%s=%s",
                                prefix,
                                suffix,
                                "".equals(suffix)
                                        ? ""
                                        : String.format(
                                                "%s%d%s", containerPrefix, i, containerSuffix),
                                URLEncoder.encode(
                                                ApiClient.valueToString(getRoleAttributes().get(i)),
                                                StandardCharsets.UTF_8)
                                        .replaceAll("\\+", "%20")));
            }
        }

        // add `unverifiedCertPem` to the URL query string
        if (getUnverifiedCertPem() != null) {
            joiner.add(
                    String.format(
                            "%sunverifiedCertPem%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getUnverifiedCertPem()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `unverifiedFingerprint` to the URL query string
        if (getUnverifiedFingerprint() != null) {
            joiner.add(
                    String.format(
                            "%sunverifiedFingerprint%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getUnverifiedFingerprint()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `versionInfo` to the URL query string
        if (getVersionInfo() != null) {
            joiner.add(getVersionInfo().toUrlQueryString(prefix + "versionInfo" + suffix));
        }

        return joiner.toString();
    }
}
