/*
 * Ziti Edge Management
 * OpenZiti Edge Management API
 *
 * The version of the OpenAPI document: 0.26.42
 * Contact: help@openziti.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openziti.management.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.StringJoiner;
import org.openziti.management.ApiClient;

/** PolicyFailure */
@JsonPropertyOrder({
    PolicyFailure.JSON_PROPERTY_CHECKS,
    PolicyFailure.JSON_PROPERTY_POLICY_ID,
    PolicyFailure.JSON_PROPERTY_POLICY_NAME
})
@javax.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        date = "2025-03-17T12:51:49.931993799-04:00[America/New_York]",
        comments = "Generator version: 7.11.0")
public class PolicyFailure {
    public static final String JSON_PROPERTY_CHECKS = "checks";
    @javax.annotation.Nullable private List<PostureCheckFailure> checks = new ArrayList<>();

    public static final String JSON_PROPERTY_POLICY_ID = "policyId";
    @javax.annotation.Nullable private String policyId;

    public static final String JSON_PROPERTY_POLICY_NAME = "policyName";
    @javax.annotation.Nullable private String policyName;

    public PolicyFailure() {}

    public PolicyFailure checks(@javax.annotation.Nullable List<PostureCheckFailure> checks) {
        this.checks = checks;
        return this;
    }

    public PolicyFailure addChecksItem(PostureCheckFailure checksItem) {
        if (this.checks == null) {
            this.checks = new ArrayList<>();
        }
        this.checks.add(checksItem);
        return this;
    }

    /**
     * Get checks
     *
     * @return checks
     */
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_CHECKS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<PostureCheckFailure> getChecks() {
        return checks;
    }

    @JsonProperty(JSON_PROPERTY_CHECKS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setChecks(@javax.annotation.Nullable List<PostureCheckFailure> checks) {
        this.checks = checks;
    }

    public PolicyFailure policyId(@javax.annotation.Nullable String policyId) {
        this.policyId = policyId;
        return this;
    }

    /**
     * Get policyId
     *
     * @return policyId
     */
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_POLICY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getPolicyId() {
        return policyId;
    }

    @JsonProperty(JSON_PROPERTY_POLICY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPolicyId(@javax.annotation.Nullable String policyId) {
        this.policyId = policyId;
    }

    public PolicyFailure policyName(@javax.annotation.Nullable String policyName) {
        this.policyName = policyName;
        return this;
    }

    /**
     * Get policyName
     *
     * @return policyName
     */
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_POLICY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getPolicyName() {
        return policyName;
    }

    @JsonProperty(JSON_PROPERTY_POLICY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPolicyName(@javax.annotation.Nullable String policyName) {
        this.policyName = policyName;
    }

    /** Return true if this policyFailure object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PolicyFailure policyFailure = (PolicyFailure) o;
        return Objects.equals(this.checks, policyFailure.checks)
                && Objects.equals(this.policyId, policyFailure.policyId)
                && Objects.equals(this.policyName, policyFailure.policyName);
    }

    @Override
    public int hashCode() {
        return Objects.hash(checks, policyId, policyName);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class PolicyFailure {\n");
        sb.append("    checks: ").append(toIndentedString(checks)).append("\n");
        sb.append("    policyId: ").append(toIndentedString(policyId)).append("\n");
        sb.append("    policyName: ").append(toIndentedString(policyName)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `checks` to the URL query string
        if (getChecks() != null) {
            for (int i = 0; i < getChecks().size(); i++) {
                if (getChecks().get(i) != null) {
                    joiner.add(
                            getChecks()
                                    .get(i)
                                    .toUrlQueryString(
                                            String.format(
                                                    "%schecks%s%s",
                                                    prefix,
                                                    suffix,
                                                    "".equals(suffix)
                                                            ? ""
                                                            : String.format(
                                                                    "%s%d%s",
                                                                    containerPrefix,
                                                                    i,
                                                                    containerSuffix))));
                }
            }
        }

        // add `policyId` to the URL query string
        if (getPolicyId() != null) {
            joiner.add(
                    String.format(
                            "%spolicyId%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getPolicyId()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `policyName` to the URL query string
        if (getPolicyName() != null) {
            joiner.add(
                    String.format(
                            "%spolicyName%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getPolicyName()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        return joiner.toString();
    }
}
