/*
 * Ziti Edge Management
 * OpenZiti Edge Management API
 *
 * The version of the OpenAPI document: 0.26.42
 * Contact: help@openziti.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openziti.management.model;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.Arrays;
import java.util.Objects;
import java.util.StringJoiner;
import org.openapitools.jackson.nullable.JsonNullable;
import org.openziti.management.ApiClient;

/** AuthPolicySecondaryPatch */
@JsonPropertyOrder({
    AuthPolicySecondaryPatch.JSON_PROPERTY_REQUIRE_EXT_JWT_SIGNER,
    AuthPolicySecondaryPatch.JSON_PROPERTY_REQUIRE_TOTP
})
@javax.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        date = "2025-03-17T12:51:49.931993799-04:00[America/New_York]",
        comments = "Generator version: 7.11.0")
public class AuthPolicySecondaryPatch {
    public static final String JSON_PROPERTY_REQUIRE_EXT_JWT_SIGNER = "requireExtJwtSigner";
    private JsonNullable<String> requireExtJwtSigner = JsonNullable.<String>undefined();

    public static final String JSON_PROPERTY_REQUIRE_TOTP = "requireTotp";
    private JsonNullable<Boolean> requireTotp = JsonNullable.<Boolean>undefined();

    public AuthPolicySecondaryPatch() {}

    public AuthPolicySecondaryPatch requireExtJwtSigner(
            @javax.annotation.Nullable String requireExtJwtSigner) {
        this.requireExtJwtSigner = JsonNullable.<String>of(requireExtJwtSigner);
        return this;
    }

    /**
     * Get requireExtJwtSigner
     *
     * @return requireExtJwtSigner
     */
    @javax.annotation.Nullable
    @JsonIgnore
    public String getRequireExtJwtSigner() {
        return requireExtJwtSigner.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_REQUIRE_EXT_JWT_SIGNER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public JsonNullable<String> getRequireExtJwtSigner_JsonNullable() {
        return requireExtJwtSigner;
    }

    @JsonProperty(JSON_PROPERTY_REQUIRE_EXT_JWT_SIGNER)
    public void setRequireExtJwtSigner_JsonNullable(JsonNullable<String> requireExtJwtSigner) {
        this.requireExtJwtSigner = requireExtJwtSigner;
    }

    public void setRequireExtJwtSigner(@javax.annotation.Nullable String requireExtJwtSigner) {
        this.requireExtJwtSigner = JsonNullable.<String>of(requireExtJwtSigner);
    }

    public AuthPolicySecondaryPatch requireTotp(@javax.annotation.Nullable Boolean requireTotp) {
        this.requireTotp = JsonNullable.<Boolean>of(requireTotp);
        return this;
    }

    /**
     * Get requireTotp
     *
     * @return requireTotp
     */
    @javax.annotation.Nullable
    @JsonIgnore
    public Boolean getRequireTotp() {
        return requireTotp.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_REQUIRE_TOTP)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public JsonNullable<Boolean> getRequireTotp_JsonNullable() {
        return requireTotp;
    }

    @JsonProperty(JSON_PROPERTY_REQUIRE_TOTP)
    public void setRequireTotp_JsonNullable(JsonNullable<Boolean> requireTotp) {
        this.requireTotp = requireTotp;
    }

    public void setRequireTotp(@javax.annotation.Nullable Boolean requireTotp) {
        this.requireTotp = JsonNullable.<Boolean>of(requireTotp);
    }

    /** Return true if this authPolicySecondaryPatch object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AuthPolicySecondaryPatch authPolicySecondaryPatch = (AuthPolicySecondaryPatch) o;
        return equalsNullable(
                        this.requireExtJwtSigner, authPolicySecondaryPatch.requireExtJwtSigner)
                && equalsNullable(this.requireTotp, authPolicySecondaryPatch.requireTotp);
    }

    private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
        return a == b
                || (a != null
                        && b != null
                        && a.isPresent()
                        && b.isPresent()
                        && Objects.deepEquals(a.get(), b.get()));
    }

    @Override
    public int hashCode() {
        return Objects.hash(hashCodeNullable(requireExtJwtSigner), hashCodeNullable(requireTotp));
    }

    private static <T> int hashCodeNullable(JsonNullable<T> a) {
        if (a == null) {
            return 1;
        }
        return a.isPresent() ? Arrays.deepHashCode(new Object[] {a.get()}) : 31;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class AuthPolicySecondaryPatch {\n");
        sb.append("    requireExtJwtSigner: ")
                .append(toIndentedString(requireExtJwtSigner))
                .append("\n");
        sb.append("    requireTotp: ").append(toIndentedString(requireTotp)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `requireExtJwtSigner` to the URL query string
        if (getRequireExtJwtSigner() != null) {
            joiner.add(
                    String.format(
                            "%srequireExtJwtSigner%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getRequireExtJwtSigner()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `requireTotp` to the URL query string
        if (getRequireTotp() != null) {
            joiner.add(
                    String.format(
                            "%srequireTotp%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getRequireTotp()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        return joiner.toString();
    }
}
