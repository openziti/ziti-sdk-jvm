/*
 * Ziti Edge Management
 * OpenZiti Edge Management API
 *
 * The version of the OpenAPI document: 0.26.42
 * Contact: help@openziti.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openziti.management.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.StringJoiner;
import org.openziti.management.ApiClient;

/** SessionManagementDetail */
@JsonPropertyOrder({
    SessionManagementDetail.JSON_PROPERTY_LINKS,
    SessionManagementDetail.JSON_PROPERTY_CREATED_AT,
    SessionManagementDetail.JSON_PROPERTY_ID,
    SessionManagementDetail.JSON_PROPERTY_TAGS,
    SessionManagementDetail.JSON_PROPERTY_UPDATED_AT,
    SessionManagementDetail.JSON_PROPERTY_API_SESSION,
    SessionManagementDetail.JSON_PROPERTY_API_SESSION_ID,
    SessionManagementDetail.JSON_PROPERTY_EDGE_ROUTERS,
    SessionManagementDetail.JSON_PROPERTY_IDENTITY_ID,
    SessionManagementDetail.JSON_PROPERTY_SERVICE,
    SessionManagementDetail.JSON_PROPERTY_SERVICE_ID,
    SessionManagementDetail.JSON_PROPERTY_TOKEN,
    SessionManagementDetail.JSON_PROPERTY_TYPE,
    SessionManagementDetail.JSON_PROPERTY_SERVICE_POLICIES
})
@javax.annotation.Generated(
        value = "org.openapitools.codegen.languages.JavaClientCodegen",
        date = "2025-03-17T12:51:49.931993799-04:00[America/New_York]",
        comments = "Generator version: 7.11.0")
public class SessionManagementDetail {
    public static final String JSON_PROPERTY_LINKS = "_links";
    @javax.annotation.Nonnull private Map<String, Link> links = new HashMap<>();

    public static final String JSON_PROPERTY_CREATED_AT = "createdAt";
    @javax.annotation.Nonnull private OffsetDateTime createdAt;

    public static final String JSON_PROPERTY_ID = "id";
    @javax.annotation.Nonnull private String id;

    public static final String JSON_PROPERTY_TAGS = "tags";
    @javax.annotation.Nullable private Tags tags;

    public static final String JSON_PROPERTY_UPDATED_AT = "updatedAt";
    @javax.annotation.Nonnull private OffsetDateTime updatedAt;

    public static final String JSON_PROPERTY_API_SESSION = "apiSession";
    @javax.annotation.Nonnull private EntityRef apiSession;

    public static final String JSON_PROPERTY_API_SESSION_ID = "apiSessionId";
    @javax.annotation.Nonnull private String apiSessionId;

    public static final String JSON_PROPERTY_EDGE_ROUTERS = "edgeRouters";
    @javax.annotation.Nonnull private List<SessionEdgeRouter> edgeRouters = new ArrayList<>();

    public static final String JSON_PROPERTY_IDENTITY_ID = "identityId";
    @javax.annotation.Nonnull private String identityId;

    public static final String JSON_PROPERTY_SERVICE = "service";
    @javax.annotation.Nonnull private EntityRef service;

    public static final String JSON_PROPERTY_SERVICE_ID = "serviceId";
    @javax.annotation.Nonnull private String serviceId;

    public static final String JSON_PROPERTY_TOKEN = "token";
    @javax.annotation.Nonnull private String token;

    public static final String JSON_PROPERTY_TYPE = "type";
    @javax.annotation.Nonnull private DialBind type;

    public static final String JSON_PROPERTY_SERVICE_POLICIES = "servicePolicies";
    @javax.annotation.Nullable private List<EntityRef> servicePolicies = new ArrayList<>();

    public SessionManagementDetail() {}

    public SessionManagementDetail links(@javax.annotation.Nonnull Map<String, Link> links) {
        this.links = links;
        return this;
    }

    public SessionManagementDetail putLinksItem(String key, Link linksItem) {
        if (this.links == null) {
            this.links = new HashMap<>();
        }
        this.links.put(key, linksItem);
        return this;
    }

    /**
     * A map of named links
     *
     * @return links
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_LINKS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public Map<String, Link> getLinks() {
        return links;
    }

    @JsonProperty(JSON_PROPERTY_LINKS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setLinks(@javax.annotation.Nonnull Map<String, Link> links) {
        this.links = links;
    }

    public SessionManagementDetail createdAt(@javax.annotation.Nonnull OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Get createdAt
     *
     * @return createdAt
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_CREATED_AT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public OffsetDateTime getCreatedAt() {
        return createdAt;
    }

    @JsonProperty(JSON_PROPERTY_CREATED_AT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setCreatedAt(@javax.annotation.Nonnull OffsetDateTime createdAt) {
        this.createdAt = createdAt;
    }

    public SessionManagementDetail id(@javax.annotation.Nonnull String id) {
        this.id = id;
        return this;
    }

    /**
     * Get id
     *
     * @return id
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getId() {
        return id;
    }

    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setId(@javax.annotation.Nonnull String id) {
        this.id = id;
    }

    public SessionManagementDetail tags(@javax.annotation.Nullable Tags tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Get tags
     *
     * @return tags
     */
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_TAGS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Tags getTags() {
        return tags;
    }

    @JsonProperty(JSON_PROPERTY_TAGS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTags(@javax.annotation.Nullable Tags tags) {
        this.tags = tags;
    }

    public SessionManagementDetail updatedAt(@javax.annotation.Nonnull OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    /**
     * Get updatedAt
     *
     * @return updatedAt
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_UPDATED_AT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public OffsetDateTime getUpdatedAt() {
        return updatedAt;
    }

    @JsonProperty(JSON_PROPERTY_UPDATED_AT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setUpdatedAt(@javax.annotation.Nonnull OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    public SessionManagementDetail apiSession(@javax.annotation.Nonnull EntityRef apiSession) {
        this.apiSession = apiSession;
        return this;
    }

    /**
     * Get apiSession
     *
     * @return apiSession
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_API_SESSION)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public EntityRef getApiSession() {
        return apiSession;
    }

    @JsonProperty(JSON_PROPERTY_API_SESSION)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setApiSession(@javax.annotation.Nonnull EntityRef apiSession) {
        this.apiSession = apiSession;
    }

    public SessionManagementDetail apiSessionId(@javax.annotation.Nonnull String apiSessionId) {
        this.apiSessionId = apiSessionId;
        return this;
    }

    /**
     * Get apiSessionId
     *
     * @return apiSessionId
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_API_SESSION_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getApiSessionId() {
        return apiSessionId;
    }

    @JsonProperty(JSON_PROPERTY_API_SESSION_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setApiSessionId(@javax.annotation.Nonnull String apiSessionId) {
        this.apiSessionId = apiSessionId;
    }

    public SessionManagementDetail edgeRouters(
            @javax.annotation.Nonnull List<SessionEdgeRouter> edgeRouters) {
        this.edgeRouters = edgeRouters;
        return this;
    }

    public SessionManagementDetail addEdgeRoutersItem(SessionEdgeRouter edgeRoutersItem) {
        if (this.edgeRouters == null) {
            this.edgeRouters = new ArrayList<>();
        }
        this.edgeRouters.add(edgeRoutersItem);
        return this;
    }

    /**
     * Get edgeRouters
     *
     * @return edgeRouters
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_EDGE_ROUTERS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public List<SessionEdgeRouter> getEdgeRouters() {
        return edgeRouters;
    }

    @JsonProperty(JSON_PROPERTY_EDGE_ROUTERS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setEdgeRouters(@javax.annotation.Nonnull List<SessionEdgeRouter> edgeRouters) {
        this.edgeRouters = edgeRouters;
    }

    public SessionManagementDetail identityId(@javax.annotation.Nonnull String identityId) {
        this.identityId = identityId;
        return this;
    }

    /**
     * Get identityId
     *
     * @return identityId
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_IDENTITY_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getIdentityId() {
        return identityId;
    }

    @JsonProperty(JSON_PROPERTY_IDENTITY_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setIdentityId(@javax.annotation.Nonnull String identityId) {
        this.identityId = identityId;
    }

    public SessionManagementDetail service(@javax.annotation.Nonnull EntityRef service) {
        this.service = service;
        return this;
    }

    /**
     * Get service
     *
     * @return service
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_SERVICE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public EntityRef getService() {
        return service;
    }

    @JsonProperty(JSON_PROPERTY_SERVICE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setService(@javax.annotation.Nonnull EntityRef service) {
        this.service = service;
    }

    public SessionManagementDetail serviceId(@javax.annotation.Nonnull String serviceId) {
        this.serviceId = serviceId;
        return this;
    }

    /**
     * Get serviceId
     *
     * @return serviceId
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_SERVICE_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getServiceId() {
        return serviceId;
    }

    @JsonProperty(JSON_PROPERTY_SERVICE_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setServiceId(@javax.annotation.Nonnull String serviceId) {
        this.serviceId = serviceId;
    }

    public SessionManagementDetail token(@javax.annotation.Nonnull String token) {
        this.token = token;
        return this;
    }

    /**
     * Get token
     *
     * @return token
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_TOKEN)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public String getToken() {
        return token;
    }

    @JsonProperty(JSON_PROPERTY_TOKEN)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setToken(@javax.annotation.Nonnull String token) {
        this.token = token;
    }

    public SessionManagementDetail type(@javax.annotation.Nonnull DialBind type) {
        this.type = type;
        return this;
    }

    /**
     * Get type
     *
     * @return type
     */
    @javax.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public DialBind getType() {
        return type;
    }

    @JsonProperty(JSON_PROPERTY_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setType(@javax.annotation.Nonnull DialBind type) {
        this.type = type;
    }

    public SessionManagementDetail servicePolicies(
            @javax.annotation.Nullable List<EntityRef> servicePolicies) {
        this.servicePolicies = servicePolicies;
        return this;
    }

    public SessionManagementDetail addServicePoliciesItem(EntityRef servicePoliciesItem) {
        if (this.servicePolicies == null) {
            this.servicePolicies = new ArrayList<>();
        }
        this.servicePolicies.add(servicePoliciesItem);
        return this;
    }

    /**
     * Get servicePolicies
     *
     * @return servicePolicies
     */
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_SERVICE_POLICIES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public List<EntityRef> getServicePolicies() {
        return servicePolicies;
    }

    @JsonProperty(JSON_PROPERTY_SERVICE_POLICIES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setServicePolicies(@javax.annotation.Nullable List<EntityRef> servicePolicies) {
        this.servicePolicies = servicePolicies;
    }

    /** Return true if this sessionManagementDetail object is equal to o. */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SessionManagementDetail sessionManagementDetail = (SessionManagementDetail) o;
        return Objects.equals(this.links, sessionManagementDetail.links)
                && Objects.equals(this.createdAt, sessionManagementDetail.createdAt)
                && Objects.equals(this.id, sessionManagementDetail.id)
                && Objects.equals(this.tags, sessionManagementDetail.tags)
                && Objects.equals(this.updatedAt, sessionManagementDetail.updatedAt)
                && Objects.equals(this.apiSession, sessionManagementDetail.apiSession)
                && Objects.equals(this.apiSessionId, sessionManagementDetail.apiSessionId)
                && Objects.equals(this.edgeRouters, sessionManagementDetail.edgeRouters)
                && Objects.equals(this.identityId, sessionManagementDetail.identityId)
                && Objects.equals(this.service, sessionManagementDetail.service)
                && Objects.equals(this.serviceId, sessionManagementDetail.serviceId)
                && Objects.equals(this.token, sessionManagementDetail.token)
                && Objects.equals(this.type, sessionManagementDetail.type)
                && Objects.equals(this.servicePolicies, sessionManagementDetail.servicePolicies);
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                links,
                createdAt,
                id,
                tags,
                updatedAt,
                apiSession,
                apiSessionId,
                edgeRouters,
                identityId,
                service,
                serviceId,
                token,
                type,
                servicePolicies);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class SessionManagementDetail {\n");
        sb.append("    links: ").append(toIndentedString(links)).append("\n");
        sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
        sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
        sb.append("    apiSession: ").append(toIndentedString(apiSession)).append("\n");
        sb.append("    apiSessionId: ").append(toIndentedString(apiSessionId)).append("\n");
        sb.append("    edgeRouters: ").append(toIndentedString(edgeRouters)).append("\n");
        sb.append("    identityId: ").append(toIndentedString(identityId)).append("\n");
        sb.append("    service: ").append(toIndentedString(service)).append("\n");
        sb.append("    serviceId: ").append(toIndentedString(serviceId)).append("\n");
        sb.append("    token: ").append(toIndentedString(token)).append("\n");
        sb.append("    type: ").append(toIndentedString(type)).append("\n");
        sb.append("    servicePolicies: ").append(toIndentedString(servicePolicies)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first
     * line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `_links` to the URL query string
        if (getLinks() != null) {
            for (String _key : getLinks().keySet()) {
                if (getLinks().get(_key) != null) {
                    joiner.add(
                            getLinks()
                                    .get(_key)
                                    .toUrlQueryString(
                                            String.format(
                                                    "%s_links%s%s",
                                                    prefix,
                                                    suffix,
                                                    "".equals(suffix)
                                                            ? ""
                                                            : String.format(
                                                                    "%s%d%s",
                                                                    containerPrefix,
                                                                    _key,
                                                                    containerSuffix))));
                }
            }
        }

        // add `createdAt` to the URL query string
        if (getCreatedAt() != null) {
            joiner.add(
                    String.format(
                            "%screatedAt%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getCreatedAt()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `id` to the URL query string
        if (getId() != null) {
            joiner.add(
                    String.format(
                            "%sid%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getId()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `tags` to the URL query string
        if (getTags() != null) {
            joiner.add(getTags().toUrlQueryString(prefix + "tags" + suffix));
        }

        // add `updatedAt` to the URL query string
        if (getUpdatedAt() != null) {
            joiner.add(
                    String.format(
                            "%supdatedAt%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getUpdatedAt()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `apiSession` to the URL query string
        if (getApiSession() != null) {
            joiner.add(getApiSession().toUrlQueryString(prefix + "apiSession" + suffix));
        }

        // add `apiSessionId` to the URL query string
        if (getApiSessionId() != null) {
            joiner.add(
                    String.format(
                            "%sapiSessionId%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getApiSessionId()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `edgeRouters` to the URL query string
        if (getEdgeRouters() != null) {
            for (int i = 0; i < getEdgeRouters().size(); i++) {
                if (getEdgeRouters().get(i) != null) {
                    joiner.add(
                            getEdgeRouters()
                                    .get(i)
                                    .toUrlQueryString(
                                            String.format(
                                                    "%sedgeRouters%s%s",
                                                    prefix,
                                                    suffix,
                                                    "".equals(suffix)
                                                            ? ""
                                                            : String.format(
                                                                    "%s%d%s",
                                                                    containerPrefix,
                                                                    i,
                                                                    containerSuffix))));
                }
            }
        }

        // add `identityId` to the URL query string
        if (getIdentityId() != null) {
            joiner.add(
                    String.format(
                            "%sidentityId%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getIdentityId()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `service` to the URL query string
        if (getService() != null) {
            joiner.add(getService().toUrlQueryString(prefix + "service" + suffix));
        }

        // add `serviceId` to the URL query string
        if (getServiceId() != null) {
            joiner.add(
                    String.format(
                            "%sserviceId%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getServiceId()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `token` to the URL query string
        if (getToken() != null) {
            joiner.add(
                    String.format(
                            "%stoken%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getToken()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `type` to the URL query string
        if (getType() != null) {
            joiner.add(
                    String.format(
                            "%stype%s=%s",
                            prefix,
                            suffix,
                            URLEncoder.encode(
                                            ApiClient.valueToString(getType()),
                                            StandardCharsets.UTF_8)
                                    .replaceAll("\\+", "%20")));
        }

        // add `servicePolicies` to the URL query string
        if (getServicePolicies() != null) {
            for (int i = 0; i < getServicePolicies().size(); i++) {
                if (getServicePolicies().get(i) != null) {
                    joiner.add(
                            getServicePolicies()
                                    .get(i)
                                    .toUrlQueryString(
                                            String.format(
                                                    "%sservicePolicies%s%s",
                                                    prefix,
                                                    suffix,
                                                    "".equals(suffix)
                                                            ? ""
                                                            : String.format(
                                                                    "%s%d%s",
                                                                    containerPrefix,
                                                                    i,
                                                                    containerSuffix))));
                }
            }
        }

        return joiner.toString();
    }
}
