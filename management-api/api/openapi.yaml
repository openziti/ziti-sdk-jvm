openapi: 3.0.1
info:
  contact:
    email: help@openziti.org
    name: OpenZiti
    url: https://openziti.discourse.group
  description: OpenZiti Edge Management API
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  title: Ziti Edge Management
  version: 0.26.42
servers:
- url: https://demo.ziti.dev/edge/management/v1
paths:
  /:
    get:
      operationId: listRoot
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listVersionEnvelope"
          description: Version information for the controller
      security: []
      summary: Returns version information
      tags:
      - Informational
      x-accepts:
      - application/json
  /.well-known/est/cacerts:
    get:
      description: |
        This endpoint is used during enrollments to bootstrap trust between enrolling clients and the Ziti Edge API.
        This endpoint returns a base64 encoded PKCS7 store. The content can be base64 decoded and parsed by any library
        that supports parsing PKCS7 stores.
      operationId: listWellKnownCas
      responses:
        "200":
          content:
            application/pkcs7-mime:
              schema:
                example: |
                  MIIMUQYJKoZIhvcNAQcCoIIMQjCCDD4CAQExADALBgkqhkiG9w0BBwGgggwkMIIG
                  BjCCA+6gAwIBAgICEAAwDQYJKoZIhvcNAQELBQAwgZcxCzAJBgNVBAYTAlVTMRcw
                  FQYDVQQIDA5Ob3J0aCBDYXJvbGluYTESMBAGA1UEBwwJQ2hhcmxvdHRlMRMwEQYD
                  VQQKDApOZXRGb3VuZHJ5MSkwJwYDVQQLDCBOZXRGb3VuZHJ5IENlcnRpZmljYXRl
                  IEF1dGhvcml0eTEbMBkGA1UEAwwSTmV0Rm91bmRyeSBSb290IENBMB4XDTE4MDUx
                  ODE2NTcyM1oXDTI4MDUxNTE2NTcyM1owgYsxCzAJBgNVBAYTAlVTMRcwFQYDVQQI
                  DA5Ob3J0aCBDYXJvbGluYTETMBEGA1UECgwKTmV0Rm91bmRyeTEpMCcGA1UECwwg
                  TmV0Rm91bmRyeSBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkxIzAhBgNVBAMMGk5ldEZv
                  dW5kcnkgSW50ZXJtZWRpYXRlIENBMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIIC
                  CgKCAgEAsb1EPhMUweS9WpjT7L54xAOmZqugJ6fhSrFfLUwNUy172q+ASvZTpT1z
                  KIPcZpGmPB3TX2bHaAR67BbRkUR11JgWE3U8+FsGrYmPZtaKM6fg8Mh0WZ41oMYQ
                  NJyQixOktrgqfybyJoT5PeT5AA7QQmd8mku2X9nkAu6gWPf2nHNc7SeQdijmyQQa
                  VK3oqyaxOzWzsU/XbfMEz/ObkefUxgt5Z6jlK0xcW0Q+QgtawMKLUiuo6obWRPcl
                  7Hm9Sze8XJS5pbvS5JkUszxoRZuDVHZylrlHIpA/IL+BnvS+M7SP28UWe9skrv/s
                  6ACpJtuPJ1EYf5fakugOpY7i+hq7YNi//csbc49Qjn2OtttrR7JcTaHUEU1I/tQb
                  QGAtNkI4pJjRVUdDawQFQlWHZD1COixNLErs2HzAI00DhLrY6SKITI/kjN0Xx010
                  XdMcdfay0PLWm6RwxiRmMQFL4GNIC895NF1q6xV4W4rWgqUNlcvKpy+i1chWpRbU
                  He16ul0qh10fcESrRvAbXn5YrQJLrwbSr+85ubN8lYdNLE0qg2cIXZlUilarZZzW
                  ghtCe+KkUpjfRuAi/CqfSwNK3QXEfeVEK6S49mHeSekOizFIw7fmDhCz9vXwMOnb
                  ryRSLEJks0gIRcSDVChXheAqC98y4kcQdniNWFnqJXoqA+rrSokCAwEAAaNmMGQw
                  HQYDVR0OBBYEFK8UXC/sq6dGVFAqEXHsQDzqzwuUMB8GA1UdIwQYMBaAFEHz6RRu
                  OuXj2mwAzOeUinfWeivpMBIGA1UdEwEB/wQIMAYBAf8CAQAwDgYDVR0PAQH/BAQD
                  AgGGMA0GCSqGSIb3DQEBCwUAA4ICAQBDAAaOE2Nbb49eOjyTNxIeOB+ZKQjJ1hUE
                  gRrootAA8NYbtKW/vyxTWnNi5XOGXd4DFS9OKZ0mL/7NyLc0mbTwPH2ZT8KTPUTS
                  Cpo6yktZ/7TMjyAtWZiOMg2EH+6m/nlNSXk/v5fb8+JQLdZfpxoA017dHh3tc8l7
                  KOskCZNwQHgF/YMXrPXUNbsGkXRuJLtpjPw5O9GvPys7p+a1aJH1WCTly9zfB6j+
                  rMF+UGCPDT30sxitVlohik83j6pKLgEAP/gi8nJbILlTP7ce+gJeHR2tfDvmK91X
                  6QgCF2STUFBU7/9H1/pPRRykOxQpAd8xqSgqGEyp9Ie4tysZjwoUEnG8IVJ5ykrI
                  Fximvnb4B+LABV9WEo08n8m1R8wEryrISi8fBPn3Pr5nuayOfFLa15CLTkZF40FN
                  8ika1qNZy8bWRDwTZJQUUb7VCheRWcMwdZdNmhl3J+VZLpQ+ruW7b2ajwacHz5Nw
                  BHKNcmxXb/4vHq/BnlcayHnSqT6036+OZQ+owDegcYmWV6LaM7xLErjHz2EE38M2
                  YSiW5SU1zluDe+iHb6l3Gd3Fj/X1gkMWFgYh0XPMSUSyimLNYzy4THKzmWlcQNFo
                  LLiIDbLrMt+vk+vBkIsNTTPXRJOFPBhmIF6uIUj+2YhzNotX/pQtqMKms3pPlmHq
                  dH6biwygETCCBhYwggP+oAMCAQICCQDquKpymLJ5WzANBgkqhkiG9w0BAQsFADCB
                  lzELMAkGA1UEBhMCVVMxFzAVBgNVBAgMDk5vcnRoIENhcm9saW5hMRIwEAYDVQQH
                  DAlDaGFybG90dGUxEzARBgNVBAoMCk5ldEZvdW5kcnkxKTAnBgNVBAsMIE5ldEZv
                  dW5kcnkgQ2VydGlmaWNhdGUgQXV0aG9yaXR5MRswGQYDVQQDDBJOZXRGb3VuZHJ5
                  IFJvb3QgQ0EwHhcNMTgwNTE4MTY1NDQ3WhcNMzgwNTEzMTY1NDQ3WjCBlzELMAkG
                  A1UEBhMCVVMxFzAVBgNVBAgMDk5vcnRoIENhcm9saW5hMRIwEAYDVQQHDAlDaGFy
                  bG90dGUxEzARBgNVBAoMCk5ldEZvdW5kcnkxKTAnBgNVBAsMIE5ldEZvdW5kcnkg
                  Q2VydGlmaWNhdGUgQXV0aG9yaXR5MRswGQYDVQQDDBJOZXRGb3VuZHJ5IFJvb3Qg
                  Q0EwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDKq/Xa+749Cr3WJGYD
                  DIEtNKIRnTFc6TeiRSm/O7hG2+1Nrh/dObjZJuDjsopWP8NFA/DwlNyEphYKAeSw
                  HDmu+4nFd6ifoeDE2lYq6bNhLcgN+A3MlN5Phb2rnO32YYZwHXGWov+jtd2gaK0f
                  WsH8CQxn6n2v7qvPMTeYFP8p4jqTZw2bvZWw+LMYTFCy541DFqQLQasMg10mXRAV
                  XO7Oa9y+D1re1zLq4wS6u8ItJoKzfmvZkMvD90C/tQ4u0iJaL7GB2SE9MOPDeGVv
                  pnoSAIkSVmvRDUAj2x9PuukykzoL1OAWzc5Cg+5LxRmLejVE7PvPcHaTtNag2tRD
                  w2vbMeFKN8NvQH1QYcaPWZe4Vl9b6DAuTaH5RN919H/F+ZHyjZybVPwC14lflneI
                  KyNy8JEV/YMIbEADWnuiedzDehk2Opn+0+9Zr2X/xfjCo8iWHFbNaVnQX7wdRaOo
                  783lEouncqe46FDBLBpyAuDKHQpIT3MK8rkC/1yBNxsH44vMweUZuK0u7PC9KHtm
                  pQfuflYGfxA34kY6WU3jzyQHetoLYjoxTqNEEjuGpwy2o1j7RaCBEFIbYlnlbhpE
                  WFTaQf96z2GQ6m1U3y7JyDflHSu9Fo1JNkG3qXsjDwda/6W7NRJRgdFrhnOwrm7F
                  6L9X4P1HnzU/VJL66LwPmiHVjQIDAQABo2MwYTAdBgNVHQ4EFgQUQfPpFG465ePa
                  bADM55SKd9Z6K+kwHwYDVR0jBBgwFoAUQfPpFG465ePabADM55SKd9Z6K+kwDwYD
                  VR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAYYwDQYJKoZIhvcNAQELBQADggIB
                  ACfU74aKWROaxnue8tZb5PFkEbnDRcRrKXRhnptA0vrgB4ydnYxX9hEBZD8o6PBy
                  3rewvl5meSOBE6zyb4JD80lHdzHSVFIwbzsNOeEjCslv/PA/3Y+J7DCt6gPNMDeY
                  uEssdqeSiMoYz2gnven4flSMKgTAJd3/SpVrn35HzXiU9MkmFVpPEMnTctOjw+Jn
                  cCkG5+D9N14dxtgZ/tUfbH+GUfhyGVxRdPrX5KQqAyapMfEaMXXa8KNs7PG+sDiS
                  WI+Sg9jUGtxgkfKdVNtFW+QMXyy7eT3iXPA+1r2hFAhgfIaGtBJUhxPHMhKtjbAg
                  AX+6+2D3GAbaD1+lcQHhKry3hygQ3OX79FJW6zyPS0tiV/LfovHqX/3x9q5PTVBO
                  wEOS2/LCc4R2M7S+HIPf4eSJ+nH4uCIdJ42WCror/mRsuL7geCksi70GHuCynP4y
                  qQFszu/UtbBEsN8loTnLpOInxaGB1Y8UPm14b2Lo1/3HkoMVh0/UaHJ0TmnZ1r7m
                  fGhfRyAZYRdvT1sB+Eb4b5A2zEZqsTc9IwFOhnI4ZilPoZ5s2xejqrVw3GSvovEh
                  dprrQmvxuh+VQ23y/+/4z9b2xWyDu2zVveB4whqPe2rkgxJrEl4GfLk2DW+dN6j8
                  3Zl4lPoUZYwzkC6raCaHyFlAoaTbqz0H6rvVJYxJPS6UoQAxAA==
                type: string
          description: A base64 encoded PKCS7 store
      security: []
      summary: Get CA Cert Store
      tags:
      - Well Known
      x-accepts:
      - application/pkcs7-mime
  /api-sessions:
    get:
      description: |
        Returns a list of active API sessions. The resources can be sorted, filtered, and paginated. This endpoint
        requires admin access.
      operationId: listAPISessions
      parameters:
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: filter
        schema:
          type: string
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/listApiSessionsEnvelope"
          description: A list of active API Sessions
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List active API sessions
      tags:
      - API Session
      x-accepts:
      - application/json
      - application/json; charset=utf-8
  /api-sessions/{id}:
    delete:
      description: Deletes and API sesion by id. Requires admin access.
      operationId: deleteAPISessions
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The delete request was successful and the resource has been
            removed
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "403":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      summary: Deletes an API Sessions
      tags:
      - API Session
      x-accepts:
      - application/json
    get:
      description: Retrieves a single API Session by id. Requires admin access.
      operationId: detailAPISessions
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/detailApiSessionEnvelope"
          description: Retrieves a singular API Session by id
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Retrieves a single API Session
      tags:
      - API Session
      x-accepts:
      - application/json
  /auth-policies:
    get:
      description: Retrieves a list of Auth Policies
      operationId: listAuthPolicies
      parameters:
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: filter
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listAuthPoliciesEnvelope"
          description: A list of Auth Policies
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List Auth Policies
      tags:
      - Auth Policy
      x-accepts:
      - application/json
    post:
      description: Creates an Auth Policy. Requires admin access.
      operationId: createAuthPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/authPolicyCreate"
        description: An Auth Policy to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/createEnvelope"
          description: The create request was successful and the resource has been
            added at the following location
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Creates an Auth Policy
      tags:
      - Auth Policy
      x-codegen-request-body-name: authPolicy
      x-content-type: application/json
      x-accepts:
      - application/json
  /auth-policies/{id}:
    delete:
      description: |
        Delete an Auth Policy by id. Requires admin access.
      operationId: deleteAuthPolicy
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The delete request was successful and the resource has been
            removed
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Delete an Auth Policy
      tags:
      - Auth Policy
      x-accepts:
      - application/json
    get:
      description: Retrieves a single Auth Policy by id. Requires admin access.
      operationId: detailAuthPolicy
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/detailAuthPolicyEnvelope"
          description: A singular Auth Policy resource
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Retrieves a single Auth Policy
      tags:
      - Auth Policy
      x-accepts:
      - application/json
    patch:
      description: Update only the supplied fields on an Auth Policy by id. Requires
        admin access.
      operationId: patchAuthPolicy
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/authPolicyPatch"
        description: An Auth Policy patch object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The patch request was successful and the resource has been
            altered
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Update the supplied fields on an Auth Policy
      tags:
      - Auth Policy
      x-codegen-request-body-name: authPolicy
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: Update all fields on an Auth Policy by id. Requires admin access.
      operationId: updateAuthPolicy
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/authPolicyUpdate"
        description: An Auth Policy update object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The update request was successful and the resource has been
            altered
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Update all fields on an Auth Policy
      tags:
      - Auth Policy
      x-codegen-request-body-name: authPolicy
      x-content-type: application/json
      x-accepts:
      - application/json
  /authenticate:
    post:
      description: |
        Allowed authentication methods include "password", "cert", and "ext-jwt"
      operationId: authenticate
      parameters:
      - in: query
        name: method
        required: true
        schema:
          enum:
          - password
          - cert
          - ext-jwt
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/authenticate"
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/currentApiSessionDetailEnvelope"
            default:
              example:
                data:
                  _links:
                    self:
                      href: ./current-api-session
                  configTypes: []
                  createdAt: 2020-03-09T19:03:49.1883693Z
                  expiresAt: 2020-03-09T19:34:21.5600897Z
                  id: 27343114-b44f-406e-9981-f3c4f2f28d54
                  identity:
                    _links:
                      self:
                        href: ./identities/66352d7b-a6b2-4ce9-85bb-9f18e318704d
                    id: 66352d7b-a6b2-4ce9-85bb-9f18e318704d
                    name: Default Admin
                    urlName: identities
                  tags:
                  - userField1: 123
                  - userField2: asdf
                  token: 28bb0ed2-0577-4632-ae70-d17106b92871
                  updatedAt: 2020-03-09T19:04:21.5600897Z
                meta: {}
          description: The API session associated with the session used to issue the
            request
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: INVALID_AUTH
                  message: The authentication request failed
                  requestId: 5952ed10-3091-474f-a691-47ebab6990dc
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The authentication request could not be processed as the credentials
            are invalid
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
      security: []
      summary: Authenticate via a method supplied via a query string parameter
      tags:
      - Authentication
      x-codegen-request-body-name: auth
      x-content-type: application/json
      x-accepts:
      - application/json
      - default
  /authenticate/mfa:
    post:
      description: Completes MFA authentication by submitting a MFA time based one
        time token or backup code.
      operationId: authenticateMfa
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/mfaCode"
        description: An MFA validation request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: Base empty response
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: Base empty response
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Complete MFA authentication
      tags:
      - Authentication
      - MFA
      x-codegen-request-body-name: mfaAuth
      x-content-type: application/json
      x-accepts:
      - application/json
  /authenticators:
    get:
      description: |
        Returns a list of authenticators associated to identities. The resources can be sorted, filtered, and paginated.
        This endpoint requires admin access.
      operationId: listAuthenticators
      parameters:
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: filter
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listAuthenticatorsEnvelope"
          description: A list of authenticators
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List authenticators
      tags:
      - Authenticator
      x-accepts:
      - application/json
    post:
      description: |
        Creates an authenticator for a specific identity. Requires admin access.
      operationId: createAuthenticator
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/authenticatorCreate"
        description: A Authenticator create object
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/createEnvelope"
          description: The create request was successful and the resource has been
            added at the following location
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Creates an authenticator
      tags:
      - Authenticator
      x-codegen-request-body-name: authenticator
      x-content-type: application/json
      x-accepts:
      - application/json
  /authenticators/{id}:
    delete:
      description: |
        Delete an authenticator by id. Deleting all authenticators for an identity will make it impossible to log in.
        Requires admin access.
      operationId: deleteAuthenticator
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The delete request was successful and the resource has been
            removed
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Delete an Authenticator
      tags:
      - Authenticator
      x-accepts:
      - application/json
    get:
      description: Retrieves a single authenticator by id. Requires admin access.
      operationId: detailAuthenticator
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/detailAuthenticatorEnvelope"
          description: A singular authenticator resource
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Retrieves a single authenticator
      tags:
      - Authenticator
      x-accepts:
      - application/json
    patch:
      description: Update the supplied fields on an authenticator by id. Requires
        admin access.
      operationId: patchAuthenticator
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/authenticatorPatch"
        description: An authenticator patch object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The patch request was successful and the resource has been
            altered
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Update the supplied fields on an authenticator
      tags:
      - Authenticator
      x-codegen-request-body-name: authenticator
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: Update all fields on an authenticator by id. Requires admin access.
      operationId: updateAuthenticator
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/authenticatorUpdate"
        description: An authenticator put object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The update request was successful and the resource has been
            altered
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Update all fields on an authenticator
      tags:
      - Authenticator
      x-codegen-request-body-name: authenticator
      x-content-type: application/json
      x-accepts:
      - application/json
  /authenticators/{id}/re-enroll:
    post:
      description: "Allows an authenticator to be reverted to an enrollment and allows\
        \ re-enrollment to occur. On success the \ncreated enrollment record response\
        \ is provided and the source authenticator record will be deleted. The \n\
        enrollment created depends on the authenticator. UPDB authenticators result\
        \ in UPDB enrollments, CERT\nauthenticators result in OTT enrollments, CERT\
        \ + CA authenticators result in OTTCA enrollments.\n"
      operationId: reEnrollAuthenticator
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/reEnroll"
        description: A reEnrollment request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/createEnvelope"
          description: The create request was successful and the resource has been
            added at the following location
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Reverts an authenticator to an enrollment
      tags:
      - Authenticator
      x-codegen-request-body-name: reEnroll
      x-content-type: application/json
      x-accepts:
      - application/json
  /cas:
    get:
      description: "Retrieves a list of CA resources; supports filtering, sorting,\
        \ and pagination. Requires admin access."
      operationId: listCas
      parameters:
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: filter
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listCasEnvelope"
          description: A list of Certificate Authorities (CAs)
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List CAs
      tags:
      - Certificate Authority
      x-accepts:
      - application/json
    post:
      description: Creates a CA in an unverified state. Requires admin access.
      operationId: createCa
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/caCreate"
        description: A CA to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/createEnvelope"
          description: The create request was successful and the resource has been
            added at the following location
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Creates a CA
      tags:
      - Certificate Authority
      x-codegen-request-body-name: ca
      x-content-type: application/json
      x-accepts:
      - application/json
  /cas/{id}:
    delete:
      description: |
        Delete a CA by id. Deleting a CA will delete its associated certificate authenticators. This can make it
        impossible for identities to authenticate if they no longer have any valid authenticators. Requires admin access.
      operationId: deleteCa
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The delete request was successful and the resource has been
            removed
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Delete a CA
      tags:
      - Certificate Authority
      x-accepts:
      - application/json
    get:
      description: Retrieves a single CA by id. Requires admin access.
      operationId: detailCa
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/detailCaEnvelope"
          description: A singular Certificate Authority (CA) resource
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Retrieves a single CA
      tags:
      - Certificate Authority
      x-accepts:
      - application/json
    patch:
      description: Update only the supplied fields on a CA by id. Requires admin access.
      operationId: patchCa
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/caPatch"
        description: A CA patch object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The patch request was successful and the resource has been
            altered
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Update the supplied fields on a CA
      tags:
      - Certificate Authority
      x-codegen-request-body-name: ca
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: Update all fields on a CA by id. Requires admin access.
      operationId: updateCa
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/caUpdate"
        description: A CA update object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The update request was successful and the resource has been
            altered
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Update all fields on a CA
      tags:
      - Certificate Authority
      x-codegen-request-body-name: ca
      x-content-type: application/json
      x-accepts:
      - application/json
  /cas/{id}/jwt:
    get:
      description: |
        For CA auto enrollment, the enrollment JWT is static and provided on each CA resource. This endpoint provides
        the jwt as a text response.
      operationId: getCaJwt
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/jwt:
              example: eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbSI6ImNhIiwiaXNzIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6MTI
                4MC8ifQ.Ot6lhNBSOw8ygHytdI5l7WDf9EWadOj44UPvJ0c-8mJ54fClWM3uMZrAHSSfV6KmOSZOeBBJe4VlNyoD-_MOECP0BzYSnSQP3E
                zJb0VlM-fFmGcKNGW157icyZNISfO43JL_Lw2QPBzTgikqSIj9eZnocC3BeAmZCHsVznnLfHWqDldcmuxnu-5MNOSrWV1x9iVcgLFlLHXK
                2PLA4qIiZmlQTrQjpHJmUaoJ07mnj8hMKzxB3wBG8kpazjEo7HDRCO06aBH4eqFgf_l0iT8Dzcb31jquWMGUoSXPhf4lVJh_FiNcR1wVx-
                UiHLbG5h23Aqf1UJF-F38rc1FElKz0Zg
              schema:
                type: string
          description: The result is the JWT text to validate the CA
        "401":
          content:
            application/jwt:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/jwt:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
          description: The requested resource does not exist
        "429":
          content:
            application/jwt:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/jwt:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Retrieve the enrollment JWT for a CA
      tags:
      - Certificate Authority
      x-accepts:
      - application/json
      - application/jwt
  /cas/{id}/verify:
    post:
      description: |
        Allows a CA to become verified by submitting a certificate in PEM format that has been signed by the target CA.
        The common name on the certificate must match the verificationToken property of the CA. Unverfieid CAs can not
        be used for enrollment/authentication. Requires admin access.
      operationId: verifyCa
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          text/plain:
            schema:
              type: string
        description: A PEM formatted certificate signed by the target CA with the
          common name matching the CA's validationToken
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: Base empty response
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Verify a CA
      tags:
      - Certificate Authority
      x-codegen-request-body-name: certificate
      x-content-type: text/plain
      x-accepts:
      - application/json
  /config-types:
    get:
      description: |
        Retrieves a list of config-type resources; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listConfigTypes
      parameters:
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: filter
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listConfigTypesEnvelope"
          description: A list of config-types
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List config-types
      tags:
      - Config
      x-accepts:
      - application/json
    post:
      operationId: createConfigType
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/configTypeCreate"
        description: A config-type to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/createEnvelope"
          description: The create request was successful and the resource has been
            added at the following location
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Create a config-type. Requires admin access.
      tags:
      - Config
      x-codegen-request-body-name: configType
      x-content-type: application/json
      x-accepts:
      - application/json
  /config-types/{id}:
    delete:
      description: Delete a config-type by id. Removing a configuration type that
        are in use will result in a 409 conflict HTTP status code and error. All configurations
        of a type must be removed first.
      operationId: deleteConfigType
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The delete request was successful and the resource has been
            removed
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "409":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42
                  code: CONFLICT_CANNOT_MODIFY_REFERENCED
                  message: The resource cannot be deleted/modified. Remove all referencing
                    resources first.
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested to be removed/altered cannot be as it
            is referenced by another object.
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Delete a config-type
      tags:
      - Config
      x-accepts:
      - application/json
    get:
      description: Retrieves a single config-type by id. Requires admin access.
      operationId: detailConfigType
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/detailConfigTypeEnvelope"
          description: A singular config-type resource
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Retrieves a single config-type
      tags:
      - Config
      x-accepts:
      - application/json
    patch:
      description: Update the supplied fields on a config-type. Requires admin access.
      operationId: patchConfigType
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/configTypePatch"
        description: A config-type patch object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The patch request was successful and the resource has been
            altered
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Update the supplied fields on a config-type
      tags:
      - Config
      x-codegen-request-body-name: configType
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: Update all fields on a config-type by id. Requires admin access.
      operationId: updateConfigType
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/configTypeUpdate"
        description: A config-type update object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The update request was successful and the resource has been
            altered
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Update all fields on a config-type
      tags:
      - Config
      x-codegen-request-body-name: configType
      x-content-type: application/json
      x-accepts:
      - application/json
  /config-types/{id}/configs:
    get:
      description: Lists the configs associated to a config-type. Requires admin access.
      operationId: listConfigsForConfigType
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listConfigsEnvelope"
          description: A list of configs
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Lists the configs of a specific config-type
      tags:
      - Config
      x-accepts:
      - application/json
  /configs:
    get:
      description: |
        Retrieves a list of config resources; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listConfigs
      parameters:
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: filter
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listConfigsEnvelope"
          description: A list of configs
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List configs
      tags:
      - Config
      x-accepts:
      - application/json
    post:
      description: Create a config resource. Requires admin access.
      operationId: createConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/configCreate"
        description: A config to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/createEnvelope"
          description: The create request was successful and the resource has been
            added at the following location
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Create a config resource
      tags:
      - Config
      x-codegen-request-body-name: config
      x-content-type: application/json
      x-accepts:
      - application/json
  /configs/{id}:
    delete:
      description: Delete a config by id. Requires admin access.
      operationId: deleteConfig
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The delete request was successful and the resource has been
            removed
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "409":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42
                  code: CONFLICT_CANNOT_MODIFY_REFERENCED
                  message: The resource cannot be deleted/modified. Remove all referencing
                    resources first.
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested to be removed/altered cannot be as it
            is referenced by another object.
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Delete a config
      tags:
      - Config
      x-accepts:
      - application/json
    get:
      description: Retrieves a single config by id. Requires admin access.
      operationId: detailConfig
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/detailConfigEnvelope"
          description: A singular config resource
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Retrieves a single config
      tags:
      - Config
      x-accepts:
      - application/json
    patch:
      description: Update the supplied fields on a config. Requires admin access.
      operationId: patchConfig
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/configPatch"
        description: A config patch object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The patch request was successful and the resource has been
            altered
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Update the supplied fields on a config
      tags:
      - Config
      x-codegen-request-body-name: config
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: Update all fields on a config by id. Requires admin access.
      operationId: updateConfig
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/configUpdate"
        description: A config update object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The update request was successful and the resource has been
            altered
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Update all fields on a config
      tags:
      - Config
      x-codegen-request-body-name: config
      x-content-type: application/json
      x-accepts:
      - application/json
  /configs/{id}/services:
    get:
      description: |
        Retrieves a list of service resources that reference a given config; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listConfigServices
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: filter
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listServicesEnvelope"
          description: A list of services
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List services referenced by a config
      tags:
      - Config
      x-accepts:
      - application/json
  /controller-settings:
    get:
      description: |
        Retrieves a list controller settings including the base `global` settings object and any overriding controller specific settings.
      operationId: listControllerSettings
      parameters:
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: filter
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listControllerSettingEnvelope"
          description: A list of controller setting objects
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List controller settings
      tags:
      - Settings
      x-accepts:
      - application/json
    post:
      description: Create a new controller specific settings object. Requires admin
        access.
      operationId: createControllerSetting
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/controllerSettingCreate"
        description: A controller settings object to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/createEnvelope"
          description: The create request was successful and the resource has been
            added at the following location
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Create a controller specific setting
      tags:
      - Settings
      x-codegen-request-body-name: controllerSetting
      x-content-type: application/json
      x-accepts:
      - application/json
  /controller-settings/{id}:
    get:
      description: Retrieves a single controller setting object by id. Requires admin
        access.
      operationId: detailControllerSetting
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/detailControllerSettingEnvelope"
          description: A singular controller setting object
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Retrieves a single controller setting object.
      tags:
      - Settings
      x-accepts:
      - application/json
  /controller-settings/{id}/effective:
    delete:
      description: Delete a controller setting object by id. Requires admin access.
      operationId: deleteControllerSetting
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The delete request was successful and the resource has been
            removed
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "409":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42
                  code: CONFLICT_CANNOT_MODIFY_REFERENCED
                  message: The resource cannot be deleted/modified. Remove all referencing
                    resources first.
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested to be removed/altered cannot be as it
            is referenced by another object.
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Delete a controller setting object
      tags:
      - Settings
      x-accepts:
      - application/json
    get:
      description: Retrieves a single controller's effective setting object by id.
        Requires admin access.
      operationId: detailControllerSettingEffective
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/detailControllerSettingEffectiveEnvelope"
          description: A singular controller's effective setting object
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Retrieves a single controller's effective calculated settings from
        the instance and global configuration.
      tags:
      - Settings
      x-accepts:
      - application/json
    patch:
      description: Update the supplied fields on a controller setting object. Requires
        admin access.
      operationId: patchControllerSetting
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/controllerSettingPatch"
        description: A controller setting object patch object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The patch request was successful and the resource has been
            altered
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Update the supplied fields on a controller setting object
      tags:
      - Settings
      x-codegen-request-body-name: controllerSetting
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: Update all fields on a controller setting object by id. Requires
        admin access.
      operationId: updateControllerSetting
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/controllerSettingUpdate"
        description: A controller setting update object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The update request was successful and the resource has been
            altered
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Update all fields on a controller setting object
      tags:
      - Settings
      x-codegen-request-body-name: controllerSetting
      x-content-type: application/json
      x-accepts:
      - application/json
  /controllers:
    get:
      description: Retrieves a list of controllers
      operationId: listControllers
      parameters:
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: filter
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listControllersEnvelope"
          description: A list of controllers
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List controllers
      tags:
      - Controllers
      x-accepts:
      - application/json
  /current-api-session:
    delete:
      description: Terminates the current API session
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: Base empty response
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Logout
      tags:
      - Current API Session
      x-accepts:
      - application/json
    get:
      description: Retrieves the API session that was used to issue the current request
      operationId: getCurrentAPISession
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/currentApiSessionDetailEnvelope"
            default:
              example:
                data:
                  _links:
                    self:
                      href: ./current-api-session
                  configTypes: []
                  createdAt: 2020-03-09T19:03:49.1883693Z
                  expiresAt: 2020-03-09T19:34:21.5600897Z
                  id: 27343114-b44f-406e-9981-f3c4f2f28d54
                  identity:
                    _links:
                      self:
                        href: ./identities/66352d7b-a6b2-4ce9-85bb-9f18e318704d
                    id: 66352d7b-a6b2-4ce9-85bb-9f18e318704d
                    name: Default Admin
                    urlName: identities
                  tags:
                  - userField1: 123
                  - userField2: asdf
                  token: 28bb0ed2-0577-4632-ae70-d17106b92871
                  updatedAt: 2020-03-09T19:04:21.5600897Z
                meta: {}
          description: The API session associated with the session used to issue the
            request
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Return the current API session
      tags:
      - Current API Session
      x-accepts:
      - application/json
      - default
  /current-identity:
    get:
      description: Returns the identity associated with the API sessions used to issue
        the current request
      operationId: getCurrentIdentity
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/currentIdentityDetailEnvelope"
            default:
              example:
                data:
                  _links:
                    edge-router-policies:
                      href: ./identities/66352d7b-a6b2-4ce9-85bb-9f18e318704d/edge-routers
                    self:
                      href: ./identities/66352d7b-a6b2-4ce9-85bb-9f18e318704d
                    service-policies:
                      href: ./identities/66352d7b-a6b2-4ce9-85bb-9f18e318704d/identities
                  authenticators:
                    updb:
                      username: admin
                  createdAt: 2020-01-13T16:38:13.6854788Z
                  enrollment: {}
                  id: 66352d7b-a6b2-4ce9-85bb-9f18e318704d
                  isAdmin: true
                  isDefaultAdmin: true
                  name: Default Admin
                  roleAttributes: []
                  tags: {}
                  type:
                    _links:
                      self:
                        href: ./identity-types/User
                    id: User
                    name: User
                    urlName: identity-types
                  updatedAt: 2020-01-13T16:38:13.6854788Z
                meta: {}
          description: The identity associated with the API Session used to issue
            the request
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Return the current identity
      tags:
      - Current Identity
      x-accepts:
      - application/json
      - default
  /current-identity/authenticators:
    get:
      description: "Retrieves a list of authenticators assigned to the current API\
        \ session's identity; supports filtering, sorting, and pagination."
      operationId: listCurrentIdentityAuthenticators
      parameters:
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: filter
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listAuthenticatorsEnvelope"
          description: A list of authenticators
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List authenticators for the current identity
      tags:
      - Current API Session
      x-accepts:
      - application/json
  /current-identity/authenticators/{id}:
    get:
      description: Retrieves a single authenticator by id. Will only show authenticators
        assigned to the API session's identity.
      operationId: detailCurrentIdentityAuthenticator
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/detailAuthenticatorEnvelope"
          description: A singular authenticator resource
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Retrieve an authenticator for the current identity
      tags:
      - Current API Session
      x-accepts:
      - application/json
    patch:
      description: |
        Update the supplied fields on an authenticator by id. Will only update authenticators assigned to the API
        session's identity.
      operationId: patchCurrentIdentityAuthenticator
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/authenticatorPatchWithCurrent"
        description: An authenticator patch object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The patch request was successful and the resource has been
            altered
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Update the supplied fields on an authenticator of this identity
      tags:
      - Current API Session
      x-codegen-request-body-name: authenticator
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: |
        Update all fields on an authenticator by id.  Will only update authenticators assigned to the API session's
        identity.
      operationId: updateCurrentIdentityAuthenticator
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/authenticatorUpdateWithCurrent"
        description: An authenticator put object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The update request was successful and the resource has been
            altered
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Update all fields on an authenticator of this identity
      tags:
      - Current API Session
      x-codegen-request-body-name: authenticator
      x-content-type: application/json
      x-accepts:
      - application/json
  /current-identity/authenticators/{id}/extend:
    post:
      description: |-
        This endpoint only functions for certificates issued by the controller. 3rd party certificates are not handled.
        Allows an identity to extend its certificate's expiration date by using its current and valid client certificate to submit a CSR. This CSR may be passed in using a new private key, thus allowing private key rotation.
        The response from this endpoint is a new client certificate which the client must  be verified via the /authenticators/{id}/extend-verify endpoint.
        After verification is completion any new connections must be made with new certificate. Prior to verification the old client certificate remains active.
      operationId: extendCurrentIdentityAuthenticator
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/identityExtendEnrollmentRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/identityExtendEnrollmentEnvelope"
          description: A response containg the identity's new certificate
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Allows the current identity to recieve a new certificate associated
        with a certificate based authenticator
      tags:
      - Current API Session
      - Enroll
      - Extend Enrollment
      x-codegen-request-body-name: extend
      x-content-type: application/json
      x-accepts:
      - application/json
  /current-identity/authenticators/{id}/extend-verify:
    post:
      description: |-
        After submitting a CSR for a new client certificate the resulting public certificate must be re-submitted to this endpoint to verify receipt.
        After receipt, the new client certificate must be used for new authentication requests.
      operationId: extendVerifyCurrentIdentityAuthenticator
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/identityExtendValidateEnrollmentRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: Base empty response
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Allows the current identity to validate reciept of a new client certificate
      tags:
      - Current API Session
      - Enroll
      - Extend Enrollment
      x-codegen-request-body-name: extend
      x-content-type: application/json
      x-accepts:
      - application/json
  /current-identity/mfa:
    delete:
      description: |
        Disable MFA for the current identity. Requires a current valid time based one time password if MFA enrollment has been completed. If not, code should be an empty string. If one time passwords are not available and admin account can be used to remove MFA from the identity via `DELETE /identities/<id>/mfa`.
      operationId: deleteMfa
      parameters:
      - in: header
        name: mfa-validation-code
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: Base empty response
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Disable MFA for the current identity
      tags:
      - Current Identity
      - MFA
      x-accepts:
      - application/json
    get:
      description: |
        Returns details about the current MFA enrollment. If enrollment has not been completed it will return the current MFA configuration details necessary to complete a `POST /current-identity/mfa/verify`.
      operationId: detailMfa
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/detailMfaEnvelope"
          description: The details of an MFA enrollment
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Returns the current status of MFA enrollment
      tags:
      - Current Identity
      - MFA
      x-accepts:
      - application/json
    post:
      description: |
        Allows authenticator based MFA enrollment. If enrollment has already been completed, it must be disabled before attempting to re-enroll. Subsequent enrollment request is completed via `POST /current-identity/mfa/verify`
      operationId: enrollMfa
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/createEnvelope"
          description: The create request was successful and the resource has been
            added at the following location
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "409":
          content:
            application/json:
              example:
                error:
                  causeMessage: ""
                  code: ALREADY_MFA_ENROLLED
                  message: The identity is already enrolled in MFA
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The identity is already enrolled in MFA
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Initiate MFA enrollment
      tags:
      - Current Identity
      - MFA
      x-accepts:
      - application/json
  /current-identity/mfa/qr-code:
    get:
      description: |
        Shows an QR code image for unverified MFA enrollments. 404s if the MFA enrollment has been completed or not started.
      operationId: detailMfaQrCode
      responses:
        "200":
          content: {}
          description: OK
        "404":
          content: {}
          description: No MFA enrollment or MFA enrollment is completed
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Show a QR code for unverified MFA enrollments
      tags:
      - Current Identity
      - MFA
      x-accepts:
      - application/json
  /current-identity/mfa/recovery-codes:
    get:
      description: |
        Allows the viewing of recovery codes of an MFA enrollment. Requires a current valid time based one time password to interact with. Available after a completed MFA enrollment.
      operationId: detailMfaRecoveryCodes
      parameters:
      - in: header
        name: mfa-validation-code
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/mfaCode"
        description: An MFA validation request
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/detailMfaRecoveryCodesEnvelope"
          description: The recovery codes of an MFA enrollment
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: For a completed MFA enrollment view the current recovery codes
      tags:
      - Current Identity
      - MFA
      x-codegen-request-body-name: mfaValidation
      x-content-type: application/json
      x-accepts:
      - application/json
    post:
      description: |
        Allows regeneration of recovery codes of an MFA enrollment. Requires a current valid time based one time password to interact with. Available after a completed MFA enrollment. This replaces all existing recovery codes.
      operationId: createMfaRecoveryCodes
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/mfaCode"
        description: An MFA validation request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: Base empty response
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: For a completed MFA enrollment regenerate the recovery codes
      tags:
      - Current Identity
      - MFA
      x-codegen-request-body-name: mfaValidation
      x-content-type: application/json
      x-accepts:
      - application/json
  /current-identity/mfa/verify:
    post:
      description: |
        Completes MFA enrollment by accepting a time based one time password as verification. Called after MFA enrollment has been initiated via `POST /current-identity/mfa`.
      operationId: verifyMfa
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/mfaCode"
        description: An MFA validation request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: Base empty response
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Complete MFA enrollment by verifying a time based one time token
      tags:
      - Current Identity
      - MFA
      x-codegen-request-body-name: mfaValidation
      x-content-type: application/json
      x-accepts:
      - application/json
  /database/check-data-integrity:
    post:
      description: "Starts a data integrity scan on the datastore. Requires admin\
        \ access. Only once instance may run at a time, including runs of fixDataIntegrity."
      operationId: checkDataIntegrity
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: Base empty response
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Starts a data integrity scan on the datastore
      tags:
      - Database
      x-accepts:
      - application/json
  /database/data-integrity-results:
    get:
      description: Returns any results found from in-progress integrity checks. Requires
        admin access.
      operationId: dataIntegrityResults
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/dataIntegrityCheckResultEnvelope"
          description: A list of data integrity issues found
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Returns any results found from in-progress integrity checks
      tags:
      - Database
      x-accepts:
      - application/json
  /database/fix-data-integrity:
    post:
      description: "Runs a data integrity scan on the datastore, attempts to fix any\
        \ issues it can, and returns any found issues. Requires admin access. Only\
        \ once instance may run at a time, including runs of checkDataIntegrity."
      operationId: fixDataIntegrity
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: Base empty response
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: "Runs a data integrity scan on the datastore, attempts to fix any issues\
        \ it can and returns any found issues"
      tags:
      - Database
      x-accepts:
      - application/json
  /database/snapshot:
    post:
      description: Create a new database snapshot. Requires admin access.
      operationId: createDatabaseSnapshot
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: Base empty response
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Create a new database snapshot
      tags:
      - Database
      x-accepts:
      - application/json
  /edge-router-policies:
    get:
      description: |
        Retrieves a list of edge router policy resources; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listEdgeRouterPolicies
      parameters:
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: filter
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listEdgeRouterPoliciesEnvelope"
          description: A list of edge router policies
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List edge router policies
      tags:
      - Edge Router Policy
      x-accepts:
      - application/json
    post:
      description: Create an edge router policy resource. Requires admin access.
      operationId: createEdgeRouterPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edgeRouterPolicyCreate"
        description: An edge router policy to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/createEnvelope"
          description: The create request was successful and the resource has been
            added at the following location
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Create an edge router policy resource
      tags:
      - Edge Router Policy
      x-codegen-request-body-name: policy
      x-content-type: application/json
      x-accepts:
      - application/json
  /edge-router-policies/{id}:
    delete:
      description: Delete an edge router policy by id. Requires admin access.
      operationId: deleteEdgeRouterPolicy
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The delete request was successful and the resource has been
            removed
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "409":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42
                  code: CONFLICT_CANNOT_MODIFY_REFERENCED
                  message: The resource cannot be deleted/modified. Remove all referencing
                    resources first.
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested to be removed/altered cannot be as it
            is referenced by another object.
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Delete an edge router policy
      tags:
      - Edge Router Policy
      x-accepts:
      - application/json
    get:
      description: Retrieves a single edge router policy by id. Requires admin access.
      operationId: detailEdgeRouterPolicy
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/detailEdgeRouterPolicyEnvelope"
          description: A single edge router policy
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Retrieves a single edge router policy
      tags:
      - Edge Router Policy
      x-accepts:
      - application/json
    patch:
      description: Update the supplied fields on an edge router policy. Requires admin
        access.
      operationId: patchEdgeRouterPolicy
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edgeRouterPolicyPatch"
        description: An edge router policy patch object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The patch request was successful and the resource has been
            altered
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Update the supplied fields on an edge router policy
      tags:
      - Edge Router Policy
      x-codegen-request-body-name: policy
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: Update all fields on an edge router policy by id. Requires admin
        access.
      operationId: updateEdgeRouterPolicy
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edgeRouterPolicyUpdate"
        description: An edge router policy update object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The update request was successful and the resource has been
            altered
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Update all fields on an edge router policy
      tags:
      - Edge Router Policy
      x-codegen-request-body-name: policy
      x-content-type: application/json
      x-accepts:
      - application/json
  /edge-router-policies/{id}/edge-routers:
    get:
      description: |
        Retrieves a list of edge routers an edge router policy resources affects; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listEdgeRouterPolicyEdgeRouters
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listEdgeRoutersEnvelope"
          description: A list of edge routers
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List edge routers a policy affects
      tags:
      - Edge Router Policy
      x-accepts:
      - application/json
  /edge-router-policies/{id}/identities:
    get:
      description: |
        Retrieves a list of identities an edge router policy resources affects; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listEdgeRouterPolicyIdentities
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listIdentitiesEnvelope"
          description: A list of identities
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List identities an edge router policy affects
      tags:
      - Edge Router Policy
      x-accepts:
      - application/json
  /edge-router-role-attributes:
    get:
      description: |
        Retrieves a list of role attributes in use by edge routers; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listEdgeRouterRoleAttributes
      parameters:
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: filter
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listRoleAttributesEnvelope"
          description: A list of role attributes
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List role attributes in use by edge routers
      tags:
      - Role Attributes
      x-accepts:
      - application/json
  /edge-routers:
    get:
      description: |
        Retrieves a list of edge router resources; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listEdgeRouters
      parameters:
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: filter
        schema:
          type: string
      - explode: true
        in: query
        name: roleFilter
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: roleSemantic
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listEdgeRoutersEnvelope"
          description: A list of edge routers
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List edge routers
      tags:
      - Edge Router
      x-accepts:
      - application/json
    post:
      description: Create a edge router resource. Requires admin access.
      operationId: createEdgeRouter
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edgeRouterCreate"
        description: A edge router to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/createEnvelope"
          description: The create request was successful and the resource has been
            added at the following location
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Create an edge router
      tags:
      - Edge Router
      x-codegen-request-body-name: edgeRouter
      x-content-type: application/json
      x-accepts:
      - application/json
  /edge-routers/{id}:
    delete:
      description: Delete an edge router by id. Requires admin access.
      operationId: deleteEdgeRouter
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The delete request was successful and the resource has been
            removed
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "409":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42
                  code: CONFLICT_CANNOT_MODIFY_REFERENCED
                  message: The resource cannot be deleted/modified. Remove all referencing
                    resources first.
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested to be removed/altered cannot be as it
            is referenced by another object.
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Delete an edge router
      tags:
      - Edge Router
      x-accepts:
      - application/json
    get:
      description: Retrieves a single edge router by id. Requires admin access.
      operationId: detailEdgeRouter
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/detailedEdgeRouterEnvelope"
          description: A singular edge router resource
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Retrieves a single edge router
      tags:
      - Edge Router
      x-accepts:
      - application/json
    patch:
      description: Update the supplied fields on an edge router. Requires admin access.
      operationId: patchEdgeRouter
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edgeRouterPatch"
        description: An edge router patch object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The patch request was successful and the resource has been
            altered
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Update the supplied fields on an edge router
      tags:
      - Edge Router
      x-codegen-request-body-name: edgeRouter
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: Update all fields on an edge router by id. Requires admin access.
      operationId: updateEdgeRouter
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/edgeRouterUpdate"
        description: An edge router update object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The update request was successful and the resource has been
            altered
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Update all fields on an edge router
      tags:
      - Edge Router
      x-codegen-request-body-name: edgeRouter
      x-content-type: application/json
      x-accepts:
      - application/json
  /edge-routers/{id}/edge-router-policies:
    get:
      description: Retrieves a list of edge router policies that apply to the specified
        edge router.
      operationId: listEdgeRouterEdgeRouterPolicies
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listEdgeRouterPoliciesEnvelope"
          description: A list of edge router policies
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List the edge router policies that affect an edge router
      tags:
      - Edge Router
      x-accepts:
      - application/json
  /edge-routers/{id}/identities:
    get:
      description: |
        Retrieves a list of identities that may access services via the given edge router. Supports filtering, sorting, and pagination. Requires admin access.
      operationId: listEdgeRouterIdentities
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listIdentitiesEnvelope"
          description: A list of identities
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List associated identities
      tags:
      - Edge Router
      x-accepts:
      - application/json
  /edge-routers/{id}/re-enroll:
    post:
      description: |
        Removes current certificate based authentication mechanisms and reverts the edge router into a state where enrollment must be performed.
        The router retains all other properties and associations. If the router is currently connected, it will be disconnected and any
        attemps to reconnect will fail until the enrollment process is completed with the newly generated JWT.

        If the edge router has an existing outstanding enrollment JWT it will be replaced. The previous JWT will no longer be usable to
        complete the enrollment process.
      operationId: reEnrollEdgeRouter
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: Base empty response
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Re-enroll an edge router
      tags:
      - Edge Router
      x-accepts:
      - application/json
  /edge-routers/{id}/service-edge-router-policies:
    get:
      description: Retrieves a list of service policies policies that apply to the
        specified edge router.
      operationId: listEdgeRouterServiceEdgeRouterPolicies
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listServicePoliciesEnvelope"
          description: A list of service policies
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List the service policies that affect an edge router
      tags:
      - Edge Router
      x-accepts:
      - application/json
  /edge-routers/{id}/services:
    get:
      description: |
        Retrieves a list of services that may be accessed via the given edge router. Supports filtering, sorting, and pagination. Requires admin access.
      operationId: listEdgeRouterServices
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listServicesEnvelope"
          description: A list of services
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List associated services
      tags:
      - Edge Router
      x-accepts:
      - application/json
  /enrollments:
    get:
      description: |
        Retrieves a list of outstanding enrollments; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listEnrollments
      parameters:
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: filter
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listEnrollmentsEnvelope"
          description: A list of enrollments
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List outstanding enrollments
      tags:
      - Enrollment
      x-accepts:
      - application/json
    post:
      description: "Creates a new OTT, OTTCA, or UPDB enrollment for a specific identity.\
        \ If an enrollment of the same type is already outstanding the request will\
        \ fail with a 409 conflict. If desired, an existing enrollment can be refreshed\
        \ by `enrollments/:id/refresh` or deleted."
      operationId: createEnrollment
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/enrollmentCreate"
        description: An enrollment to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/createEnvelope"
          description: The create request was successful and the resource has been
            added at the following location
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "409":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to a conflict of configuration
            or state
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Create an outstanding enrollment for an identity
      tags:
      - Enrollment
      x-codegen-request-body-name: enrollment
      x-content-type: application/json
      x-accepts:
      - application/json
  /enrollments/{id}:
    delete:
      description: Delete an outstanding enrollment by id. Requires admin access.
      operationId: deleteEnrollment
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The delete request was successful and the resource has been
            removed
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Delete an outstanding enrollment
      tags:
      - Enrollment
      x-accepts:
      - application/json
    get:
      description: Retrieves a single outstanding enrollment by id. Requires admin
        access.
      operationId: detailEnrollment
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/detailEnrollmentEnvelope"
          description: A singular enrollment resource
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Retrieves an outstanding enrollment
      tags:
      - Enrollment
      x-accepts:
      - application/json
  /enrollments/{id}/refresh:
    post:
      description: "For expired or unexpired enrollments, reset the expiration window.\
        \ A new JWT will be generated and must be used for the enrollment."
      operationId: refreshEnrollment
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/enrollmentRefresh"
        description: An enrollment refresh request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/createEnvelope"
          description: The create request was successful and the resource has been
            added at the following location
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Refreshes an enrollment record's expiration window
      tags:
      - Enrollment
      x-codegen-request-body-name: refresh
      x-content-type: application/json
      x-accepts:
      - application/json
  /enumerated-capabilities:
    get:
      operationId: listEnumeratedCapabilities
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listEnumeratedCapabilitiesEnvelope"
          description: A typed and enumerated list of capabilities
      security: []
      summary: "Returns all capabilities this version of the controller is aware of,\
        \ enabled or not."
      tags:
      - Informational
      x-accepts:
      - application/json
  /external-jwt-signers:
    get:
      description: Retrieves a list of external JWT signers for authentication
      operationId: listExternalJwtSigners
      parameters:
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: filter
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listExternalJwtSignersEnvelope"
          description: A list of External JWT Signers
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List External JWT Signers
      tags:
      - External JWT Signer
      x-accepts:
      - application/json
    post:
      description: Creates an External JWT Signer. Requires admin access.
      operationId: createExternalJwtSigner
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/externalJwtSignerCreate"
        description: An External JWT Signer to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/createEnvelope"
          description: The create request was successful and the resource has been
            added at the following location
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Creates an External JWT Signer
      tags:
      - External JWT Signer
      x-codegen-request-body-name: externalJwtSigner
      x-content-type: application/json
      x-accepts:
      - application/json
  /external-jwt-signers/{id}:
    delete:
      description: |
        Delete an External JWT Signer by id. Requires admin access.
      operationId: deleteExternalJwtSigner
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The delete request was successful and the resource has been
            removed
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Delete an External JWT Signer
      tags:
      - External JWT Signer
      x-accepts:
      - application/json
    get:
      description: Retrieves a single External JWT Signer by id. Requires admin access.
      operationId: detailExternalJwtSigner
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/detailExternalJwtSignerEnvelope"
          description: A singular External JWT Signer resource
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Retrieves a single External JWT Signer
      tags:
      - External JWT Signer
      x-accepts:
      - application/json
    patch:
      description: Update only the supplied fields on an External JWT Signer by id.
        Requires admin access.
      operationId: patchExternalJwtSigner
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/externalJwtSignerPatch"
        description: An External JWT Signer patch object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The patch request was successful and the resource has been
            altered
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Update the supplied fields on an External JWT Signer
      tags:
      - External JWT Signer
      x-codegen-request-body-name: externalJwtSigner
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: Update all fields on an External JWT Signer by id. Requires admin
        access.
      operationId: updateExternalJwtSigner
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/externalJwtSignerUpdate"
        description: An External JWT Signer update object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The update request was successful and the resource has been
            altered
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Update all fields on an External JWT Signer
      tags:
      - External JWT Signer
      x-codegen-request-body-name: externalJwtSigner
      x-content-type: application/json
      x-accepts:
      - application/json
  /identities:
    get:
      description: |
        Retrieves a list of identity resources; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listIdentities
      parameters:
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: filter
        schema:
          type: string
      - explode: true
        in: query
        name: roleFilter
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: roleSemantic
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listIdentitiesEnvelope"
          description: A list of identities
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List identities
      tags:
      - Identity
      x-accepts:
      - application/json
    post:
      description: Create an identity resource. Requires admin access.
      operationId: createIdentity
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/identityCreate"
        description: An identity to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/createEnvelope"
          description: The create request was successful and the resource has been
            added at the following location
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Create an identity resource
      tags:
      - Identity
      x-codegen-request-body-name: identity
      x-content-type: application/json
      x-accepts:
      - application/json
  /identities/{id}:
    delete:
      description: Delete an identity by id. Requires admin access.
      operationId: deleteIdentity
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The delete request was successful and the resource has been
            removed
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "409":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42
                  code: CONFLICT_CANNOT_MODIFY_REFERENCED
                  message: The resource cannot be deleted/modified. Remove all referencing
                    resources first.
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested to be removed/altered cannot be as it
            is referenced by another object.
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Delete an identity
      tags:
      - Identity
      x-accepts:
      - application/json
    get:
      description: Retrieves a single identity by id. Requires admin access.
      operationId: detailIdentity
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/detailIdentityEnvelope"
          description: A single identity
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Retrieves a single identity
      tags:
      - Identity
      x-accepts:
      - application/json
    patch:
      description: Update the supplied fields on an identity. Requires admin access.
      operationId: patchIdentity
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/identityPatch"
        description: An identity patch object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The patch request was successful and the resource has been
            altered
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Update the supplied fields on an identity
      tags:
      - Identity
      x-codegen-request-body-name: identity
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: Update all fields on an identity by id. Requires admin access.
      operationId: updateIdentity
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/identityUpdate"
        description: An identity update object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The update request was successful and the resource has been
            altered
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Update all fields on an identity
      tags:
      - Identity
      x-codegen-request-body-name: identity
      x-content-type: application/json
      x-accepts:
      - application/json
  /identities/{id}/authenticators:
    get:
      description: |
        Returns a list of authenticators associated to the identity specified
      operationId: getIdentityAuthenticators
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listAuthenticatorsEnvelope"
          description: A list of authenticators
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Retrieve the current authenticators of a specific identity
      tags:
      - Identity
      x-accepts:
      - application/json
  /identities/{id}/disable:
    post:
      description: |
        Reject an identity's API session requests for N minutes or indefinitely if 0.
      operationId: disableIdentity
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/disableParams"
        description: Disable parameters
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: Base empty response
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Set an identity as disabled
      tags:
      - Identity
      x-codegen-request-body-name: disable
      x-content-type: application/json
      x-accepts:
      - application/json
  /identities/{id}/edge-router-policies:
    get:
      description: Retrieves a list of edge router policies that apply to the specified
        identity.
      operationId: listIdentitysEdgeRouterPolicies
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listEdgeRouterPoliciesEnvelope"
          description: A list of edge router policies
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List the edge router policies that affect an identity
      tags:
      - Identity
      x-accepts:
      - application/json
  /identities/{id}/edge-routers:
    get:
      description: |
        Retrieves a list of edge-routers that the given identity may use to access services. Supports filtering, sorting, and pagination. Requires admin access.
      operationId: listIdentityEdgeRouters
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listEdgeRoutersEnvelope"
          description: A list of edge routers
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List accessible edge-routers
      tags:
      - Identity
      x-accepts:
      - application/json
  /identities/{id}/enable:
    post:
      description: |
        Allows an admin to remove disabled statuses from an identity.
      operationId: enableIdentity
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: Base empty response
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Clears all disabled state from an identity
      tags:
      - Identity
      x-accepts:
      - application/json
  /identities/{id}/enrollments:
    get:
      description: |
        Returns a list of enrollments associated to the identity specified
      operationId: getIdentityEnrollments
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listEnrollmentsEnvelope"
          description: A list of enrollments
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Retrieve the current enrollments of a specific identity
      tags:
      - Identity
      x-accepts:
      - application/json
  /identities/{id}/failed-service-requests:
    get:
      description: |
        Returns a list of service session requests that failed due to posture checks. The entries will contain
        every policy that was verified against and every failed check in each policy. Each check will include
        the historical posture data and posture check configuration.
      operationId: getIdentityFailedServiceRequests
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/failedServiceRequestEnvelope"
          description: Returns a list of service request failures
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Retrieve a list of the most recent service failure requests due to
        posture checks
      tags:
      - Identity
      x-accepts:
      - application/json
  /identities/{id}/mfa:
    delete:
      description: |
        Allows an admin to remove MFA enrollment from a specific identity. Requires admin.
      operationId: removeIdentityMfa
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: Base empty response
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Remove MFA from an identitity
      tags:
      - Identity
      - MFA
      x-accepts:
      - application/json
  /identities/{id}/policy-advice/{serviceId}:
    get:
      description: |
        Analyzes policies to see if the given identity should be able to dial or bind the given service. |
        Will check services policies to see if the identity can access the service. Will check edge router policies |
        to check if the identity and service have access to common edge routers so that a connnection can be made. |
        Will also check if at least one edge router is on-line. Requires admin access.
      operationId: getIdentityPolicyAdvice
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The id of a service
        in: path
        name: serviceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/getIdentityPolicyAdviceEnvelope"
          description: Returns the document that represents the policy advice
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Analyze policies relating the given identity and service
      tags:
      - Identity
      x-accepts:
      - application/json
  /identities/{id}/posture-data:
    get:
      description: |
        Returns a nested map data represeting the posture data of the identity.
        This data should be considered volatile.
      operationId: getIdentityPostureData
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/postureDataEnvelope"
          description: Returns the document that represents posture data
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Retrieve the curent posture data for a specific identity.
      tags:
      - Identity
      x-accepts:
      - application/json
  /identities/{id}/service-configs:
    delete:
      description: Remove service configs from a specific identity
      operationId: disassociateIdentitysServiceConfigs
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/serviceConfigsAssignList"
        description: An array of service and config id pairs to remove
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: Base empty response
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Remove associated service configs from a specific identity
      tags:
      - Identity
      x-codegen-request-body-name: serviceConfigIdPairs
      x-content-type: application/json
      x-accepts:
      - application/json
    get:
      description: Retrieves a list of service configs associated to a specific identity
      operationId: listIdentitysServiceConfigs
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listServiceConfigsEnvelope"
          description: A list of service configs
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List the service configs associated a specific identity
      tags:
      - Identity
      x-accepts:
      - application/json
    post:
      description: Associate service configs to a specific identity
      operationId: associateIdentitysServiceConfigs
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/serviceConfigsAssignList"
        description: A service config patch object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: Base empty response
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Associate service configs for a specific identity
      tags:
      - Identity
      x-codegen-request-body-name: serviceConfigs
      x-content-type: application/json
      x-accepts:
      - application/json
  /identities/{id}/service-policies:
    get:
      description: Retrieves a list of service policies that apply to the specified
        identity.
      operationId: listIdentityServicePolicies
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listServicePoliciesEnvelope"
          description: A list of service policies
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List the service policies that affect an identity
      tags:
      - Identity
      x-accepts:
      - application/json
  /identities/{id}/services:
    get:
      description: |
        Retrieves a list of services that the given identity has access to. Supports filtering, sorting, and pagination. Requires admin access.
      operationId: listIdentityServices
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - in: query
        name: filter
        schema:
          type: string
      - in: query
        name: policyType
        schema:
          enum:
          - dial
          - bind
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listServicesEnvelope"
          description: A list of services
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List accessible services
      tags:
      - Identity
      x-accepts:
      - application/json
  /identities/{id}/trace:
    put:
      description: |
        Allows an admin to enable/disable data flow tracing for an identity
      operationId: updateIdentityTracing
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/traceSpec"
        description: A traceSpec object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/traceDetailEnvelope"
          description: Returns the document that represents the trace state
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Enable/disable data flow tracing for an identity
      tags:
      - Identity
      - Tracing
      x-codegen-request-body-name: traceSpec
      x-content-type: application/json
      x-accepts:
      - application/json
  /identity-role-attributes:
    get:
      description: |
        Retrieves a list of role attributes in use by identities; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listIdentityRoleAttributes
      parameters:
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: filter
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listRoleAttributesEnvelope"
          description: A list of role attributes
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List role attributes in use by identities
      tags:
      - Role Attributes
      x-accepts:
      - application/json
  /identity-types:
    get:
      description: |
        Retrieves a list of identity types; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listIdentityTypes
      parameters:
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: filter
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listIdentityTypesEnvelope"
          description: A list of identity types
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List available identity types
      tags:
      - Identity
      x-accepts:
      - application/json
  /identity-types/{id}:
    get:
      description: Retrieves a single identity type by id. Requires admin access.
      operationId: detailIdentityType
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/detailIdentityTypeEnvelope"
          description: A single identity type
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Retrieves a identity type
      tags:
      - Identity
      x-accepts:
      - application/json
  /network-jwts:
    get:
      description: Returns a list of JWTs for trusting a network
      operationId: listNetworkJWTs
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listNetworkJWTsEnvelope"
          description: A list of network JWTs
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
      summary: Returns a list of JWTs suitable for bootstrapping network trust.
      tags:
      - Enrollment
      x-accepts:
      - application/json
  /posture-check-role-attributes:
    get:
      description: |
        Retrieves a list of role attributes in use by posture checks; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listPostureCheckRoleAttributes
      parameters:
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: filter
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listRoleAttributesEnvelope"
          description: A list of role attributes
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List role attributes in use by posture checks
      tags:
      - Role Attributes
      x-accepts:
      - application/json
  /posture-check-types:
    get:
      description: |
        Retrieves a list of posture check types
      operationId: listPostureCheckTypes
      parameters:
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: filter
        schema:
          type: string
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/listPostureCheckTypesEnvelope"
          description: A list of posture check types
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List a subset of posture check types
      tags:
      - Posture Checks
      x-accepts:
      - application/json
      - application/json; charset=utf-8
  /posture-check-types/{id}:
    get:
      description: Retrieves a single posture check type by id
      operationId: detailPostureCheckType
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/detailPostureCheckTypeEnvelope"
          description: Retrieves a singular posture check type by id
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Retrieves a single posture check type
      tags:
      - Posture Checks
      x-accepts:
      - application/json
  /posture-checks:
    get:
      description: |
        Retrieves a list of posture checks
      operationId: listPostureChecks
      parameters:
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: filter
        schema:
          type: string
      - explode: true
        in: query
        name: roleFilter
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: roleSemantic
        schema:
          type: string
      responses:
        "200":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/listPostureCheckEnvelope"
          description: A list of posture checks
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List a subset of posture checks
      tags:
      - Posture Checks
      x-accepts:
      - application/json
      - application/json; charset=utf-8
    post:
      description: Creates a Posture Checks
      operationId: createPostureCheck
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postureCheckCreate"
        description: A Posture Check to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/createEnvelope"
          description: The create request was successful and the resource has been
            added at the following location
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Creates a Posture Checks
      tags:
      - Posture Checks
      x-codegen-request-body-name: postureCheck
      x-content-type: application/json
      x-accepts:
      - application/json
  /posture-checks/{id}:
    delete:
      description: Deletes and Posture Checks by id
      operationId: deletePostureCheck
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The delete request was successful and the resource has been
            removed
        "403":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Deletes an Posture Checks
      tags:
      - Posture Checks
      x-accepts:
      - application/json
    get:
      description: Retrieves a single Posture Checks by id
      operationId: detailPostureCheck
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/detailPostureCheckEnvelope"
          description: Retrieves a singular posture check by id
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Retrieves a single Posture Checks
      tags:
      - Posture Checks
      x-accepts:
      - application/json
    patch:
      description: Update only the supplied fields on a Posture Checks by id
      operationId: patchPostureCheck
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postureCheckPatch"
        description: A Posture Check patch object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The patch request was successful and the resource has been
            altered
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Update the supplied fields on a Posture Checks
      tags:
      - Posture Checks
      x-codegen-request-body-name: postureCheck
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: Update all fields on a Posture Checks by id
      operationId: updatePostureCheck
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postureCheckUpdate"
        description: A Posture Check update object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The update request was successful and the resource has been
            altered
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Update all fields on a Posture Checks
      tags:
      - Posture Checks
      x-codegen-request-body-name: postureCheck
      x-content-type: application/json
      x-accepts:
      - application/json
  /routers:
    get:
      description: |
        Retrieves a list of router resources; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listRouters
      parameters:
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: filter
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listRoutersEnvelope"
          description: A list of specifications
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List routers
      tags:
      - Router
      x-accepts:
      - application/json
    post:
      description: Create a router resource. Requires admin access.
      operationId: createRouter
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/routerCreate"
        description: A router to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/createEnvelope"
          description: The create request was successful and the resource has been
            added at the following location
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Create a router resource
      tags:
      - Router
      x-codegen-request-body-name: router
      x-content-type: application/json
      x-accepts:
      - application/json
  /routers/{id}:
    delete:
      description: Delete a router by id. Requires admin access.
      operationId: deleteRouter
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The delete request was successful and the resource has been
            removed
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "409":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42
                  code: CONFLICT_CANNOT_MODIFY_REFERENCED
                  message: The resource cannot be deleted/modified. Remove all referencing
                    resources first.
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested to be removed/altered cannot be as it
            is referenced by another object.
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Delete a router
      tags:
      - Router
      x-accepts:
      - application/json
    get:
      description: Retrieves a single router by id. Requires admin access.
      operationId: detailRouter
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/detailRouterEnvelope"
          description: A single router
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Retrieves a single router
      tags:
      - Router
      x-accepts:
      - application/json
    patch:
      description: Update the supplied fields on a router. Requires admin access.
      operationId: patchRouter
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/routerPatch"
        description: A router patch object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The patch request was successful and the resource has been
            altered
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Update the supplied fields on a router
      tags:
      - Router
      x-codegen-request-body-name: router
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: Update all fields on a router by id. Requires admin access.
      operationId: updateRouter
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/routerUpdate"
        description: A router update object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The update request was successful and the resource has been
            altered
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Update all fields on a router
      tags:
      - Router
      x-codegen-request-body-name: router
      x-content-type: application/json
      x-accepts:
      - application/json
  /service-edge-router-policies:
    get:
      description: |
        Retrieves a list of service edge router policy resources; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listServiceEdgeRouterPolicies
      parameters:
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: filter
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listServiceEdgeRouterPoliciesEnvelope"
          description: A list of service edge router policies
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List service edge router policies
      tags:
      - Service Edge Router Policy
      x-accepts:
      - application/json
    post:
      description: Create a service edge router policy resource. Requires admin access.
      operationId: createServiceEdgeRouterPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/serviceEdgeRouterPolicyCreate"
        description: A service edge router policy to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/createEnvelope"
          description: The create request was successful and the resource has been
            added at the following location
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Create a service edge router policy resource
      tags:
      - Service Edge Router Policy
      x-codegen-request-body-name: policy
      x-content-type: application/json
      x-accepts:
      - application/json
  /service-edge-router-policies/{id}:
    delete:
      description: Delete a service edge policy by id. Requires admin access.
      operationId: deleteServiceEdgeRouterPolicy
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The delete request was successful and the resource has been
            removed
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "409":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42
                  code: CONFLICT_CANNOT_MODIFY_REFERENCED
                  message: The resource cannot be deleted/modified. Remove all referencing
                    resources first.
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested to be removed/altered cannot be as it
            is referenced by another object.
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Delete a service edge policy
      tags:
      - Service Edge Router Policy
      x-accepts:
      - application/json
    get:
      description: Retrieves a single service edge policy by id. Requires admin access.
      operationId: detailServiceEdgeRouterPolicy
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/detailServiceEdgePolicyEnvelope"
          description: A single service edge router policy
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Retrieves a single service edge policy
      tags:
      - Service Edge Router Policy
      x-accepts:
      - application/json
    patch:
      description: Update the supplied fields on a service edge policy. Requires admin
        access.
      operationId: patchServiceEdgeRouterPolicy
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/serviceEdgeRouterPolicyPatch"
        description: A service edge router policy patch object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The patch request was successful and the resource has been
            altered
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Update the supplied fields on a service edge policy
      tags:
      - Service Edge Router Policy
      x-codegen-request-body-name: policy
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: Update all fields on a service edge policy by id. Requires admin
        access.
      operationId: updateServiceEdgeRouterPolicy
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/serviceEdgeRouterPolicyUpdate"
        description: A service edge router policy update object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The update request was successful and the resource has been
            altered
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Update all fields on a service edge policy
      tags:
      - Service Edge Router Policy
      x-codegen-request-body-name: policy
      x-content-type: application/json
      x-accepts:
      - application/json
  /service-edge-router-policies/{id}/edge-routers:
    get:
      description: List the edge routers that a service edge router policy applies
        to
      operationId: listServiceEdgeRouterPolicyEdgeRouters
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listEdgeRoutersEnvelope"
          description: A list of edge routers
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List the edge routers that a service edge router policy applies to
      tags:
      - Service Edge Router Policy
      x-accepts:
      - application/json
  /service-edge-router-policies/{id}/services:
    get:
      description: List the services that a service edge router policy applies to
      operationId: listServiceEdgeRouterPolicyServices
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listServicesEnvelope"
          description: A list of services
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List the services that a service edge router policy applies to
      tags:
      - Service Edge Router Policy
      x-accepts:
      - application/json
  /service-policies:
    get:
      description: |
        Retrieves a list of service policy resources; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listServicePolicies
      parameters:
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: filter
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listServicePoliciesEnvelope"
          description: A list of service policies
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List service policies
      tags:
      - Service Policy
      x-accepts:
      - application/json
    post:
      description: Create a service policy resource. Requires admin access.
      operationId: createServicePolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/servicePolicyCreate"
        description: A service policy to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/createEnvelope"
          description: The create request was successful and the resource has been
            added at the following location
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Create a service policy resource
      tags:
      - Service Policy
      x-codegen-request-body-name: policy
      x-content-type: application/json
      x-accepts:
      - application/json
  /service-policies/{id}:
    delete:
      description: Delete a service policy by id. Requires admin access.
      operationId: deleteServicePolicy
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The delete request was successful and the resource has been
            removed
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "409":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42
                  code: CONFLICT_CANNOT_MODIFY_REFERENCED
                  message: The resource cannot be deleted/modified. Remove all referencing
                    resources first.
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested to be removed/altered cannot be as it
            is referenced by another object.
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Delete a service policy
      tags:
      - Service Policy
      x-accepts:
      - application/json
    get:
      description: Retrieves a single service policy by id. Requires admin access.
      operationId: detailServicePolicy
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/detailServicePolicyEnvelop"
          description: A single service policy
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Retrieves a single service policy
      tags:
      - Service Policy
      x-accepts:
      - application/json
    patch:
      description: Update the supplied fields on a service policy. Requires admin
        access.
      operationId: patchServicePolicy
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/servicePolicyPatch"
        description: A service policy patch object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The patch request was successful and the resource has been
            altered
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Update the supplied fields on a service policy
      tags:
      - Service Policy
      x-codegen-request-body-name: policy
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: Update all fields on a service policy by id. Requires admin access.
      operationId: updateServicePolicy
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/servicePolicyUpdate"
        description: A service policy update object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The update request was successful and the resource has been
            altered
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Update all fields on a service policy
      tags:
      - Service Policy
      x-codegen-request-body-name: policy
      x-content-type: application/json
      x-accepts:
      - application/json
  /service-policies/{id}/identities:
    get:
      description: |
        Retrieves a list of identity resources that are affected by a service policy; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listServicePolicyIdentities
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: filter
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listIdentitiesEnvelope"
          description: A list of identities
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List identities a service policy affects
      tags:
      - Service Policy
      x-accepts:
      - application/json
  /service-policies/{id}/posture-checks:
    get:
      description: |
        Retrieves a list of posture check resources that are affected by a service policy; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listServicePolicyPostureChecks
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: filter
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listPostureCheckEnvelope"
          description: A list of posture checks
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List posture check a service policy includes
      tags:
      - Service Policy
      x-accepts:
      - application/json
  /service-policies/{id}/services:
    get:
      description: |
        Retrieves a list of service resources that are affected by a service policy; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listServicePolicyServices
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: filter
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listServicesEnvelope"
          description: A list of services
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List services a service policy affects
      tags:
      - Service Policy
      x-accepts:
      - application/json
  /service-role-attributes:
    get:
      description: |
        Retrieves a list of role attributes in use by services; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listServiceRoleAttributes
      parameters:
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: filter
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listRoleAttributesEnvelope"
          description: A list of role attributes
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List role attributes in use by services
      tags:
      - Role Attributes
      x-accepts:
      - application/json
  /services:
    get:
      description: |
        Retrieves a list of config resources; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listServices
      parameters:
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: filter
        schema:
          type: string
      - explode: true
        in: query
        name: configTypes
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: roleFilter
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: roleSemantic
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listServicesEnvelope"
          description: A list of services
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List services
      tags:
      - Service
      x-accepts:
      - application/json
    post:
      description: Create a services resource. Requires admin access.
      operationId: createService
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/serviceCreate"
        description: A service to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/createEnvelope"
          description: The create request was successful and the resource has been
            added at the following location
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Create a services resource
      tags:
      - Service
      x-codegen-request-body-name: service
      x-content-type: application/json
      x-accepts:
      - application/json
  /services/{id}:
    delete:
      description: Delete a service by id. Requires admin access.
      operationId: deleteService
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The delete request was successful and the resource has been
            removed
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "409":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42
                  code: CONFLICT_CANNOT_MODIFY_REFERENCED
                  message: The resource cannot be deleted/modified. Remove all referencing
                    resources first.
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested to be removed/altered cannot be as it
            is referenced by another object.
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Delete a service
      tags:
      - Service
      x-accepts:
      - application/json
    get:
      description: Retrieves a single service by id. Requires admin access.
      operationId: detailService
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/detailServiceEnvelope"
          description: A single service
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Retrieves a single service
      tags:
      - Service
      x-accepts:
      - application/json
    patch:
      description: Update the supplied fields on a service. Requires admin access.
      operationId: patchService
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/servicePatch"
        description: A service patch object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The patch request was successful and the resource has been
            altered
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Update the supplied fields on a service
      tags:
      - Service
      x-codegen-request-body-name: service
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: Update all fields on a service by id. Requires admin access.
      operationId: updateService
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/serviceUpdate"
        description: A service update object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The update request was successful and the resource has been
            altered
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Update all fields on a service
      tags:
      - Service
      x-codegen-request-body-name: service
      x-content-type: application/json
      x-accepts:
      - application/json
  /services/{id}/configs:
    get:
      description: |
        Retrieves a list of config resources associated to a specific service; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listServiceConfig
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: filter
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listConfigsEnvelope"
          description: A list of configs
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List configs associated to a specific service
      tags:
      - Service
      x-accepts:
      - application/json
  /services/{id}/edge-routers:
    get:
      description: |
        Retrieves a list of edge-routers that may be used to access the given service. Supports filtering, sorting, and pagination. Requires admin access.
      operationId: listServiceEdgeRouters
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: filter
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listEdgeRoutersEnvelope"
          description: A list of edge routers
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List accessible edge-routers
      tags:
      - Service
      x-accepts:
      - application/json
  /services/{id}/identities:
    get:
      description: |
        Retrieves a list of identities that have access to this service. Supports filtering, sorting, and pagination. Requires admin access.
      operationId: listServiceIdentities
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: filter
        schema:
          type: string
      - in: query
        name: policyType
        schema:
          enum:
          - dial
          - bind
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listIdentitiesEnvelope"
          description: A list of identities
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List identities with access
      tags:
      - Service
      x-accepts:
      - application/json
  /services/{id}/service-edge-router-policies:
    get:
      description: |
        Retrieves a list of service edge router policy resources that affect a specific service; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listServiceServiceEdgeRouterPolicies
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: filter
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listServiceEdgeRouterPoliciesEnvelope"
          description: A list of service edge router policies
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List service edge router policies that affect a specific service
      tags:
      - Service
      x-accepts:
      - application/json
  /services/{id}/service-policies:
    get:
      description: |
        Retrieves a list of service policy resources that affect specific service; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listServiceServicePolicies
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: filter
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listServicePoliciesEnvelope"
          description: A list of service policies
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List service policies that affect a specific service
      tags:
      - Service
      x-accepts:
      - application/json
  /services/{id}/terminators:
    get:
      description: |
        Retrieves a list of terminator resources that are assigned specific service; supports filtering, sorting, and pagination.
      operationId: listServiceTerminators
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: filter
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listTerminatorsEnvelope"
          description: A list of terminators
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List of terminators assigned to a service
      tags:
      - Service
      x-accepts:
      - application/json
  /sessions:
    get:
      description: |
        Retrieves a list of active sessions resources; supports filtering, sorting, and pagination. Requires admin access.

        Sessions are tied to an API session and are moved when an API session times out or logs out. Active sessions
        (i.e. Ziti SDK connected to an edge router) will keep the session and API session marked as active.
      operationId: listSessions
      parameters:
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: filter
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listSessionsManagementEnvelope"
          description: A list of sessions
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List sessions
      tags:
      - Session
      x-accepts:
      - application/json
  /sessions/{id}:
    delete:
      description: Delete a session by id. Requires admin access.
      operationId: deleteSession
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The delete request was successful and the resource has been
            removed
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "409":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42
                  code: CONFLICT_CANNOT_MODIFY_REFERENCED
                  message: The resource cannot be deleted/modified. Remove all referencing
                    resources first.
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested to be removed/altered cannot be as it
            is referenced by another object.
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Delete a session
      tags:
      - Session
      x-accepts:
      - application/json
    get:
      description: Retrieves a single session by id. Requires admin access.
      operationId: detailSession
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/detailSessionManagementEnvelope"
          description: A single session
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Retrieves a single session
      tags:
      - Session
      x-accepts:
      - application/json
  /sessions/{id}/route-path:
    get:
      description: Retrieves a single session's route path by id. Requires admin access.
      operationId: detailSessionRoutePath
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/detailSessionRoutePathEnvelope"
          description: A single session's route path
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Retrieves a single session's router path
      tags:
      - Session
      x-accepts:
      - application/json
  /specs:
    get:
      description: Returns a list of spec files embedded within the controller for
        consumption/documentation/code geneartion
      operationId: listSpecs
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listSpecsEnvelope"
          description: A list of specifications
      security: []
      summary: Returns a list of API specs
      tags:
      - Informational
      x-accepts:
      - application/json
  /specs/{id}:
    get:
      description: Returns single spec resource embedded within the controller for
        consumption/documentation/code geneartion
      operationId: detailSpec
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/detailSpecEnvelope"
          description: A single specification
      security: []
      summary: Return a single spec resource
      tags:
      - Informational
      x-accepts:
      - application/json
  /specs/{id}/spec:
    get:
      description: "Return the body of the specification (i.e. Swagger, OpenAPI 2.0,\
        \ 3.0, etc)."
      operationId: detailSpecBody
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/yaml:
              schema:
                $ref: "#/components/schemas/detailSpecBodyEnvelope"
            application/json:
              schema:
                $ref: "#/components/schemas/detailSpecBodyEnvelope"
          description: Returns the document that represents the specification
      security: []
      summary: Returns the spec's file
      tags:
      - Informational
      x-accepts:
      - application/json
      - text/yaml
  /summary:
    get:
      description: This endpoint is usefull for UIs that wish to display UI elements
        with counts.
      operationId: listSummary
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listSummaryCountsEnvelope"
          description: Entity counts scopped to the current identitie's access
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Returns a list of accessible resource counts
      tags:
      - Informational
      x-accepts:
      - application/json
  /terminators:
    get:
      description: |
        Retrieves a list of terminator resources; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listTerminators
      parameters:
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: filter
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listTerminatorsEnvelope"
          description: A list of terminators
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List terminators
      tags:
      - Terminator
      x-accepts:
      - application/json
    post:
      description: Create a terminator resource. Requires admin access.
      operationId: createTerminator
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/terminatorCreate"
        description: A terminator to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/createEnvelope"
          description: The create request was successful and the resource has been
            added at the following location
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Create a terminator resource
      tags:
      - Terminator
      x-codegen-request-body-name: terminator
      x-content-type: application/json
      x-accepts:
      - application/json
  /terminators/{id}:
    delete:
      description: Delete a terminator by id. Requires admin access.
      operationId: deleteTerminator
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The delete request was successful and the resource has been
            removed
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "409":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42
                  code: CONFLICT_CANNOT_MODIFY_REFERENCED
                  message: The resource cannot be deleted/modified. Remove all referencing
                    resources first.
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested to be removed/altered cannot be as it
            is referenced by another object.
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Delete a terminator
      tags:
      - Terminator
      x-accepts:
      - application/json
    get:
      description: Retrieves a single terminator by id. Requires admin access.
      operationId: detailTerminator
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/detailTerminatorEnvelope"
          description: A single terminator
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Retrieves a single terminator
      tags:
      - Terminator
      x-accepts:
      - application/json
    patch:
      description: Update the supplied fields on a terminator. Requires admin access.
      operationId: patchTerminator
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/terminatorPatch"
        description: A terminator patch object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The patch request was successful and the resource has been
            altered
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Update the supplied fields on a terminator
      tags:
      - Terminator
      x-codegen-request-body-name: terminator
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: Update all fields on a terminator by id. Requires admin access.
      operationId: updateTerminator
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/terminatorUpdate"
        description: A terminator update object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The update request was successful and the resource has been
            altered
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Update all fields on a terminator
      tags:
      - Terminator
      x-codegen-request-body-name: terminator
      x-content-type: application/json
      x-accepts:
      - application/json
  /transit-routers:
    get:
      description: |
        Retrieves a list of router resources; supports filtering, sorting, and pagination. Requires admin access.
      operationId: listTransitRouters
      parameters:
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: filter
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listRoutersEnvelope"
          description: A list of specifications
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: List routers
      tags:
      - Router
      x-accepts:
      - application/json
    post:
      description: Create a router resource. Requires admin access.
      operationId: createTransitRouter
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/routerCreate"
        description: A router to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/createEnvelope"
          description: The create request was successful and the resource has been
            added at the following location
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Create a router resource
      tags:
      - Router
      x-codegen-request-body-name: router
      x-content-type: application/json
      x-accepts:
      - application/json
  /transit-routers/{id}:
    delete:
      description: Delete a router by id. Requires admin access.
      operationId: deleteTransitRouter
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The delete request was successful and the resource has been
            removed
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "409":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: referenced by /some-resource/05f4f710-c155-4a74-86d5-77558eb9cb42
                  code: CONFLICT_CANNOT_MODIFY_REFERENCED
                  message: The resource cannot be deleted/modified. Remove all referencing
                    resources first.
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested to be removed/altered cannot be as it
            is referenced by another object.
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Delete a router
      tags:
      - Router
      x-accepts:
      - application/json
    get:
      description: Retrieves a single router by id. Requires admin access.
      operationId: detailTransitRouter
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/detailRouterEnvelope"
          description: A single router
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Retrieves a single router
      tags:
      - Router
      x-accepts:
      - application/json
    patch:
      description: Update the supplied fields on a router. Requires admin access.
      operationId: patchTransitRouter
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/routerPatch"
        description: A router patch object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The patch request was successful and the resource has been
            altered
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Update the supplied fields on a router
      tags:
      - Router
      x-codegen-request-body-name: router
      x-content-type: application/json
      x-accepts:
      - application/json
    put:
      description: Update all fields on a router by id. Requires admin access.
      operationId: updateTransitRouter
      parameters:
      - description: The id of the requested resource
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/routerUpdate"
        description: A router update object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/empty"
          description: The update request was successful and the resource has been
            altered
        "400":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause:
                    details:
                      context: (root)
                      field: (root)
                      property: fooField3
                    field: (root)
                    message: "(root): fooField3 is required"
                    type: required
                    value:
                      fooField: abc
                      fooField2: def
                  causeMessage: schema validation failed
                  code: COULD_NOT_VALIDATE
                  message: The supplied request contains an invalid document
                  requestId: ac6766d6-3a09-44b3-8d8a-1b541d97fdd9
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: "The supplied request contains invalid fields or could not\
            \ be parsed (json and non-json bodies). The error's code, message, and\
            \ cause fields can be inspected for further information"
        "401":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  cause: ""
                  causeMessage: ""
                  code: UNAUTHORIZED
                  message: The request could not be completed. The session is not
                    authorized or the credentials are invalid
                  requestId: 0bfe7a04-9229-4b7a-812c-9eb3cc0eac0f
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The supplied session does not have the correct access rights
            to request this resource
        "404":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars:
                      id: 71a3000f-7dda-491a-9b90-a19f4ee6c406
                  causeMessage: ""
                  code: NOT_FOUND
                  message: The resource requested was not found or is no longer available
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The requested resource does not exist
        "429":
          content:
            application/json:
              example:
                error:
                  args:
                    urlVars: {}
                  causeMessage: you have hit a rate limit in the requested operation
                  code: RATE_LIMITED
                  message: The resource is rate limited and the rate limit has been
                    exceeded. Please try again later
                  requestId: 270908d6-f2ef-4577-b973-67bec18ae376
                meta:
                  apiEnrollmentVersion: 0.0.1
                  apiVersion: 0.0.1
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The resource requested is rate limited and the rate limit has
            been exceeded
        "503":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/apiErrorEnvelope"
          description: The request could not be completed due to the server being
            busy or in a temporarily bad state
      security:
      - ztSession: []
      - oauth2:
        - openid
      summary: Update all fields on a router
      tags:
      - Router
      x-codegen-request-body-name: router
      x-content-type: application/json
      x-accepts:
      - application/json
  /version:
    get:
      operationId: listVersion
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listVersionEnvelope"
          description: Version information for the controller
      security: []
      summary: Returns version information
      tags:
      - Informational
      x-accepts:
      - application/json
components:
  schemas:
    apiAddress:
      properties:
        url:
          type: string
        version:
          type: string
      type: object
    apiAddressArray:
      items:
        $ref: "#/components/schemas/apiAddress"
      type: array
    apiAddressList:
      additionalProperties:
        $ref: "#/components/schemas/apiAddressArray"
      type: object
    apiError:
      example:
        args:
          urlVars:
            key: urlVars
        code: code
        data:
          key: ""
        requestId: requestId
        cause:
          args:
            urlVars:
              key: urlVars
          reason: reason
          code: code
          field: field
          data:
            key: ""
          requestId: requestId
          cause: null
          message: message
          value: "{}"
          causeMessage: causeMessage
        message: message
        causeMessage: causeMessage
      properties:
        args:
          $ref: "#/components/schemas/apiErrorArgs"
        cause:
          $ref: "#/components/schemas/apiErrorCause"
        causeMessage:
          type: string
        code:
          type: string
        data:
          additionalProperties: true
          type: object
        message:
          type: string
        requestId:
          type: string
      type: object
    apiErrorArgs:
      example:
        urlVars:
          key: urlVars
      properties:
        urlVars:
          additionalProperties:
            type: string
          type: object
      type: object
    apiErrorCause:
      allOf:
      - $ref: "#/components/schemas/apiFieldError"
      - $ref: "#/components/schemas/apiError"
      example:
        args:
          urlVars:
            key: urlVars
        reason: reason
        code: code
        field: field
        data:
          key: ""
        requestId: requestId
        cause: null
        message: message
        value: "{}"
        causeMessage: causeMessage
    apiErrorEnvelope:
      example:
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
        error:
          args:
            urlVars:
              key: urlVars
          code: code
          data:
            key: ""
          requestId: requestId
          cause:
            args:
              urlVars:
                key: urlVars
            reason: reason
            code: code
            field: field
            data:
              key: ""
            requestId: requestId
            cause: null
            message: message
            value: "{}"
            causeMessage: causeMessage
          message: message
          causeMessage: causeMessage
      properties:
        error:
          $ref: "#/components/schemas/apiError"
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - error
      - meta
      type: object
    apiFieldError:
      properties:
        field:
          type: string
        reason:
          type: string
        value:
          description: "can be any value - string, number, boolean, array or object"
          type: object
      type: object
    apiSessionDetail:
      allOf:
      - $ref: "#/components/schemas/baseEntity"
      - properties:
          authQueries:
            $ref: "#/components/schemas/authQueryList"
          authenticatorId:
            type: string
          cachedLastActivityAt:
            format: date-time
            type: string
          configTypes:
            items:
              type: string
            type: array
          identity:
            $ref: "#/components/schemas/entityRef"
          identityId:
            type: string
          ipAddress:
            type: string
          isCertExtendable:
            type: boolean
          isMfaComplete:
            type: boolean
          isMfaRequired:
            type: boolean
          lastActivityAt:
            format: date-time
            type: string
          token:
            type: string
        required:
        - authQueries
        - authenticatorId
        - configTypes
        - identity
        - identityId
        - ipAddress
        - isCertExtendable
        - isMfaComplete
        - isMfaRequired
        - token
        type: object
      description: An API Session object
      example:
        _links:
          key:
            method: method
            comment: comment
            href: https://openapi-generator.tech
        configTypes:
        - configTypes
        - configTypes
        authQueries:
        - clientId: clientId
          provider: ziti
          httpUrl: httpUrl
          minLength: 6
          format: numeric
          typeId: MFA
          id: id
          scopes:
          - scopes
          - scopes
          httpMethod: httpMethod
          maxLength: 0
        - clientId: clientId
          provider: ziti
          httpUrl: httpUrl
          minLength: 6
          format: numeric
          typeId: MFA
          id: id
          scopes:
          - scopes
          - scopes
          httpMethod: httpMethod
          maxLength: 0
        ipAddress: ipAddress
        lastActivityAt: 2000-01-23T04:56:07.000+00:00
        isMfaRequired: true
        tags: {}
        token: token
        createdAt: 2000-01-23T04:56:07.000+00:00
        isMfaComplete: true
        cachedLastActivityAt: 2000-01-23T04:56:07.000+00:00
        identity:
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          name: name
          id: id
          entity: entity
        identityId: identityId
        authenticatorId: authenticatorId
        id: id
        isCertExtendable: true
        updatedAt: 2000-01-23T04:56:07.000+00:00
    apiSessionList:
      items:
        $ref: "#/components/schemas/apiSessionDetail"
      type: array
    apiSessionPostureData:
      example:
        endpointState:
          unlockedAt: 2000-01-23T04:56:07.000+00:00
          wokenAt: 2000-01-23T04:56:07.000+00:00
        mfa:
          passedOnUnlock: true
          passedAt: 2000-01-23T04:56:07.000+00:00
          passedMfa: true
          passedOnWake: true
          apiSessionId: apiSessionId
        sdkInfo:
          appVersion: appVersion
          appId: appId
          type: type
          branch: branch
          version: version
          revision: revision
      properties:
        endpointState:
          $ref: "#/components/schemas/postureDataEndpointState"
        mfa:
          $ref: "#/components/schemas/postureDataMfa"
        sdkInfo:
          $ref: "#/components/schemas/sdkInfo"
      required:
      - mfa
      type: object
    apiVersion:
      example:
        path: path
        apiBaseUrls:
        - apiBaseUrls
        - apiBaseUrls
        version: version
      properties:
        apiBaseUrls:
          items:
            type: string
          type: array
        path:
          type: string
        version:
          type: string
      required:
      - path
      type: object
    attributes:
      description: A set of strings used to loosly couple this resource to policies
      items:
        type: string
      nullable: true
      type: array
      x-nullable: true
      x-omitempty: true
    authPolicyCreate:
      description: A Auth Policy resource
      properties:
        name:
          type: string
        primary:
          $ref: "#/components/schemas/authPolicyPrimary"
        secondary:
          $ref: "#/components/schemas/authPolicySecondary"
        tags:
          $ref: "#/components/schemas/tags"
      required:
      - name
      - primary
      - secondary
      type: object
    authPolicyDetail:
      allOf:
      - $ref: "#/components/schemas/baseEntity"
      - properties:
          name:
            type: string
          primary:
            $ref: "#/components/schemas/authPolicyPrimary"
          secondary:
            $ref: "#/components/schemas/authPolicySecondary"
        required:
        - name
        - primary
        - secondary
        type: object
      description: A Auth Policy resource
      example:
        secondary:
          requireExtJwtSigner: requireExtJwtSigner
          requireTotp: true
        createdAt: 2000-01-23T04:56:07.000+00:00
        _links:
          key:
            method: method
            comment: comment
            href: https://openapi-generator.tech
        name: name
        id: id
        tags: {}
        updatedAt: 2000-01-23T04:56:07.000+00:00
        primary:
          cert:
            allowExpiredCerts: true
            allowed: true
          extJwt:
            allowedSigners:
            - allowedSigners
            - allowedSigners
            allowed: true
          updb:
            maxAttempts: 6
            requireNumberChar: true
            requireMixedCase: true
            requireSpecialChar: true
            allowed: true
            minPasswordLength: 1
            lockoutDurationMinutes: 0
    authPolicyList:
      description: An array of Auth Policies resources
      items:
        $ref: "#/components/schemas/authPolicyDetail"
      type: array
    authPolicyPatch:
      description: A Auth Policy resource
      properties:
        name:
          nullable: true
          type: string
        primary:
          $ref: "#/components/schemas/authPolicyPrimaryPatch"
        secondary:
          $ref: "#/components/schemas/authPolicySecondaryPatch"
        tags:
          $ref: "#/components/schemas/tags"
      type: object
    authPolicyPrimary:
      example:
        cert:
          allowExpiredCerts: true
          allowed: true
        extJwt:
          allowedSigners:
          - allowedSigners
          - allowedSigners
          allowed: true
        updb:
          maxAttempts: 6
          requireNumberChar: true
          requireMixedCase: true
          requireSpecialChar: true
          allowed: true
          minPasswordLength: 1
          lockoutDurationMinutes: 0
      properties:
        cert:
          $ref: "#/components/schemas/authPolicyPrimaryCert"
        extJwt:
          $ref: "#/components/schemas/authPolicyPrimaryExtJwt"
        updb:
          $ref: "#/components/schemas/authPolicyPrimaryUpdb"
      required:
      - cert
      - extJwt
      - updb
      type: object
    authPolicyPrimaryCert:
      example:
        allowExpiredCerts: true
        allowed: true
      properties:
        allowExpiredCerts:
          type: boolean
        allowed:
          type: boolean
      required:
      - allowExpiredCerts
      - allowed
      type: object
    authPolicyPrimaryCertPatch:
      nullable: true
      properties:
        allowExpiredCerts:
          nullable: true
          type: boolean
        allowed:
          nullable: true
          type: boolean
      type: object
      x-nullable: true
    authPolicyPrimaryExtJwt:
      example:
        allowedSigners:
        - allowedSigners
        - allowedSigners
        allowed: true
      properties:
        allowed:
          type: boolean
        allowedSigners:
          items:
            type: string
          type: array
      required:
      - allowed
      - allowedSigners
      type: object
    authPolicyPrimaryExtJwtPatch:
      nullable: true
      properties:
        allowed:
          nullable: true
          type: boolean
        allowedSigners:
          items:
            type: string
          nullable: true
          type: array
      type: object
      x-nullable: true
    authPolicyPrimaryPatch:
      properties:
        cert:
          $ref: "#/components/schemas/authPolicyPrimaryCertPatch"
        extJwt:
          $ref: "#/components/schemas/authPolicyPrimaryExtJwtPatch"
        updb:
          $ref: "#/components/schemas/authPolicyPrimaryUpdbPatch"
      type: object
    authPolicyPrimaryUpdb:
      example:
        maxAttempts: 6
        requireNumberChar: true
        requireMixedCase: true
        requireSpecialChar: true
        allowed: true
        minPasswordLength: 1
        lockoutDurationMinutes: 0
      properties:
        allowed:
          type: boolean
        lockoutDurationMinutes:
          type: integer
        maxAttempts:
          type: integer
        minPasswordLength:
          type: integer
        requireMixedCase:
          type: boolean
        requireNumberChar:
          type: boolean
        requireSpecialChar:
          type: boolean
      required:
      - allowed
      - lockoutDurationMinutes
      - maxAttempts
      - minPasswordLength
      - requireMixedCase
      - requireNumberChar
      - requireSpecialChar
      type: object
    authPolicyPrimaryUpdbPatch:
      nullable: true
      properties:
        allowed:
          nullable: true
          type: boolean
        lockoutDurationMinutes:
          nullable: true
          type: integer
        maxAttempts:
          nullable: true
          type: integer
        minPasswordLength:
          nullable: true
          type: integer
        requireMixedCase:
          nullable: true
          type: boolean
        requireNumberChar:
          nullable: true
          type: boolean
        requireSpecialChar:
          nullable: true
          type: boolean
      type: object
      x-nullable: true
    authPolicySecondary:
      example:
        requireExtJwtSigner: requireExtJwtSigner
        requireTotp: true
      properties:
        requireExtJwtSigner:
          nullable: true
          type: string
          x-omit-empty: false
        requireTotp:
          type: boolean
      required:
      - requireTotp
      type: object
    authPolicySecondaryPatch:
      nullable: true
      properties:
        requireExtJwtSigner:
          nullable: true
          type: string
        requireTotp:
          nullable: true
          type: boolean
      type: object
      x-nullable: true
    authPolicyUpdate:
      $ref: "#/components/schemas/authPolicyCreate"
    authQueryDetail:
      example:
        clientId: clientId
        provider: ziti
        httpUrl: httpUrl
        minLength: 6
        format: numeric
        typeId: MFA
        id: id
        scopes:
        - scopes
        - scopes
        httpMethod: httpMethod
        maxLength: 0
      properties:
        clientId:
          type: string
        format:
          $ref: "#/components/schemas/mfaFormats"
        httpMethod:
          type: string
        httpUrl:
          type: string
        id:
          type: string
        maxLength:
          type: integer
        minLength:
          type: integer
        provider:
          $ref: "#/components/schemas/mfaProviders"
        scopes:
          items:
            type: string
          type: array
        typeId:
          $ref: "#/components/schemas/authQueryType"
      required:
      - provider
      type: object
    authQueryList:
      items:
        $ref: "#/components/schemas/authQueryDetail"
      type: array
    authQueryType:
      enum:
      - MFA
      - TOTP
      - EXT-JWT
      type: string
    authenticate:
      description: A generic authenticate object meant for use with the /authenticate
        path. Required fields depend on authentication method.
      properties:
        configTypes:
          description: Specific configuration types that should be returned
          items:
            type: string
          type: array
        envInfo:
          $ref: "#/components/schemas/envInfo"
        password:
          maxLength: 100
          minLength: 5
          type: string
        sdkInfo:
          $ref: "#/components/schemas/sdkInfo"
        username:
          maxLength: 100
          minLength: 4
          type: string
      type: object
    authenticatorCreate:
      description: Creates an authenticator for a specific identity which can be used
        for API authentication
      properties:
        certPem:
          description: The client certificate the identity will login with. Used only
            for method='cert'
          type: string
        identityId:
          description: The id of an existing identity that will be assigned this authenticator
          type: string
        method:
          description: The type of authenticator to create; which will dictate which
            properties on this object are required.
          type: string
        password:
          description: The password the identity will login with. Used only for method='updb'
          type: string
        tags:
          $ref: "#/components/schemas/tags"
        username:
          description: The username that the identity will login with. Used only for
            method='updb'
          type: string
      required:
      - identityId
      - method
      type: object
    authenticatorDetail:
      allOf:
      - $ref: "#/components/schemas/baseEntity"
      - properties:
          certPem:
            type: string
          fingerprint:
            type: string
          identity:
            $ref: "#/components/schemas/entityRef"
          identityId:
            type: string
          isIssuedByNetwork:
            type: boolean
          method:
            type: string
          username:
            type: string
        required:
        - identity
        - identityId
        - method
        type: object
      description: A singular authenticator resource
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        method: method
        _links:
          key:
            method: method
            comment: comment
            href: https://openapi-generator.tech
        identity:
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          name: name
          id: id
          entity: entity
        identityId: identityId
        fingerprint: fingerprint
        certPem: certPem
        id: id
        isIssuedByNetwork: true
        tags: {}
        updatedAt: 2000-01-23T04:56:07.000+00:00
        username: username
    authenticatorList:
      description: An array of authenticator resources
      items:
        $ref: "#/components/schemas/authenticatorDetail"
      type: array
    authenticatorPatch:
      description: All of the fields on an authenticator that may be updated
      properties:
        password:
          maxLength: 100
          minLength: 5
          nullable: true
          type: string
          x-nullable: true
        tags:
          $ref: "#/components/schemas/tags"
        username:
          maxLength: 100
          minLength: 4
          nullable: true
          type: string
          x-nullable: true
      type: object
    authenticatorPatchWithCurrent:
      allOf:
      - $ref: "#/components/schemas/authenticatorPatch"
      - properties:
          currentPassword:
            $ref: "#/components/schemas/password"
        required:
        - currentPassword
        type: object
      description: All of the fields on an authenticator that may be updated
    authenticatorUpdate:
      description: All of the fields on an authenticator that will be updated
      properties:
        password:
          maxLength: 100
          minLength: 5
          type: string
        tags:
          $ref: "#/components/schemas/tags"
        username:
          maxLength: 100
          minLength: 4
          type: string
      required:
      - password
      - username
      type: object
    authenticatorUpdateWithCurrent:
      allOf:
      - $ref: "#/components/schemas/authenticatorUpdate"
      - properties:
          currentPassword:
            $ref: "#/components/schemas/password"
        required:
        - currentPassword
        type: object
      description: All of the fields on an authenticator that will be updated
    baseEntity:
      description: Fields shared by all Edge API entities
      properties:
        _links:
          additionalProperties:
            $ref: "#/components/schemas/link"
          description: A map of named links
          type: object
          x-omitempty: false
        createdAt:
          format: date-time
          type: string
        id:
          type: string
        tags:
          $ref: "#/components/schemas/tags"
        updatedAt:
          format: date-time
          type: string
      required:
      - _links
      - createdAt
      - id
      - updatedAt
      type: object
    caCreate:
      description: A create Certificate Authority (CA) object
      properties:
        certPem:
          example: |
            -----BEGIN CERTIFICATE-----
            MIICUjCCAdmgAwIBAgIJANooo7NB+dZZMAoGCCqGSM49BAMCMF4xCzAJBgNVBAYT
            AlVTMQswCQYDVQQIDAJOQzETMBEGA1UECgwKTmV0Rm91bmRyeTEtMCsGA1UEAwwk
            TmV0Rm91bmRyeSBaaXRpIEV4dGVybmFsIEFQSSBSb290IENBMB4XDTE4MTExNTEy
            NTcwOVoXDTM4MTExMDEyNTcwOVowXjELMAkGA1UEBhMCVVMxCzAJBgNVBAgMAk5D
            MRMwEQYDVQQKDApOZXRGb3VuZHJ5MS0wKwYDVQQDDCROZXRGb3VuZHJ5IFppdGkg
            RXh0ZXJuYWwgQVBJIFJvb3QgQ0EwdjAQBgcqhkjOPQIBBgUrgQQAIgNiAARwq61Z
            Iaqbaw0PDt3frJZaHjkxfZhwYrykI1GlbRNd/jix03lVG9qvpN5Og9fQfFFcFmD/
            3vCE9S6O0npm0mADQxcBcxbMRAH5dtBuCuiJW6qAAbPgiM32vqSxBiFt0KejYzBh
            MB0GA1UdDgQWBBRx1OVGuc/jdltDc8YBtkw8Tbr4fjAfBgNVHSMEGDAWgBRx1OVG
            uc/jdltDc8YBtkw8Tbr4fjAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIB
            hjAKBggqhkjOPQQDAgNnADBkAjBDRxNZUaIVpkQKnAgJukl3ysd3/i7Z6hDyIEms
            kllz/+ZvmdBp9iedV5o5BvJUggACMCv+UBFlJH7pmsOCo/F45Kk178YsCC7gaMxE
            1ZG1zveyMvsYsH04C9FndE6w2MLvlA==
            -----END CERTIFICATE-----
          type: string
        externalIdClaim:
          $ref: "#/components/schemas/externalIdClaim"
        identityNameFormat:
          type: string
        identityRoles:
          items:
            type: string
          type: array
          x-omitempty: false
        isAuthEnabled:
          example: true
          type: boolean
        isAutoCaEnrollmentEnabled:
          example: true
          type: boolean
        isOttCaEnrollmentEnabled:
          example: true
          type: boolean
        name:
          example: Test 3rd Party External CA
          type: string
        tags:
          $ref: "#/components/schemas/tags"
      required:
      - certPem
      - identityRoles
      - isAuthEnabled
      - isAutoCaEnrollmentEnabled
      - isOttCaEnrollmentEnabled
      - name
      type: object
    caDetail:
      allOf:
      - $ref: "#/components/schemas/baseEntity"
      - properties:
          certPem:
            type: string
          externalIdClaim:
            $ref: "#/components/schemas/externalIdClaim"
          fingerprint:
            type: string
          identityNameFormat:
            type: string
          identityRoles:
            $ref: "#/components/schemas/roles"
          isAuthEnabled:
            example: true
            type: boolean
          isAutoCaEnrollmentEnabled:
            example: true
            type: boolean
          isOttCaEnrollmentEnabled:
            example: true
            type: boolean
          isVerified:
            example: false
            type: boolean
          name:
            type: string
          verificationToken:
            format: uuid
            type: string
        required:
        - certPem
        - fingerprint
        - identityNameFormat
        - identityRoles
        - isAuthEnabled
        - isAutoCaEnrollmentEnabled
        - isOttCaEnrollmentEnabled
        - isVerified
        - name
        type: object
      description: A Certificate Authority (CA) resource
      example:
        identityNameFormat: identityNameFormat
        _links:
          key:
            method: method
            comment: comment
            href: https://openapi-generator.tech
        isVerified: false
        externalIdClaim:
          parserCriteria: parserCriteria
          parser: NONE
          matcherCriteria: matcherCriteria
          index: 0
          location: COMMON_NAME
          matcher: ALL
        verificationToken: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        isOttCaEnrollmentEnabled: true
        certPem: certPem
        tags: {}
        createdAt: 2000-01-23T04:56:07.000+00:00
        identityRoles:
        - null
        - null
        isAutoCaEnrollmentEnabled: true
        fingerprint: fingerprint
        name: name
        id: id
        isAuthEnabled: true
        updatedAt: 2000-01-23T04:56:07.000+00:00
    caList:
      description: An array of Certificate Authority (CA) resources
      items:
        $ref: "#/components/schemas/caDetail"
      type: array
    caPatch:
      properties:
        externalIdClaim:
          $ref: "#/components/schemas/externalIdClaimPatch"
        identityNameFormat:
          nullable: true
          type: string
        identityRoles:
          items:
            type: string
          type: array
          x-omitempty: false
        isAuthEnabled:
          example: true
          nullable: true
          type: boolean
        isAutoCaEnrollmentEnabled:
          example: true
          nullable: true
          type: boolean
        isOttCaEnrollmentEnabled:
          example: true
          nullable: true
          type: boolean
        name:
          example: My CA
          nullable: true
          type: string
        tags:
          $ref: "#/components/schemas/tags"
      type: object
    caUpdate:
      properties:
        externalIdClaim:
          $ref: "#/components/schemas/externalIdClaim"
        identityNameFormat:
          type: string
        identityRoles:
          items:
            type: string
          type: array
          x-omitempty: false
        isAuthEnabled:
          example: true
          type: boolean
        isAutoCaEnrollmentEnabled:
          example: true
          type: boolean
        isOttCaEnrollmentEnabled:
          example: true
          type: boolean
        name:
          example: My CA
          type: string
        tags:
          $ref: "#/components/schemas/tags"
      required:
      - identityNameFormat
      - identityRoles
      - isAuthEnabled
      - isAutoCaEnrollmentEnabled
      - isOttCaEnrollmentEnabled
      - name
      type: object
    capabilities:
      enum:
      - OIDC_AUTH
      - HA_CONTROLLER
      type: string
    commonEdgeRouterProperties:
      properties:
        appData:
          $ref: "#/components/schemas/tags"
        cost:
          maximum: 65535
          minimum: 0
          nullable: true
          type: integer
        disabled:
          type: boolean
        hostname:
          type: string
        isOnline:
          type: boolean
        name:
          type: string
        noTraversal:
          nullable: true
          type: boolean
        supportedProtocols:
          additionalProperties:
            type: string
          type: object
        syncStatus:
          type: string
      required:
      - cost
      - disabled
      - hostname
      - isOnline
      - name
      - noTraversal
      - supportedProtocols
      - syncStatus
      type: object
    configCreate:
      description: A config create object
      example:
        configTypeId: cea49285-6c07-42cf-9f52-09a9b115c783
        data:
          hostname: example.com
          port: 80
        name: test-config
      properties:
        configTypeId:
          description: The id of a config-type that the data section will match
          type: string
        data:
          additionalProperties: true
          description: Data payload is defined by the schema of the config-type defined
            in the type parameter
          nullable: false
          type: object
        name:
          example: default.ziti-tunneler-server.v1
          type: string
        tags:
          $ref: "#/components/schemas/tags"
      required:
      - configTypeId
      - data
      - name
      type: object
    configDetail:
      allOf:
      - $ref: "#/components/schemas/baseEntity"
      - properties:
          configType:
            $ref: "#/components/schemas/entityRef"
          configTypeId:
            type: string
          data:
            $ref: "#/components/schemas/configDetail_allOf_data"
          name:
            type: string
        required:
        - configType
        - configTypeId
        - data
        - name
        type: object
      description: A config resource
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        data: {}
        _links:
          key:
            method: method
            comment: comment
            href: https://openapi-generator.tech
        configTypeId: configTypeId
        name: name
        id: id
        configType:
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          name: name
          id: id
          entity: entity
        tags: {}
        updatedAt: 2000-01-23T04:56:07.000+00:00
    configList:
      description: An array of config resources
      items:
        $ref: "#/components/schemas/configDetail"
      type: array
    configPatch:
      description: A config patch object
      example:
        data:
          hostname: example.com
          port: 80
        name: example-config-name
      properties:
        data:
          additionalProperties: true
          description: Data payload is defined by the schema of the config-type defined
            in the type parameter
          type: object
        name:
          example: default.ziti-tunneler-server.v1
          type: string
        tags:
          $ref: "#/components/schemas/tags"
      type: object
    configTypeCreate:
      description: A config-type create object
      properties:
        name:
          example: ziti-tunneler-server.v1
          type: string
        schema:
          additionalProperties: true
          description: A JSON schema to enforce configuration against
          type: object
        tags:
          $ref: "#/components/schemas/tags"
      required:
      - name
      type: object
    configTypeDetail:
      allOf:
      - $ref: "#/components/schemas/baseEntity"
      - properties:
          name:
            example: ziti-tunneler-server.v1
            type: string
          schema:
            additionalProperties: true
            description: A JSON schema to enforce configuration against
            type: object
        required:
        - name
        - schema
        type: object
      description: A config-type resource
      example:
        schema:
          key: ""
        createdAt: 2000-01-23T04:56:07.000+00:00
        _links:
          key:
            method: method
            comment: comment
            href: https://openapi-generator.tech
        name: ziti-tunneler-server.v1
        id: id
        tags: {}
        updatedAt: 2000-01-23T04:56:07.000+00:00
    configTypeList:
      description: An array of config-type resources
      items:
        $ref: "#/components/schemas/configTypeDetail"
      type: array
    configTypePatch:
      description: A config-type patch object
      properties:
        name:
          example: ziti-tunneler-server.v1
          type: string
        schema:
          additionalProperties: true
          description: A JSON schema to enforce configuration against
          type: object
        tags:
          $ref: "#/components/schemas/tags"
      type: object
    configTypeUpdate:
      description: A config-type update object
      properties:
        name:
          example: ziti-tunneler-server.v1
          type: string
        schema:
          additionalProperties: true
          description: A JSON schema to enforce configuration against
          type: object
        tags:
          $ref: "#/components/schemas/tags"
      required:
      - name
      type: object
    configTypes:
      description: Specific configuration types that should be returned
      items:
        type: string
      type: array
    configUpdate:
      description: A config update object
      example:
        data:
          hostname: example.com
          port: 80
        name: example-config-name
      properties:
        data:
          additionalProperties: true
          description: Data payload is defined by the schema of the config-type defined
            in the type parameter
          nullable: false
          type: object
        name:
          example: default.ziti-tunneler-server.v1
          type: string
        tags:
          $ref: "#/components/schemas/tags"
      required:
      - data
      - name
      type: object
    controllerDetail:
      allOf:
      - $ref: "#/components/schemas/baseEntity"
      - properties:
          apiAddresses:
            $ref: "#/components/schemas/apiAddressList"
          certPem:
            type: string
          ctrlAddress:
            nullable: true
            type: string
          fingerprint:
            type: string
          isOnline:
            type: boolean
          lastJoinedAt:
            format: date-time
            type: string
          name:
            type: string
        required:
        - certPem
        - fingerprint
        - isOnline
        - lastJoinedAt
        - name
        type: object
      description: A controller resource
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        _links:
          key:
            method: method
            comment: comment
            href: https://openapi-generator.tech
        apiAddresses: null
        fingerprint: fingerprint
        name: name
        ctrlAddress: ctrlAddress
        certPem: certPem
        isOnline: true
        id: id
        lastJoinedAt: 2000-01-23T04:56:07.000+00:00
        tags: {}
        updatedAt: 2000-01-23T04:56:07.000+00:00
    controllerSettingCreate:
      allOf:
      - $ref: "#/components/schemas/controllerSettings"
      - properties:
          controllerId:
            type: string
          tags:
            $ref: "#/components/schemas/tags"
        required:
        - controllerId
        type: object
    controllerSettingDetail:
      allOf:
      - $ref: "#/components/schemas/baseEntity"
      - $ref: "#/components/schemas/controllerSettings"
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        _links:
          key:
            method: method
            comment: comment
            href: https://openapi-generator.tech
        id: id
        oidc:
          redirectUris:
          - redirectUris
          - redirectUris
          postLogoutUris:
          - postLogoutUris
          - postLogoutUris
        tags: {}
        updatedAt: 2000-01-23T04:56:07.000+00:00
    controllerSettingEffective:
      allOf:
      - $ref: "#/components/schemas/baseEntity"
      - properties:
          effective:
            $ref: "#/components/schemas/controllerSettings"
          instance:
            $ref: "#/components/schemas/controllerSettings"
        type: object
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        effective:
          oidc:
            redirectUris:
            - redirectUris
            - redirectUris
            postLogoutUris:
            - postLogoutUris
            - postLogoutUris
        instance:
          oidc:
            redirectUris:
            - redirectUris
            - redirectUris
            postLogoutUris:
            - postLogoutUris
            - postLogoutUris
        _links:
          key:
            method: method
            comment: comment
            href: https://openapi-generator.tech
        id: id
        tags: {}
        updatedAt: 2000-01-23T04:56:07.000+00:00
    controllerSettingPatch:
      allOf:
      - $ref: "#/components/schemas/controllerSettings"
      - properties:
          tags:
            $ref: "#/components/schemas/tags"
        type: object
    controllerSettingUpdate:
      allOf:
      - $ref: "#/components/schemas/controllerSettings"
      - properties:
          tags:
            $ref: "#/components/schemas/tags"
        type: object
    controllerSettings:
      example:
        oidc:
          redirectUris:
          - redirectUris
          - redirectUris
          postLogoutUris:
          - postLogoutUris
          - postLogoutUris
      properties:
        oidc:
          $ref: "#/components/schemas/controllerSettings_oidc"
      type: object
    controllerSettingsList:
      items:
        description: TODO default missing array inner type to string
        type: string
      type: array
    controllersList:
      description: An array of controller resources
      items:
        $ref: "#/components/schemas/controllerDetail"
      type: array
    createEnvelope:
      example:
        data:
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          id: id
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          $ref: "#/components/schemas/createLocation"
        meta:
          $ref: "#/components/schemas/meta"
      type: object
    createLocation:
      example:
        _links:
          key:
            method: method
            comment: comment
            href: https://openapi-generator.tech
        id: id
      properties:
        _links:
          additionalProperties:
            $ref: "#/components/schemas/link"
          description: A map of named links
          type: object
          x-omitempty: false
        id:
          type: string
      type: object
    currentApiSessionDetail:
      allOf:
      - $ref: "#/components/schemas/apiSessionDetail"
      - properties:
          expirationSeconds:
            type: integer
          expiresAt:
            format: date-time
            type: string
        required:
        - expirationSeconds
        - expiresAt
        type: object
      description: An API Session object for the current API session
      example:
        _links:
          key:
            method: method
            comment: comment
            href: https://openapi-generator.tech
        configTypes:
        - configTypes
        - configTypes
        authQueries:
        - clientId: clientId
          provider: ziti
          httpUrl: httpUrl
          minLength: 6
          format: numeric
          typeId: MFA
          id: id
          scopes:
          - scopes
          - scopes
          httpMethod: httpMethod
          maxLength: 0
        - clientId: clientId
          provider: ziti
          httpUrl: httpUrl
          minLength: 6
          format: numeric
          typeId: MFA
          id: id
          scopes:
          - scopes
          - scopes
          httpMethod: httpMethod
          maxLength: 0
        expirationSeconds: 0
        ipAddress: ipAddress
        lastActivityAt: 2000-01-23T04:56:07.000+00:00
        isMfaRequired: true
        expiresAt: 2000-01-23T04:56:07.000+00:00
        tags: {}
        token: token
        createdAt: 2000-01-23T04:56:07.000+00:00
        isMfaComplete: true
        cachedLastActivityAt: 2000-01-23T04:56:07.000+00:00
        identity:
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          name: name
          id: id
          entity: entity
        identityId: identityId
        authenticatorId: authenticatorId
        id: id
        isCertExtendable: true
        updatedAt: 2000-01-23T04:56:07.000+00:00
    currentApiSessionDetailEnvelope:
      example:
        data:
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          configTypes:
          - configTypes
          - configTypes
          authQueries:
          - clientId: clientId
            provider: ziti
            httpUrl: httpUrl
            minLength: 6
            format: numeric
            typeId: MFA
            id: id
            scopes:
            - scopes
            - scopes
            httpMethod: httpMethod
            maxLength: 0
          - clientId: clientId
            provider: ziti
            httpUrl: httpUrl
            minLength: 6
            format: numeric
            typeId: MFA
            id: id
            scopes:
            - scopes
            - scopes
            httpMethod: httpMethod
            maxLength: 0
          expirationSeconds: 0
          ipAddress: ipAddress
          lastActivityAt: 2000-01-23T04:56:07.000+00:00
          isMfaRequired: true
          expiresAt: 2000-01-23T04:56:07.000+00:00
          tags: {}
          token: token
          createdAt: 2000-01-23T04:56:07.000+00:00
          isMfaComplete: true
          cachedLastActivityAt: 2000-01-23T04:56:07.000+00:00
          identity:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          identityId: identityId
          authenticatorId: authenticatorId
          id: id
          isCertExtendable: true
          updatedAt: 2000-01-23T04:56:07.000+00:00
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          $ref: "#/components/schemas/currentApiSessionDetail"
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    currentIdentityDetailEnvelope:
      example:
        data:
          defaultHostingPrecedence: default
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          authPolicy:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          authenticators:
            cert:
              fingerprint: fingerprint
              id: id
            updb:
              id: id
              username: username
          type:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          isMfaEnabled: true
          appData: {}
          disabledAt: 2000-01-23T04:56:07.000+00:00
          createdAt: 2000-01-23T04:56:07.000+00:00
          roleAttributes:
          - null
          - null
          edgeRouterConnectionStatus: online
          hasEdgeRouterConnection: true
          serviceHostingPrecedences: null
          envInfo:
            hostname: hostname
            os: os
            osVersion: osVersion
            domain: domain
            arch: arch
            osRelease: osRelease
          hasApiSession: true
          disabled: true
          id: id
          updatedAt: 2000-01-23T04:56:07.000+00:00
          sdkInfo:
            appVersion: appVersion
            appId: appId
            type: type
            branch: branch
            version: version
            revision: revision
          defaultHostingCost: null
          authPolicyId: authPolicyId
          externalId: externalId
          disabledUntil: 2000-01-23T04:56:07.000+00:00
          isAdmin: true
          tags: {}
          enrollment:
            ott:
              jwt: jwt
              id: id
              expiresAt: 2000-01-23T04:56:07.000+00:00
              token: token
            ottca:
              jwt: jwt
              caId: caId
              id: id
              ca:
                _links:
                  key:
                    method: method
                    comment: comment
                    href: https://openapi-generator.tech
                name: name
                id: id
                entity: entity
              expiresAt: 2000-01-23T04:56:07.000+00:00
              token: token
            updb:
              jwt: jwt
              id: id
              expiresAt: 2000-01-23T04:56:07.000+00:00
              token: token
          isDefaultAdmin: true
          name: name
          typeId: typeId
          serviceHostingCosts: null
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          $ref: "#/components/schemas/identityDetail"
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    dataIntegrityCheckDetail:
      example:
        description: description
        fixed: true
      properties:
        description:
          type: string
        fixed:
          type: boolean
      required:
      - description
      - fixed
      type: object
    dataIntegrityCheckDetailList:
      items:
        $ref: "#/components/schemas/dataIntegrityCheckDetail"
      type: array
    dataIntegrityCheckDetails:
      example:
        inProgress: true
        fixingErrors: true
        startTime: 2000-01-23T04:56:07.000+00:00
        endTime: 2000-01-23T04:56:07.000+00:00
        error: error
        results:
        - description: description
          fixed: true
        - description: description
          fixed: true
        tooManyErrors: true
      properties:
        endTime:
          format: date-time
          type: string
        error:
          type: string
        fixingErrors:
          type: boolean
        inProgress:
          type: boolean
        results:
          items:
            $ref: "#/components/schemas/dataIntegrityCheckDetail"
          type: array
        startTime:
          format: date-time
          type: string
        tooManyErrors:
          type: boolean
      required:
      - endTime
      - error
      - fixingErrors
      - inProgress
      - results
      - startTime
      - tooManyErrors
      type: object
    dataIntegrityCheckResultEnvelope:
      example:
        data:
          inProgress: true
          fixingErrors: true
          startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
          error: error
          results:
          - description: description
            fixed: true
          - description: description
            fixed: true
          tooManyErrors: true
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          $ref: "#/components/schemas/dataIntegrityCheckDetails"
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    detailApiSessionEnvelope:
      example:
        data:
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          configTypes:
          - configTypes
          - configTypes
          authQueries:
          - clientId: clientId
            provider: ziti
            httpUrl: httpUrl
            minLength: 6
            format: numeric
            typeId: MFA
            id: id
            scopes:
            - scopes
            - scopes
            httpMethod: httpMethod
            maxLength: 0
          - clientId: clientId
            provider: ziti
            httpUrl: httpUrl
            minLength: 6
            format: numeric
            typeId: MFA
            id: id
            scopes:
            - scopes
            - scopes
            httpMethod: httpMethod
            maxLength: 0
          ipAddress: ipAddress
          lastActivityAt: 2000-01-23T04:56:07.000+00:00
          isMfaRequired: true
          tags: {}
          token: token
          createdAt: 2000-01-23T04:56:07.000+00:00
          isMfaComplete: true
          cachedLastActivityAt: 2000-01-23T04:56:07.000+00:00
          identity:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          identityId: identityId
          authenticatorId: authenticatorId
          id: id
          isCertExtendable: true
          updatedAt: 2000-01-23T04:56:07.000+00:00
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          $ref: "#/components/schemas/apiSessionDetail"
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    detailAuthPolicyEnvelope:
      example:
        data:
          secondary:
            requireExtJwtSigner: requireExtJwtSigner
            requireTotp: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          name: name
          id: id
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
          primary:
            cert:
              allowExpiredCerts: true
              allowed: true
            extJwt:
              allowedSigners:
              - allowedSigners
              - allowedSigners
              allowed: true
            updb:
              maxAttempts: 6
              requireNumberChar: true
              requireMixedCase: true
              requireSpecialChar: true
              allowed: true
              minPasswordLength: 1
              lockoutDurationMinutes: 0
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          $ref: "#/components/schemas/authPolicyDetail"
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    detailAuthenticatorEnvelope:
      example:
        data:
          createdAt: 2000-01-23T04:56:07.000+00:00
          method: method
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          identity:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          identityId: identityId
          fingerprint: fingerprint
          certPem: certPem
          id: id
          isIssuedByNetwork: true
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
          username: username
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          $ref: "#/components/schemas/authenticatorDetail"
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    detailCaEnvelope:
      example:
        data:
          identityNameFormat: identityNameFormat
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          isVerified: false
          externalIdClaim:
            parserCriteria: parserCriteria
            parser: NONE
            matcherCriteria: matcherCriteria
            index: 0
            location: COMMON_NAME
            matcher: ALL
          verificationToken: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isOttCaEnrollmentEnabled: true
          certPem: certPem
          tags: {}
          createdAt: 2000-01-23T04:56:07.000+00:00
          identityRoles:
          - null
          - null
          isAutoCaEnrollmentEnabled: true
          fingerprint: fingerprint
          name: name
          id: id
          isAuthEnabled: true
          updatedAt: 2000-01-23T04:56:07.000+00:00
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          $ref: "#/components/schemas/caDetail"
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    detailConfigEnvelope:
      example:
        data:
          createdAt: 2000-01-23T04:56:07.000+00:00
          data: {}
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          configTypeId: configTypeId
          name: name
          id: id
          configType:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          $ref: "#/components/schemas/configDetail"
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    detailConfigTypeEnvelope:
      example:
        data:
          schema:
            key: ""
          createdAt: 2000-01-23T04:56:07.000+00:00
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          name: ziti-tunneler-server.v1
          id: id
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          $ref: "#/components/schemas/configTypeDetail"
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    detailControllerSettingEffectiveEnvelope:
      example:
        data:
          createdAt: 2000-01-23T04:56:07.000+00:00
          effective:
            oidc:
              redirectUris:
              - redirectUris
              - redirectUris
              postLogoutUris:
              - postLogoutUris
              - postLogoutUris
          instance:
            oidc:
              redirectUris:
              - redirectUris
              - redirectUris
              postLogoutUris:
              - postLogoutUris
              - postLogoutUris
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          id: id
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          $ref: "#/components/schemas/controllerSettingEffective"
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    detailControllerSettingEnvelope:
      example:
        data:
          createdAt: 2000-01-23T04:56:07.000+00:00
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          id: id
          oidc:
            redirectUris:
            - redirectUris
            - redirectUris
            postLogoutUris:
            - postLogoutUris
            - postLogoutUris
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          $ref: "#/components/schemas/controllerSettingDetail"
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    detailEdgeRouterPolicyEnvelope:
      example:
        data:
          isSystem: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          edgeRouterRolesDisplay:
          - role: role
            name: name
          - role: role
            name: name
          semantic: AllOf
          identityRoles: null
          identityRolesDisplay: null
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          edgeRouterRoles:
          - null
          - null
          name: name
          id: id
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          $ref: "#/components/schemas/edgeRouterPolicyDetail"
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    detailEnrollmentEnvelope:
      example:
        data:
          transitRouter:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          transitRouterId: transitRouterId
          edgeRouterId: edgeRouterId
          method: method
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          edgeRouter:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          jwt: jwt
          expiresAt: 2000-01-23T04:56:07.000+00:00
          tags: {}
          token: token
          createdAt: 2000-01-23T04:56:07.000+00:00
          identity:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          identityId: identityId
          caId: caId
          id: id
          updatedAt: 2000-01-23T04:56:07.000+00:00
          username: username
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          $ref: "#/components/schemas/enrollmentDetail"
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    detailExternalJwtSignerEnvelope:
      example:
        data:
          commonName: commonName
          audience: audience
          notAfter: 2000-01-23T04:56:07.000+00:00
          clientId: clientId
          externalAuthUrl: http://example.com/aeiou
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          jwksEndpoint: https://openapi-generator.tech
          useExternalId: true
          kid: kid
          certPem: certPem
          targetToken: ACCESS
          enabled: true
          issuer: issuer
          notBefore: 2000-01-23T04:56:07.000+00:00
          tags: {}
          createdAt: 2000-01-23T04:56:07.000+00:00
          fingerprint: fingerprint
          name: MyApps Signer
          id: id
          scopes:
          - scopes
          - scopes
          updatedAt: 2000-01-23T04:56:07.000+00:00
          claimsProperty: claimsProperty
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          $ref: "#/components/schemas/externalJwtSignerDetail"
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    detailIdentityEnvelope:
      example:
        data:
          defaultHostingPrecedence: default
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          authPolicy:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          authenticators:
            cert:
              fingerprint: fingerprint
              id: id
            updb:
              id: id
              username: username
          type:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          isMfaEnabled: true
          appData: {}
          disabledAt: 2000-01-23T04:56:07.000+00:00
          createdAt: 2000-01-23T04:56:07.000+00:00
          roleAttributes:
          - null
          - null
          edgeRouterConnectionStatus: online
          hasEdgeRouterConnection: true
          serviceHostingPrecedences: null
          envInfo:
            hostname: hostname
            os: os
            osVersion: osVersion
            domain: domain
            arch: arch
            osRelease: osRelease
          hasApiSession: true
          disabled: true
          id: id
          updatedAt: 2000-01-23T04:56:07.000+00:00
          sdkInfo:
            appVersion: appVersion
            appId: appId
            type: type
            branch: branch
            version: version
            revision: revision
          defaultHostingCost: null
          authPolicyId: authPolicyId
          externalId: externalId
          disabledUntil: 2000-01-23T04:56:07.000+00:00
          isAdmin: true
          tags: {}
          enrollment:
            ott:
              jwt: jwt
              id: id
              expiresAt: 2000-01-23T04:56:07.000+00:00
              token: token
            ottca:
              jwt: jwt
              caId: caId
              id: id
              ca:
                _links:
                  key:
                    method: method
                    comment: comment
                    href: https://openapi-generator.tech
                name: name
                id: id
                entity: entity
              expiresAt: 2000-01-23T04:56:07.000+00:00
              token: token
            updb:
              jwt: jwt
              id: id
              expiresAt: 2000-01-23T04:56:07.000+00:00
              token: token
          isDefaultAdmin: true
          name: name
          typeId: typeId
          serviceHostingCosts: null
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          $ref: "#/components/schemas/identityDetail"
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    detailIdentityTypeEnvelope:
      example:
        data:
          createdAt: 2000-01-23T04:56:07.000+00:00
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          name: name
          id: id
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          $ref: "#/components/schemas/identityTypeDetail"
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    detailMfa:
      allOf:
      - $ref: "#/components/schemas/baseEntity"
      - properties:
          isVerified:
            type: boolean
          provisioningUrl:
            description: Not provided if MFA verification has been completed
            type: string
          recoveryCodes:
            description: Not provided if MFA verification has been completed
            items:
              type: string
            type: array
        required:
        - isVerified
        type: object
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        _links:
          key:
            method: method
            comment: comment
            href: https://openapi-generator.tech
        isVerified: true
        provisioningUrl: provisioningUrl
        id: id
        recoveryCodes:
        - recoveryCodes
        - recoveryCodes
        tags: {}
        updatedAt: 2000-01-23T04:56:07.000+00:00
    detailMfaEnvelope:
      example:
        data:
          createdAt: 2000-01-23T04:56:07.000+00:00
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          isVerified: true
          provisioningUrl: provisioningUrl
          id: id
          recoveryCodes:
          - recoveryCodes
          - recoveryCodes
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          $ref: "#/components/schemas/detailMfa"
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    detailMfaRecoveryCodes:
      allOf:
      - $ref: "#/components/schemas/baseEntity"
      - properties:
          recoveryCodes:
            items:
              type: string
            type: array
        required:
        - recoveryCodes
        type: object
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        _links:
          key:
            method: method
            comment: comment
            href: https://openapi-generator.tech
        id: id
        recoveryCodes:
        - recoveryCodes
        - recoveryCodes
        tags: {}
        updatedAt: 2000-01-23T04:56:07.000+00:00
    detailMfaRecoveryCodesEnvelope:
      example:
        data:
          createdAt: 2000-01-23T04:56:07.000+00:00
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          id: id
          recoveryCodes:
          - recoveryCodes
          - recoveryCodes
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          $ref: "#/components/schemas/detailMfaRecoveryCodes"
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    detailPostureCheckEnvelope:
      example:
        data:
          createdAt: 2000-01-23T04:56:07.000+00:00
          roleAttributes:
          - roleAttributes
          - roleAttributes
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          name: name
          typeId: typeId
          id: id
          version: 0
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          $ref: "#/components/schemas/postureCheckDetail"
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    detailPostureCheckTypeEnvelope:
      example:
        data:
          createdAt: 2000-01-23T04:56:07.000+00:00
          operatingSystems:
          - versions:
            - versions
            - versions
            type: Windows
          - versions:
            - versions
            - versions
            type: Windows
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          name: name
          id: id
          version: version
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          $ref: "#/components/schemas/postureCheckTypeDetail"
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    detailRouterEnvelope:
      example:
        data:
          unverifiedFingerprint: unverifiedFingerprint
          enrollmentCreatedAt: 2000-01-23T04:56:07.000+00:00
          cost: 5248
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          isVerified: true
          unverifiedCertPem: unverifiedCertPem
          noTraversal: true
          isOnline: true
          tags: {}
          createdAt: 2000-01-23T04:56:07.000+00:00
          enrollmentToken: enrollmentToken
          enrollmentExpiresAt: 2000-01-23T04:56:07.000+00:00
          fingerprint: fingerprint
          name: name
          disabled: true
          id: id
          enrollmentJwt: enrollmentJwt
          updatedAt: 2000-01-23T04:56:07.000+00:00
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          $ref: "#/components/schemas/routerDetail"
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    detailServiceEdgePolicyEnvelope:
      example:
        data:
          createdAt: 2000-01-23T04:56:07.000+00:00
          edgeRouterRolesDisplay:
          - role: role
            name: name
          - role: role
            name: name
          semantic: AllOf
          serviceRoles: null
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          serviceRolesDisplay: null
          edgeRouterRoles:
          - null
          - null
          name: name
          id: id
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          $ref: "#/components/schemas/serviceEdgeRouterPolicyDetail"
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    detailServiceEnvelope:
      example:
        data:
          maxIdleTimeMillis: 0
          configs:
          - configs
          - configs
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          encryptionRequired: true
          terminatorStrategy: terminatorStrategy
          tags: {}
          createdAt: 2000-01-23T04:56:07.000+00:00
          roleAttributes:
          - null
          - null
          postureQueries:
          - policyId: policyId
            postureQueries:
            - timeoutRemaining: 1
              createdAt: 2000-01-23T04:56:07.000+00:00
              process:
                path: path
                osType: Windows
              processes:
              - path: path
                osType: Windows
              - path: path
                osType: Windows
              _links:
                key:
                  method: method
                  comment: comment
                  href: https://openapi-generator.tech
              id: id
              isPassing: true
              timeout: 6
              tags: {}
              updatedAt: 2000-01-23T04:56:07.000+00:00
              queryType: OS
            - timeoutRemaining: 1
              createdAt: 2000-01-23T04:56:07.000+00:00
              process:
                path: path
                osType: Windows
              processes:
              - path: path
                osType: Windows
              - path: path
                osType: Windows
              _links:
                key:
                  method: method
                  comment: comment
                  href: https://openapi-generator.tech
              id: id
              isPassing: true
              timeout: 6
              tags: {}
              updatedAt: 2000-01-23T04:56:07.000+00:00
              queryType: OS
            policyType: null
            isPassing: true
          - policyId: policyId
            postureQueries:
            - timeoutRemaining: 1
              createdAt: 2000-01-23T04:56:07.000+00:00
              process:
                path: path
                osType: Windows
              processes:
              - path: path
                osType: Windows
              - path: path
                osType: Windows
              _links:
                key:
                  method: method
                  comment: comment
                  href: https://openapi-generator.tech
              id: id
              isPassing: true
              timeout: 6
              tags: {}
              updatedAt: 2000-01-23T04:56:07.000+00:00
              queryType: OS
            - timeoutRemaining: 1
              createdAt: 2000-01-23T04:56:07.000+00:00
              process:
                path: path
                osType: Windows
              processes:
              - path: path
                osType: Windows
              - path: path
                osType: Windows
              _links:
                key:
                  method: method
                  comment: comment
                  href: https://openapi-generator.tech
              id: id
              isPassing: true
              timeout: 6
              tags: {}
              updatedAt: 2000-01-23T04:56:07.000+00:00
              queryType: OS
            policyType: null
            isPassing: true
          permissions:
          - Dial
          - Dial
          name: name
          id: id
          config:
            key:
              key: "{}"
          updatedAt: 2000-01-23T04:56:07.000+00:00
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          $ref: "#/components/schemas/serviceDetail"
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    detailServicePolicyEnvelop:
      example:
        data:
          semantic: AllOf
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          serviceRolesDisplay: null
          type: Dial
          tags: {}
          createdAt: 2000-01-23T04:56:07.000+00:00
          postureCheckRoles: null
          identityRoles:
          - null
          - null
          identityRolesDisplay:
          - role: role
            name: name
          - role: role
            name: name
          serviceRoles: null
          name: name
          id: id
          postureCheckRolesDisplay: null
          updatedAt: 2000-01-23T04:56:07.000+00:00
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          $ref: "#/components/schemas/servicePolicyDetail"
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    detailSessionManagementEnvelope:
      example:
        data:
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          type: Dial
          tags: {}
          token: token
          createdAt: 2000-01-23T04:56:07.000+00:00
          apiSession:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          edgeRouters:
          - hostname: hostname
            urls:
              key: urls
            cost: 5248
            name: name
            noTraversal: true
            disabled: true
            isOnline: true
            supportedProtocols:
              key: supportedProtocols
            appData: {}
            syncStatus: syncStatus
          - hostname: hostname
            urls:
              key: urls
            cost: 5248
            name: name
            noTraversal: true
            disabled: true
            isOnline: true
            supportedProtocols:
              key: supportedProtocols
            appData: {}
            syncStatus: syncStatus
          identityId: identityId
          service:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          servicePolicies:
          - _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          - _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          id: id
          serviceId: serviceId
          apiSessionId: apiSessionId
          updatedAt: 2000-01-23T04:56:07.000+00:00
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          $ref: "#/components/schemas/sessionManagementDetail"
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    detailSessionRoutePathEnvelope:
      example:
        data:
          routePath:
          - routePath
          - routePath
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          $ref: "#/components/schemas/sessionRoutePathDetail"
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    detailSpecBodyEnvelope:
      example:
        data: data
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          type: string
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    detailSpecEnvelope:
      example:
        data:
          createdAt: 2000-01-23T04:56:07.000+00:00
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          name: name
          id: id
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          $ref: "#/components/schemas/specDetail"
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    detailTerminatorEnvelope:
      example:
        data:
          dynamicCost: null
          address: address
          cost: null
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          binding: binding
          precedence: default
          tags: {}
          createdAt: 2000-01-23T04:56:07.000+00:00
          router:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          identity: identity
          routerId: routerId
          service:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          id: id
          serviceId: serviceId
          updatedAt: 2000-01-23T04:56:07.000+00:00
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          $ref: "#/components/schemas/terminatorDetail"
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    detailedEdgeRouterEnvelope:
      example:
        data:
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          isVerified: true
          unverifiedCertPem: unverifiedCertPem
          noTraversal: true
          isOnline: true
          certPem: certPem
          appData: {}
          createdAt: 2000-01-23T04:56:07.000+00:00
          hostname: hostname
          roleAttributes:
          - null
          - null
          enrollmentExpiresAt: 2000-01-23T04:56:07.000+00:00
          isTunnelerEnabled: true
          fingerprint: fingerprint
          disabled: true
          id: id
          enrollmentJwt: enrollmentJwt
          updatedAt: 2000-01-23T04:56:07.000+00:00
          unverifiedFingerprint: unverifiedFingerprint
          enrollmentCreatedAt: 2000-01-23T04:56:07.000+00:00
          cost: 5248
          versionInfo:
            os: os
            arch: arch
            buildDate: buildDate
            version: version
            revision: revision
          supportedProtocols:
            key: supportedProtocols
          tags: {}
          enrollmentToken: enrollmentToken
          name: name
          syncStatus: syncStatus
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          $ref: "#/components/schemas/edgeRouterDetail"
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    dialBind:
      enum:
      - Dial
      - Bind
      - Invalid
      type: string
    dialBindArray:
      items:
        $ref: "#/components/schemas/dialBind"
      type: array
    disableParams:
      properties:
        durationMinutes:
          type: integer
      required:
      - durationMinutes
      type: object
    edgeRouterCreate:
      description: An edge router create object
      properties:
        appData:
          $ref: "#/components/schemas/tags"
        cost:
          maximum: 65535
          minimum: 0
          nullable: true
          type: integer
        disabled:
          nullable: true
          type: boolean
        isTunnelerEnabled:
          type: boolean
        name:
          type: string
        noTraversal:
          nullable: true
          type: boolean
        roleAttributes:
          description: A set of strings used to loosly couple this resource to policies
          items:
            type: string
          nullable: true
          type: array
          x-nullable: true
          x-omitempty: true
        tags:
          $ref: "#/components/schemas/tags"
      required:
      - name
      type: object
    edgeRouterDetail:
      allOf:
      - $ref: "#/components/schemas/baseEntity"
      - $ref: "#/components/schemas/commonEdgeRouterProperties"
      - properties:
          certPem:
            nullable: true
            type: string
            x-omitempty: false
          enrollmentCreatedAt:
            format: date-time
            nullable: true
            type: string
          enrollmentExpiresAt:
            format: date-time
            nullable: true
            type: string
          enrollmentJwt:
            nullable: true
            type: string
          enrollmentToken:
            nullable: true
            type: string
          fingerprint:
            type: string
          isTunnelerEnabled:
            type: boolean
          isVerified:
            type: boolean
          roleAttributes:
            $ref: "#/components/schemas/attributes"
          unverifiedCertPem:
            nullable: true
            type: string
            x-omitempty: false
          unverifiedFingerprint:
            nullable: true
            type: string
            x-omitempty: false
          versionInfo:
            $ref: "#/components/schemas/versionInfo"
        required:
        - isTunnelerEnabled
        - isVerified
        - roleAttributes
        type: object
      description: A detail edge router resource
      example:
        _links:
          key:
            method: method
            comment: comment
            href: https://openapi-generator.tech
        isVerified: true
        unverifiedCertPem: unverifiedCertPem
        noTraversal: true
        isOnline: true
        certPem: certPem
        appData: {}
        createdAt: 2000-01-23T04:56:07.000+00:00
        hostname: hostname
        roleAttributes:
        - null
        - null
        enrollmentExpiresAt: 2000-01-23T04:56:07.000+00:00
        isTunnelerEnabled: true
        fingerprint: fingerprint
        disabled: true
        id: id
        enrollmentJwt: enrollmentJwt
        updatedAt: 2000-01-23T04:56:07.000+00:00
        unverifiedFingerprint: unverifiedFingerprint
        enrollmentCreatedAt: 2000-01-23T04:56:07.000+00:00
        cost: 5248
        versionInfo:
          os: os
          arch: arch
          buildDate: buildDate
          version: version
          revision: revision
        supportedProtocols:
          key: supportedProtocols
        tags: {}
        enrollmentToken: enrollmentToken
        name: name
        syncStatus: syncStatus
    edgeRouterList:
      description: A list of edge router resources
      items:
        $ref: "#/components/schemas/edgeRouterDetail"
      type: array
    edgeRouterPatch:
      description: An edge router patch object
      properties:
        appData:
          $ref: "#/components/schemas/tags"
        cost:
          maximum: 65535
          minimum: 0
          nullable: true
          type: integer
        disabled:
          nullable: true
          type: boolean
        isTunnelerEnabled:
          type: boolean
        name:
          nullable: true
          type: string
        noTraversal:
          nullable: true
          type: boolean
        roleAttributes:
          description: A set of strings used to loosly couple this resource to policies
          items:
            type: string
          nullable: true
          type: array
          x-nullable: true
          x-omitempty: true
        tags:
          $ref: "#/components/schemas/tags"
      type: object
    edgeRouterPolicyCreate:
      properties:
        edgeRouterRoles:
          items:
            type: string
          type: array
          x-omitempty: false
        identityRoles:
          items:
            type: string
          type: array
          x-omitempty: false
        name:
          type: string
        semantic:
          $ref: "#/components/schemas/semantic"
        tags:
          $ref: "#/components/schemas/tags"
      required:
      - name
      - semantic
      type: object
    edgeRouterPolicyDetail:
      allOf:
      - $ref: "#/components/schemas/baseEntity"
      - properties:
          edgeRouterRoles:
            $ref: "#/components/schemas/roles"
          edgeRouterRolesDisplay:
            $ref: "#/components/schemas/namedRoles"
          identityRoles:
            $ref: "#/components/schemas/roles"
          identityRolesDisplay:
            $ref: "#/components/schemas/namedRoles"
          isSystem:
            type: boolean
          name:
            type: string
          semantic:
            $ref: "#/components/schemas/semantic"
        required:
        - edgeRouterRoles
        - edgeRouterRolesDisplay
        - identityRoles
        - identityRolesDisplay
        - isSystem
        - name
        - semantic
        type: object
      example:
        isSystem: true
        createdAt: 2000-01-23T04:56:07.000+00:00
        edgeRouterRolesDisplay:
        - role: role
          name: name
        - role: role
          name: name
        semantic: AllOf
        identityRoles: null
        identityRolesDisplay: null
        _links:
          key:
            method: method
            comment: comment
            href: https://openapi-generator.tech
        edgeRouterRoles:
        - null
        - null
        name: name
        id: id
        tags: {}
        updatedAt: 2000-01-23T04:56:07.000+00:00
    edgeRouterPolicyList:
      items:
        $ref: "#/components/schemas/edgeRouterPolicyDetail"
      type: array
    edgeRouterPolicyPatch:
      properties:
        edgeRouterRoles:
          items:
            type: string
          type: array
          x-omitempty: false
        identityRoles:
          items:
            type: string
          type: array
          x-omitempty: false
        name:
          type: string
        semantic:
          $ref: "#/components/schemas/semantic"
        tags:
          $ref: "#/components/schemas/tags"
      type: object
    edgeRouterPolicyUpdate:
      properties:
        edgeRouterRoles:
          items:
            type: string
          type: array
          x-omitempty: false
        identityRoles:
          items:
            type: string
          type: array
          x-omitempty: false
        name:
          type: string
        semantic:
          $ref: "#/components/schemas/semantic"
        tags:
          $ref: "#/components/schemas/tags"
      required:
      - name
      - semantic
      type: object
    edgeRouterUpdate:
      description: An edge router update object
      properties:
        appData:
          $ref: "#/components/schemas/tags"
        cost:
          maximum: 65535
          minimum: 0
          nullable: true
          type: integer
        disabled:
          nullable: true
          type: boolean
        isTunnelerEnabled:
          type: boolean
        name:
          type: string
        noTraversal:
          nullable: true
          type: boolean
        roleAttributes:
          description: A set of strings used to loosly couple this resource to policies
          items:
            type: string
          nullable: true
          type: array
          x-nullable: true
          x-omitempty: true
        tags:
          $ref: "#/components/schemas/tags"
      required:
      - name
      type: object
    empty:
      example:
        data: {}
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          example: {}
          properties: {}
          type: object
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    enrollmentCreate:
      properties:
        caId:
          nullable: true
          type: string
        expiresAt:
          format: date-time
          type: string
        identityId:
          type: string
        method:
          enum:
          - ott
          - ottca
          - updb
          type: string
        username:
          nullable: true
          type: string
      required:
      - expiresAt
      - identityId
      - method
      type: object
    enrollmentDetail:
      allOf:
      - $ref: "#/components/schemas/baseEntity"
      - properties:
          caId:
            nullable: true
            type: string
          edgeRouter:
            $ref: "#/components/schemas/entityRef"
          edgeRouterId:
            type: string
          expiresAt:
            format: date-time
            type: string
          identity:
            $ref: "#/components/schemas/entityRef"
          identityId:
            type: string
          jwt:
            type: string
          method:
            type: string
          token:
            type: string
          transitRouter:
            $ref: "#/components/schemas/entityRef"
          transitRouterId:
            type: string
          username:
            type: string
        required:
        - expiresAt
        - method
        - token
        type: object
      description: |
        An enrollment object. Enrollments are tied to identities and potentially a CA. Depending on the
        method, different fields are utilized. For example ottca enrollments use the `ca` field and updb enrollments
        use the username field, but not vice versa.
      example:
        transitRouter:
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          name: name
          id: id
          entity: entity
        transitRouterId: transitRouterId
        edgeRouterId: edgeRouterId
        method: method
        _links:
          key:
            method: method
            comment: comment
            href: https://openapi-generator.tech
        edgeRouter:
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          name: name
          id: id
          entity: entity
        jwt: jwt
        expiresAt: 2000-01-23T04:56:07.000+00:00
        tags: {}
        token: token
        createdAt: 2000-01-23T04:56:07.000+00:00
        identity:
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          name: name
          id: id
          entity: entity
        identityId: identityId
        caId: caId
        id: id
        updatedAt: 2000-01-23T04:56:07.000+00:00
        username: username
    enrollmentList:
      description: An array of enrollment resources
      items:
        $ref: "#/components/schemas/enrollmentDetail"
      type: array
    enrollmentRefresh:
      properties:
        expiresAt:
          format: date-time
          type: string
      required:
      - expiresAt
      type: object
    entityRef:
      description: A reference to another resource and links to interact with it
      example:
        _links:
          key:
            method: method
            comment: comment
            href: https://openapi-generator.tech
        name: name
        id: id
        entity: entity
      properties:
        _links:
          additionalProperties:
            $ref: "#/components/schemas/link"
          description: A map of named links
          type: object
          x-omitempty: false
        entity:
          type: string
        id:
          type: string
        name:
          type: string
      type: object
    envInfo:
      description: Environment information an authenticating client may provide
      example:
        hostname: hostname
        os: os
        osVersion: osVersion
        domain: domain
        arch: arch
        osRelease: osRelease
      properties:
        arch:
          maxLength: 255
          type: string
        domain:
          maxLength: 253
          type: string
        hostname:
          maxLength: 253
          type: string
        os:
          maxLength: 255
          type: string
        osRelease:
          maxLength: 255
          type: string
        osVersion:
          maxLength: 255
          type: string
      type: object
    externalIdClaim:
      example:
        parserCriteria: parserCriteria
        parser: NONE
        matcherCriteria: matcherCriteria
        index: 0
        location: COMMON_NAME
        matcher: ALL
      properties:
        index:
          nullable: true
          type: integer
        location:
          enum:
          - COMMON_NAME
          - SAN_URI
          - SAN_EMAIL
          nullable: true
          type: string
        matcher:
          enum:
          - ALL
          - PREFIX
          - SUFFIX
          - SCHEME
          nullable: true
          type: string
        matcherCriteria:
          nullable: true
          type: string
        parser:
          enum:
          - NONE
          - SPLIT
          nullable: true
          type: string
        parserCriteria:
          nullable: true
          type: string
      required:
      - index
      - location
      - matcher
      - matcherCriteria
      - parser
      - parserCriteria
      type: object
    externalIdClaimPatch:
      properties:
        index:
          nullable: true
          type: integer
        location:
          enum:
          - COMMON_NAME
          - SAN_URI
          - SAN_EMAIL
          nullable: true
          type: string
        matcher:
          enum:
          - ALL
          - PREFIX
          - SUFFIX
          - SCHEME
          nullable: true
          type: string
        matcherCriteria:
          nullable: true
          type: string
        parser:
          enum:
          - NONE
          - SPLIT
          nullable: true
          type: string
        parserCriteria:
          nullable: true
          type: string
      type: object
    externalJwtSignerCreate:
      description: A create Certificate Authority (CA) object
      properties:
        audience:
          nullable: true
          type: string
        certPem:
          nullable: true
          type: string
        claimsProperty:
          nullable: true
          type: string
        clientId:
          nullable: true
          type: string
        enabled:
          type: boolean
        externalAuthUrl:
          format: url
          nullable: true
          type: string
        issuer:
          type: string
        jwksEndpoint:
          format: uri
          nullable: true
          type: string
        kid:
          nullable: true
          type: string
        name:
          example: MyApps Signer
          type: string
        scopes:
          items:
            type: string
          nullable: true
          type: array
        tags:
          $ref: "#/components/schemas/tags"
        targetToken:
          $ref: "#/components/schemas/targetToken"
        useExternalId:
          nullable: true
          type: boolean
      required:
      - audience
      - enabled
      - issuer
      - name
      type: object
    externalJwtSignerDetail:
      allOf:
      - $ref: "#/components/schemas/baseEntity"
      - properties:
          audience:
            type: string
          certPem:
            nullable: true
            type: string
          claimsProperty:
            type: string
          clientId:
            type: string
          commonName:
            type: string
          enabled:
            type: boolean
          externalAuthUrl:
            format: url
            type: string
          fingerprint:
            type: string
          issuer:
            type: string
          jwksEndpoint:
            format: uri
            nullable: true
            type: string
          kid:
            type: string
          name:
            example: MyApps Signer
            type: string
          notAfter:
            format: date-time
            type: string
          notBefore:
            format: date-time
            type: string
          scopes:
            items:
              type: string
            type: array
          targetToken:
            $ref: "#/components/schemas/targetToken"
          useExternalId:
            type: boolean
        required:
        - audience
        - certPem
        - claimsProperty
        - clientId
        - commonName
        - enabled
        - externalAuthUrl
        - fingerprint
        - issuer
        - jwksEndpoint
        - kid
        - name
        - notAfter
        - notBefore
        - scopes
        - targetToken
        - useExternalId
        type: object
      description: A External JWT Signer resource
      example:
        commonName: commonName
        audience: audience
        notAfter: 2000-01-23T04:56:07.000+00:00
        clientId: clientId
        externalAuthUrl: http://example.com/aeiou
        _links:
          key:
            method: method
            comment: comment
            href: https://openapi-generator.tech
        jwksEndpoint: https://openapi-generator.tech
        useExternalId: true
        kid: kid
        certPem: certPem
        targetToken: ACCESS
        enabled: true
        issuer: issuer
        notBefore: 2000-01-23T04:56:07.000+00:00
        tags: {}
        createdAt: 2000-01-23T04:56:07.000+00:00
        fingerprint: fingerprint
        name: MyApps Signer
        id: id
        scopes:
        - scopes
        - scopes
        updatedAt: 2000-01-23T04:56:07.000+00:00
        claimsProperty: claimsProperty
    externalJwtSignerList:
      description: An array of External JWT Signers resources
      items:
        $ref: "#/components/schemas/externalJwtSignerDetail"
      type: array
    externalJwtSignerPatch:
      properties:
        audience:
          nullable: true
          type: string
        certPem:
          nullable: true
          type: string
        claimsProperty:
          nullable: true
          type: string
        clientId:
          nullable: true
          type: string
        enabled:
          nullable: true
          type: boolean
        externalAuthUrl:
          format: url
          nullable: true
          type: string
        issuer:
          nullable: true
          type: string
        jwksEndpoint:
          format: uri
          nullable: true
          type: string
        kid:
          nullable: true
          type: string
        name:
          example: MyApps Signer
          nullable: true
          type: string
        scopes:
          items:
            type: string
          type: array
        tags:
          $ref: "#/components/schemas/tags"
        targetToken:
          $ref: "#/components/schemas/targetToken"
        useExternalId:
          nullable: true
          type: boolean
      type: object
    externalJwtSignerUpdate:
      properties:
        audience:
          nullable: true
          type: string
        certPem:
          nullable: true
          type: string
        claimsProperty:
          nullable: true
          type: string
        clientId:
          nullable: true
          type: string
        enabled:
          type: boolean
        externalAuthUrl:
          format: url
          nullable: true
          type: string
        issuer:
          type: string
        jwksEndpoint:
          format: uri
          nullable: true
          type: string
        kid:
          nullable: true
          type: string
        name:
          example: MyApps Signer
          type: string
        scopes:
          items:
            type: string
          nullable: true
          type: array
        tags:
          $ref: "#/components/schemas/tags"
        targetToken:
          $ref: "#/components/schemas/targetToken"
        useExternalId:
          nullable: true
          type: boolean
      required:
      - audience
      - enabled
      - issuer
      - name
      type: object
    failedServiceRequest:
      example:
        policyFailures:
        - checks:
          - postureCheckType: postureCheckType
            postureCheckId: postureCheckId
            postureCheckName: postureCheckName
          - postureCheckType: postureCheckType
            postureCheckId: postureCheckId
            postureCheckName: postureCheckName
          policyId: policyId
          policyName: policyName
        - checks:
          - postureCheckType: postureCheckType
            postureCheckId: postureCheckId
            postureCheckName: postureCheckName
          - postureCheckType: postureCheckType
            postureCheckId: postureCheckId
            postureCheckName: postureCheckName
          policyId: policyId
          policyName: policyName
        sessionType: Dial
        serviceId: serviceId
        serviceName: serviceName
        when: 2000-01-23T04:56:07.000+00:00
        apiSessionId: apiSessionId
      properties:
        apiSessionId:
          type: string
        policyFailures:
          items:
            $ref: "#/components/schemas/policyFailure"
          type: array
        serviceId:
          type: string
        serviceName:
          type: string
        sessionType:
          $ref: "#/components/schemas/dialBind"
        when:
          format: date-time
          type: string
      type: object
    failedServiceRequestEnvelope:
      example:
        data:
        - policyFailures:
          - checks:
            - postureCheckType: postureCheckType
              postureCheckId: postureCheckId
              postureCheckName: postureCheckName
            - postureCheckType: postureCheckType
              postureCheckId: postureCheckId
              postureCheckName: postureCheckName
            policyId: policyId
            policyName: policyName
          - checks:
            - postureCheckType: postureCheckType
              postureCheckId: postureCheckId
              postureCheckName: postureCheckName
            - postureCheckType: postureCheckType
              postureCheckId: postureCheckId
              postureCheckName: postureCheckName
            policyId: policyId
            policyName: policyName
          sessionType: Dial
          serviceId: serviceId
          serviceName: serviceName
          when: 2000-01-23T04:56:07.000+00:00
          apiSessionId: apiSessionId
        - policyFailures:
          - checks:
            - postureCheckType: postureCheckType
              postureCheckId: postureCheckId
              postureCheckName: postureCheckName
            - postureCheckType: postureCheckType
              postureCheckId: postureCheckId
              postureCheckName: postureCheckName
            policyId: policyId
            policyName: policyName
          - checks:
            - postureCheckType: postureCheckType
              postureCheckId: postureCheckId
              postureCheckName: postureCheckName
            - postureCheckType: postureCheckType
              postureCheckId: postureCheckId
              postureCheckName: postureCheckName
            policyId: policyId
            policyName: policyName
          sessionType: Dial
          serviceId: serviceId
          serviceName: serviceName
          when: 2000-01-23T04:56:07.000+00:00
          apiSessionId: apiSessionId
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          items:
            $ref: "#/components/schemas/failedServiceRequest"
          type: array
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    failedServiceRequestList:
      items:
        $ref: "#/components/schemas/failedServiceRequest"
      type: array
    getIdentityPolicyAdviceEnvelope:
      example:
        data:
          isDialAllowed: true
          isBindAllowed: true
          identity:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          identityId: identityId
          service:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          serviceRouterCount: 6.027456183070403
          commonRouters:
          - _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            isOnline: true
            id: id
            entity: entity
          - _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            isOnline: true
            id: id
            entity: entity
          identityRouterCount: 0.8008281904610115
          serviceId: serviceId
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          $ref: "#/components/schemas/policyAdvice"
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    identityAuthenticators:
      example:
        cert:
          fingerprint: fingerprint
          id: id
        updb:
          id: id
          username: username
      properties:
        cert:
          $ref: "#/components/schemas/identityAuthenticators_cert"
        updb:
          $ref: "#/components/schemas/identityAuthenticators_updb"
      type: object
    identityCreate:
      description: An identity to create
      properties:
        appData:
          $ref: "#/components/schemas/tags"
        authPolicyId:
          nullable: true
          type: string
        defaultHostingCost:
          maximum: 65535
          minimum: 0
          type: integer
        defaultHostingPrecedence:
          $ref: "#/components/schemas/terminatorPrecedence"
        enrollment:
          $ref: "#/components/schemas/identityCreate_enrollment"
        externalId:
          nullable: true
          type: string
        isAdmin:
          type: boolean
        name:
          type: string
        roleAttributes:
          description: A set of strings used to loosly couple this resource to policies
          items:
            type: string
          nullable: true
          type: array
          x-nullable: true
          x-omitempty: true
        serviceHostingCosts:
          additionalProperties:
            $ref: "#/components/schemas/terminatorCost"
          type: object
        serviceHostingPrecedences:
          additionalProperties:
            $ref: "#/components/schemas/terminatorPrecedence"
          type: object
        tags:
          $ref: "#/components/schemas/tags"
        type:
          $ref: "#/components/schemas/identityType"
      required:
      - isAdmin
      - name
      - type
      type: object
    identityDetail:
      allOf:
      - $ref: "#/components/schemas/baseEntity"
      - properties:
          appData:
            $ref: "#/components/schemas/tags"
          authPolicy:
            $ref: "#/components/schemas/entityRef"
          authPolicyId:
            type: string
          authenticators:
            $ref: "#/components/schemas/identityAuthenticators"
          defaultHostingCost:
            $ref: "#/components/schemas/terminatorCost"
          defaultHostingPrecedence:
            $ref: "#/components/schemas/terminatorPrecedence"
          disabled:
            type: boolean
          disabledAt:
            format: date-time
            nullable: true
            type: string
          disabledUntil:
            format: date-time
            nullable: true
            type: string
          edgeRouterConnectionStatus:
            enum:
            - online
            - offline
            - unknown
            type: string
          enrollment:
            $ref: "#/components/schemas/identityEnrollments"
          envInfo:
            $ref: "#/components/schemas/envInfo"
          externalId:
            nullable: true
            type: string
          hasApiSession:
            type: boolean
          hasEdgeRouterConnection:
            type: boolean
          isAdmin:
            type: boolean
          isDefaultAdmin:
            type: boolean
          isMfaEnabled:
            type: boolean
          name:
            type: string
          roleAttributes:
            $ref: "#/components/schemas/attributes"
          sdkInfo:
            $ref: "#/components/schemas/sdkInfo"
          serviceHostingCosts:
            $ref: "#/components/schemas/terminatorCostMap"
          serviceHostingPrecedences:
            $ref: "#/components/schemas/terminatorPrecedenceMap"
          type:
            $ref: "#/components/schemas/entityRef"
          typeId:
            type: string
        required:
        - authPolicy
        - authPolicyId
        - authenticators
        - defaultHostingCost
        - disabled
        - edgeRouterConnectionStatus
        - enrollment
        - envInfo
        - externalId
        - hasApiSession
        - hasEdgeRouterConnection
        - isAdmin
        - isDefaultAdmin
        - isMfaEnabled
        - name
        - roleAttributes
        - sdkInfo
        - serviceHostingCosts
        - serviceHostingPrecedences
        - type
        - typeId
        type: object
      description: Detail of a specific identity
      example:
        defaultHostingPrecedence: default
        _links:
          key:
            method: method
            comment: comment
            href: https://openapi-generator.tech
        authPolicy:
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          name: name
          id: id
          entity: entity
        authenticators:
          cert:
            fingerprint: fingerprint
            id: id
          updb:
            id: id
            username: username
        type:
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          name: name
          id: id
          entity: entity
        isMfaEnabled: true
        appData: {}
        disabledAt: 2000-01-23T04:56:07.000+00:00
        createdAt: 2000-01-23T04:56:07.000+00:00
        roleAttributes:
        - null
        - null
        edgeRouterConnectionStatus: online
        hasEdgeRouterConnection: true
        serviceHostingPrecedences: null
        envInfo:
          hostname: hostname
          os: os
          osVersion: osVersion
          domain: domain
          arch: arch
          osRelease: osRelease
        hasApiSession: true
        disabled: true
        id: id
        updatedAt: 2000-01-23T04:56:07.000+00:00
        sdkInfo:
          appVersion: appVersion
          appId: appId
          type: type
          branch: branch
          version: version
          revision: revision
        defaultHostingCost: null
        authPolicyId: authPolicyId
        externalId: externalId
        disabledUntil: 2000-01-23T04:56:07.000+00:00
        isAdmin: true
        tags: {}
        enrollment:
          ott:
            jwt: jwt
            id: id
            expiresAt: 2000-01-23T04:56:07.000+00:00
            token: token
          ottca:
            jwt: jwt
            caId: caId
            id: id
            ca:
              _links:
                key:
                  method: method
                  comment: comment
                  href: https://openapi-generator.tech
              name: name
              id: id
              entity: entity
            expiresAt: 2000-01-23T04:56:07.000+00:00
            token: token
          updb:
            jwt: jwt
            id: id
            expiresAt: 2000-01-23T04:56:07.000+00:00
            token: token
        isDefaultAdmin: true
        name: name
        typeId: typeId
        serviceHostingCosts: null
    identityEnrollments:
      example:
        ott:
          jwt: jwt
          id: id
          expiresAt: 2000-01-23T04:56:07.000+00:00
          token: token
        ottca:
          jwt: jwt
          caId: caId
          id: id
          ca:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          expiresAt: 2000-01-23T04:56:07.000+00:00
          token: token
        updb:
          jwt: jwt
          id: id
          expiresAt: 2000-01-23T04:56:07.000+00:00
          token: token
      properties:
        ott:
          $ref: "#/components/schemas/identityEnrollments_ott"
        ottca:
          $ref: "#/components/schemas/identityEnrollments_ottca"
        updb:
          $ref: "#/components/schemas/identityEnrollments_ott"
      type: object
    identityExtendCerts:
      example:
        clientCert: clientCert
        ca: ca
      properties:
        ca:
          description: A PEM encoded set of CA certificates
          type: string
        clientCert:
          description: A PEM encoded client certificate
          type: string
      type: object
    identityExtendEnrollmentEnvelope:
      example:
        data:
          clientCert: clientCert
          ca: ca
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          $ref: "#/components/schemas/identityExtendCerts"
        meta:
          $ref: "#/components/schemas/meta"
      type: object
    identityExtendEnrollmentRequest:
      properties:
        clientCertCsr:
          type: string
      required:
      - clientCertCsr
      type: object
    identityExtendValidateEnrollmentRequest:
      properties:
        clientCert:
          description: A PEM encoded client certificate previously returned after
            an extension request
          type: string
      required:
      - clientCert
      type: object
    identityList:
      description: A list of identities
      items:
        $ref: "#/components/schemas/identityDetail"
      type: array
    identityPatch:
      properties:
        appData:
          $ref: "#/components/schemas/tags"
        authPolicyId:
          nullable: true
          type: string
        defaultHostingCost:
          maximum: 65535
          minimum: 0
          type: integer
        defaultHostingPrecedence:
          $ref: "#/components/schemas/terminatorPrecedence"
        externalId:
          nullable: true
          type: string
        isAdmin:
          nullable: true
          type: boolean
        name:
          nullable: true
          type: string
        roleAttributes:
          description: A set of strings used to loosly couple this resource to policies
          items:
            type: string
          nullable: true
          type: array
          x-nullable: true
          x-omitempty: true
        serviceHostingCosts:
          additionalProperties:
            $ref: "#/components/schemas/terminatorCost"
          type: object
        serviceHostingPrecedences:
          additionalProperties:
            $ref: "#/components/schemas/terminatorPrecedence"
          type: object
        tags:
          $ref: "#/components/schemas/tags"
        type:
          $ref: "#/components/schemas/identityType"
      type: object
    identityType:
      enum:
      - User
      - Device
      - Service
      - Router
      - Default
      type: string
    identityTypeDetail:
      allOf:
      - $ref: "#/components/schemas/baseEntity"
      - properties:
          name:
            type: string
        type: object
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        _links:
          key:
            method: method
            comment: comment
            href: https://openapi-generator.tech
        name: name
        id: id
        tags: {}
        updatedAt: 2000-01-23T04:56:07.000+00:00
    identityTypeList:
      items:
        $ref: "#/components/schemas/identityTypeDetail"
      type: array
    identityUpdate:
      properties:
        appData:
          $ref: "#/components/schemas/tags"
        authPolicyId:
          nullable: true
          type: string
        defaultHostingCost:
          maximum: 65535
          minimum: 0
          type: integer
        defaultHostingPrecedence:
          $ref: "#/components/schemas/terminatorPrecedence"
        externalId:
          nullable: true
          type: string
        isAdmin:
          type: boolean
        name:
          type: string
        roleAttributes:
          description: A set of strings used to loosly couple this resource to policies
          items:
            type: string
          nullable: true
          type: array
          x-nullable: true
          x-omitempty: true
        serviceHostingCosts:
          additionalProperties:
            $ref: "#/components/schemas/terminatorCost"
          type: object
        serviceHostingPrecedences:
          additionalProperties:
            $ref: "#/components/schemas/terminatorPrecedence"
          type: object
        tags:
          $ref: "#/components/schemas/tags"
        type:
          $ref: "#/components/schemas/identityType"
      required:
      - isAdmin
      - name
      - type
      type: object
    link:
      description: A link to another resource
      example:
        method: method
        comment: comment
        href: https://openapi-generator.tech
      properties:
        comment:
          type: string
        href:
          format: uri
          type: string
        method:
          type: string
      required:
      - href
      type: object
    links:
      additionalProperties:
        $ref: "#/components/schemas/link"
      description: A map of named links
      type: object
      x-omitempty: false
    listApiSessionsEnvelope:
      example:
        data:
        - _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          configTypes:
          - configTypes
          - configTypes
          authQueries:
          - clientId: clientId
            provider: ziti
            httpUrl: httpUrl
            minLength: 6
            format: numeric
            typeId: MFA
            id: id
            scopes:
            - scopes
            - scopes
            httpMethod: httpMethod
            maxLength: 0
          - clientId: clientId
            provider: ziti
            httpUrl: httpUrl
            minLength: 6
            format: numeric
            typeId: MFA
            id: id
            scopes:
            - scopes
            - scopes
            httpMethod: httpMethod
            maxLength: 0
          ipAddress: ipAddress
          lastActivityAt: 2000-01-23T04:56:07.000+00:00
          isMfaRequired: true
          tags: {}
          token: token
          createdAt: 2000-01-23T04:56:07.000+00:00
          isMfaComplete: true
          cachedLastActivityAt: 2000-01-23T04:56:07.000+00:00
          identity:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          identityId: identityId
          authenticatorId: authenticatorId
          id: id
          isCertExtendable: true
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          configTypes:
          - configTypes
          - configTypes
          authQueries:
          - clientId: clientId
            provider: ziti
            httpUrl: httpUrl
            minLength: 6
            format: numeric
            typeId: MFA
            id: id
            scopes:
            - scopes
            - scopes
            httpMethod: httpMethod
            maxLength: 0
          - clientId: clientId
            provider: ziti
            httpUrl: httpUrl
            minLength: 6
            format: numeric
            typeId: MFA
            id: id
            scopes:
            - scopes
            - scopes
            httpMethod: httpMethod
            maxLength: 0
          ipAddress: ipAddress
          lastActivityAt: 2000-01-23T04:56:07.000+00:00
          isMfaRequired: true
          tags: {}
          token: token
          createdAt: 2000-01-23T04:56:07.000+00:00
          isMfaComplete: true
          cachedLastActivityAt: 2000-01-23T04:56:07.000+00:00
          identity:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          identityId: identityId
          authenticatorId: authenticatorId
          id: id
          isCertExtendable: true
          updatedAt: 2000-01-23T04:56:07.000+00:00
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          items:
            $ref: "#/components/schemas/apiSessionDetail"
          type: array
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    listAuthPoliciesEnvelope:
      example:
        data:
        - secondary:
            requireExtJwtSigner: requireExtJwtSigner
            requireTotp: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          name: name
          id: id
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
          primary:
            cert:
              allowExpiredCerts: true
              allowed: true
            extJwt:
              allowedSigners:
              - allowedSigners
              - allowedSigners
              allowed: true
            updb:
              maxAttempts: 6
              requireNumberChar: true
              requireMixedCase: true
              requireSpecialChar: true
              allowed: true
              minPasswordLength: 1
              lockoutDurationMinutes: 0
        - secondary:
            requireExtJwtSigner: requireExtJwtSigner
            requireTotp: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          name: name
          id: id
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
          primary:
            cert:
              allowExpiredCerts: true
              allowed: true
            extJwt:
              allowedSigners:
              - allowedSigners
              - allowedSigners
              allowed: true
            updb:
              maxAttempts: 6
              requireNumberChar: true
              requireMixedCase: true
              requireSpecialChar: true
              allowed: true
              minPasswordLength: 1
              lockoutDurationMinutes: 0
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          description: An array of Auth Policies resources
          items:
            $ref: "#/components/schemas/authPolicyDetail"
          type: array
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    listAuthenticatorsEnvelope:
      example:
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          method: method
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          identity:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          identityId: identityId
          fingerprint: fingerprint
          certPem: certPem
          id: id
          isIssuedByNetwork: true
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
          username: username
        - createdAt: 2000-01-23T04:56:07.000+00:00
          method: method
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          identity:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          identityId: identityId
          fingerprint: fingerprint
          certPem: certPem
          id: id
          isIssuedByNetwork: true
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
          username: username
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          description: An array of authenticator resources
          items:
            $ref: "#/components/schemas/authenticatorDetail"
          type: array
        meta:
          $ref: "#/components/schemas/meta"
      type: object
    listCasEnvelope:
      example:
        data:
        - identityNameFormat: identityNameFormat
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          isVerified: false
          externalIdClaim:
            parserCriteria: parserCriteria
            parser: NONE
            matcherCriteria: matcherCriteria
            index: 0
            location: COMMON_NAME
            matcher: ALL
          verificationToken: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isOttCaEnrollmentEnabled: true
          certPem: certPem
          tags: {}
          createdAt: 2000-01-23T04:56:07.000+00:00
          identityRoles:
          - null
          - null
          isAutoCaEnrollmentEnabled: true
          fingerprint: fingerprint
          name: name
          id: id
          isAuthEnabled: true
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - identityNameFormat: identityNameFormat
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          isVerified: false
          externalIdClaim:
            parserCriteria: parserCriteria
            parser: NONE
            matcherCriteria: matcherCriteria
            index: 0
            location: COMMON_NAME
            matcher: ALL
          verificationToken: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          isOttCaEnrollmentEnabled: true
          certPem: certPem
          tags: {}
          createdAt: 2000-01-23T04:56:07.000+00:00
          identityRoles:
          - null
          - null
          isAutoCaEnrollmentEnabled: true
          fingerprint: fingerprint
          name: name
          id: id
          isAuthEnabled: true
          updatedAt: 2000-01-23T04:56:07.000+00:00
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          description: An array of Certificate Authority (CA) resources
          items:
            $ref: "#/components/schemas/caDetail"
          type: array
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    listConfigTypesEnvelope:
      example:
        data:
        - schema:
            key: ""
          createdAt: 2000-01-23T04:56:07.000+00:00
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          name: ziti-tunneler-server.v1
          id: id
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - schema:
            key: ""
          createdAt: 2000-01-23T04:56:07.000+00:00
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          name: ziti-tunneler-server.v1
          id: id
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          description: An array of config-type resources
          items:
            $ref: "#/components/schemas/configTypeDetail"
          type: array
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    listConfigsEnvelope:
      example:
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          data: {}
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          configTypeId: configTypeId
          name: name
          id: id
          configType:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          data: {}
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          configTypeId: configTypeId
          name: name
          id: id
          configType:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          description: An array of config resources
          items:
            $ref: "#/components/schemas/configDetail"
          type: array
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    listControllerSettingEnvelope:
      example:
        data:
        - data
        - data
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    listControllersEnvelope:
      example:
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          apiAddresses: null
          fingerprint: fingerprint
          name: name
          ctrlAddress: ctrlAddress
          certPem: certPem
          isOnline: true
          id: id
          lastJoinedAt: 2000-01-23T04:56:07.000+00:00
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          apiAddresses: null
          fingerprint: fingerprint
          name: name
          ctrlAddress: ctrlAddress
          certPem: certPem
          isOnline: true
          id: id
          lastJoinedAt: 2000-01-23T04:56:07.000+00:00
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          description: An array of controller resources
          items:
            $ref: "#/components/schemas/controllerDetail"
          type: array
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    listEdgeRouterPoliciesEnvelope:
      example:
        data:
        - isSystem: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          edgeRouterRolesDisplay:
          - role: role
            name: name
          - role: role
            name: name
          semantic: AllOf
          identityRoles: null
          identityRolesDisplay: null
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          edgeRouterRoles:
          - null
          - null
          name: name
          id: id
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - isSystem: true
          createdAt: 2000-01-23T04:56:07.000+00:00
          edgeRouterRolesDisplay:
          - role: role
            name: name
          - role: role
            name: name
          semantic: AllOf
          identityRoles: null
          identityRolesDisplay: null
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          edgeRouterRoles:
          - null
          - null
          name: name
          id: id
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          items:
            $ref: "#/components/schemas/edgeRouterPolicyDetail"
          type: array
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    listEdgeRoutersEnvelope:
      example:
        data:
        - _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          isVerified: true
          unverifiedCertPem: unverifiedCertPem
          noTraversal: true
          isOnline: true
          certPem: certPem
          appData: {}
          createdAt: 2000-01-23T04:56:07.000+00:00
          hostname: hostname
          roleAttributes:
          - null
          - null
          enrollmentExpiresAt: 2000-01-23T04:56:07.000+00:00
          isTunnelerEnabled: true
          fingerprint: fingerprint
          disabled: true
          id: id
          enrollmentJwt: enrollmentJwt
          updatedAt: 2000-01-23T04:56:07.000+00:00
          unverifiedFingerprint: unverifiedFingerprint
          enrollmentCreatedAt: 2000-01-23T04:56:07.000+00:00
          cost: 5248
          versionInfo:
            os: os
            arch: arch
            buildDate: buildDate
            version: version
            revision: revision
          supportedProtocols:
            key: supportedProtocols
          tags: {}
          enrollmentToken: enrollmentToken
          name: name
          syncStatus: syncStatus
        - _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          isVerified: true
          unverifiedCertPem: unverifiedCertPem
          noTraversal: true
          isOnline: true
          certPem: certPem
          appData: {}
          createdAt: 2000-01-23T04:56:07.000+00:00
          hostname: hostname
          roleAttributes:
          - null
          - null
          enrollmentExpiresAt: 2000-01-23T04:56:07.000+00:00
          isTunnelerEnabled: true
          fingerprint: fingerprint
          disabled: true
          id: id
          enrollmentJwt: enrollmentJwt
          updatedAt: 2000-01-23T04:56:07.000+00:00
          unverifiedFingerprint: unverifiedFingerprint
          enrollmentCreatedAt: 2000-01-23T04:56:07.000+00:00
          cost: 5248
          versionInfo:
            os: os
            arch: arch
            buildDate: buildDate
            version: version
            revision: revision
          supportedProtocols:
            key: supportedProtocols
          tags: {}
          enrollmentToken: enrollmentToken
          name: name
          syncStatus: syncStatus
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          description: A list of edge router resources
          items:
            $ref: "#/components/schemas/edgeRouterDetail"
          type: array
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    listEnrollmentsEnvelope:
      example:
        data:
        - transitRouter:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          transitRouterId: transitRouterId
          edgeRouterId: edgeRouterId
          method: method
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          edgeRouter:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          jwt: jwt
          expiresAt: 2000-01-23T04:56:07.000+00:00
          tags: {}
          token: token
          createdAt: 2000-01-23T04:56:07.000+00:00
          identity:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          identityId: identityId
          caId: caId
          id: id
          updatedAt: 2000-01-23T04:56:07.000+00:00
          username: username
        - transitRouter:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          transitRouterId: transitRouterId
          edgeRouterId: edgeRouterId
          method: method
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          edgeRouter:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          jwt: jwt
          expiresAt: 2000-01-23T04:56:07.000+00:00
          tags: {}
          token: token
          createdAt: 2000-01-23T04:56:07.000+00:00
          identity:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          identityId: identityId
          caId: caId
          id: id
          updatedAt: 2000-01-23T04:56:07.000+00:00
          username: username
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          description: An array of enrollment resources
          items:
            $ref: "#/components/schemas/enrollmentDetail"
          type: array
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    listEnumeratedCapabilitiesEnvelope:
      example:
        data:
        - OIDC_AUTH
        - OIDC_AUTH
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          items:
            $ref: "#/components/schemas/capabilities"
          type: array
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    listExternalJwtSignersEnvelope:
      example:
        data:
        - commonName: commonName
          audience: audience
          notAfter: 2000-01-23T04:56:07.000+00:00
          clientId: clientId
          externalAuthUrl: http://example.com/aeiou
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          jwksEndpoint: https://openapi-generator.tech
          useExternalId: true
          kid: kid
          certPem: certPem
          targetToken: ACCESS
          enabled: true
          issuer: issuer
          notBefore: 2000-01-23T04:56:07.000+00:00
          tags: {}
          createdAt: 2000-01-23T04:56:07.000+00:00
          fingerprint: fingerprint
          name: MyApps Signer
          id: id
          scopes:
          - scopes
          - scopes
          updatedAt: 2000-01-23T04:56:07.000+00:00
          claimsProperty: claimsProperty
        - commonName: commonName
          audience: audience
          notAfter: 2000-01-23T04:56:07.000+00:00
          clientId: clientId
          externalAuthUrl: http://example.com/aeiou
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          jwksEndpoint: https://openapi-generator.tech
          useExternalId: true
          kid: kid
          certPem: certPem
          targetToken: ACCESS
          enabled: true
          issuer: issuer
          notBefore: 2000-01-23T04:56:07.000+00:00
          tags: {}
          createdAt: 2000-01-23T04:56:07.000+00:00
          fingerprint: fingerprint
          name: MyApps Signer
          id: id
          scopes:
          - scopes
          - scopes
          updatedAt: 2000-01-23T04:56:07.000+00:00
          claimsProperty: claimsProperty
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          description: An array of External JWT Signers resources
          items:
            $ref: "#/components/schemas/externalJwtSignerDetail"
          type: array
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    listIdentitiesEnvelope:
      example:
        data:
        - defaultHostingPrecedence: default
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          authPolicy:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          authenticators:
            cert:
              fingerprint: fingerprint
              id: id
            updb:
              id: id
              username: username
          type:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          isMfaEnabled: true
          appData: {}
          disabledAt: 2000-01-23T04:56:07.000+00:00
          createdAt: 2000-01-23T04:56:07.000+00:00
          roleAttributes:
          - null
          - null
          edgeRouterConnectionStatus: online
          hasEdgeRouterConnection: true
          serviceHostingPrecedences: null
          envInfo:
            hostname: hostname
            os: os
            osVersion: osVersion
            domain: domain
            arch: arch
            osRelease: osRelease
          hasApiSession: true
          disabled: true
          id: id
          updatedAt: 2000-01-23T04:56:07.000+00:00
          sdkInfo:
            appVersion: appVersion
            appId: appId
            type: type
            branch: branch
            version: version
            revision: revision
          defaultHostingCost: null
          authPolicyId: authPolicyId
          externalId: externalId
          disabledUntil: 2000-01-23T04:56:07.000+00:00
          isAdmin: true
          tags: {}
          enrollment:
            ott:
              jwt: jwt
              id: id
              expiresAt: 2000-01-23T04:56:07.000+00:00
              token: token
            ottca:
              jwt: jwt
              caId: caId
              id: id
              ca:
                _links:
                  key:
                    method: method
                    comment: comment
                    href: https://openapi-generator.tech
                name: name
                id: id
                entity: entity
              expiresAt: 2000-01-23T04:56:07.000+00:00
              token: token
            updb:
              jwt: jwt
              id: id
              expiresAt: 2000-01-23T04:56:07.000+00:00
              token: token
          isDefaultAdmin: true
          name: name
          typeId: typeId
          serviceHostingCosts: null
        - defaultHostingPrecedence: default
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          authPolicy:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          authenticators:
            cert:
              fingerprint: fingerprint
              id: id
            updb:
              id: id
              username: username
          type:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          isMfaEnabled: true
          appData: {}
          disabledAt: 2000-01-23T04:56:07.000+00:00
          createdAt: 2000-01-23T04:56:07.000+00:00
          roleAttributes:
          - null
          - null
          edgeRouterConnectionStatus: online
          hasEdgeRouterConnection: true
          serviceHostingPrecedences: null
          envInfo:
            hostname: hostname
            os: os
            osVersion: osVersion
            domain: domain
            arch: arch
            osRelease: osRelease
          hasApiSession: true
          disabled: true
          id: id
          updatedAt: 2000-01-23T04:56:07.000+00:00
          sdkInfo:
            appVersion: appVersion
            appId: appId
            type: type
            branch: branch
            version: version
            revision: revision
          defaultHostingCost: null
          authPolicyId: authPolicyId
          externalId: externalId
          disabledUntil: 2000-01-23T04:56:07.000+00:00
          isAdmin: true
          tags: {}
          enrollment:
            ott:
              jwt: jwt
              id: id
              expiresAt: 2000-01-23T04:56:07.000+00:00
              token: token
            ottca:
              jwt: jwt
              caId: caId
              id: id
              ca:
                _links:
                  key:
                    method: method
                    comment: comment
                    href: https://openapi-generator.tech
                name: name
                id: id
                entity: entity
              expiresAt: 2000-01-23T04:56:07.000+00:00
              token: token
            updb:
              jwt: jwt
              id: id
              expiresAt: 2000-01-23T04:56:07.000+00:00
              token: token
          isDefaultAdmin: true
          name: name
          typeId: typeId
          serviceHostingCosts: null
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          description: A list of identities
          items:
            $ref: "#/components/schemas/identityDetail"
          type: array
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    listIdentityTypesEnvelope:
      example:
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          name: name
          id: id
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          name: name
          id: id
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          items:
            $ref: "#/components/schemas/identityTypeDetail"
          type: array
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    listNetworkJWTsEnvelope:
      example:
        data:
        - name: name
          token: token
        - name: name
          token: token
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          description: An array of network JWTs
          items:
            $ref: "#/components/schemas/networkJWT"
          type: array
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    listPostureCheckEnvelope:
      example:
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          roleAttributes:
          - roleAttributes
          - roleAttributes
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          name: name
          typeId: typeId
          id: id
          version: 0
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          roleAttributes:
          - roleAttributes
          - roleAttributes
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          name: name
          typeId: typeId
          id: id
          version: 0
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          items:
            $ref: "#/components/schemas/postureCheckDetail"
          type: array
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    listPostureCheckTypesEnvelope:
      example:
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          operatingSystems:
          - versions:
            - versions
            - versions
            type: Windows
          - versions:
            - versions
            - versions
            type: Windows
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          name: name
          id: id
          version: version
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          operatingSystems:
          - versions:
            - versions
            - versions
            type: Windows
          - versions:
            - versions
            - versions
            type: Windows
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          name: name
          id: id
          version: version
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          items:
            $ref: "#/components/schemas/postureCheckTypeDetail"
          type: array
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    listRoleAttributesEnvelope:
      example:
        data:
        - data
        - data
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          description: An array of role attributes
          items:
            type: string
          type: array
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    listRoutersEnvelope:
      example:
        data:
        - unverifiedFingerprint: unverifiedFingerprint
          enrollmentCreatedAt: 2000-01-23T04:56:07.000+00:00
          cost: 5248
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          isVerified: true
          unverifiedCertPem: unverifiedCertPem
          noTraversal: true
          isOnline: true
          tags: {}
          createdAt: 2000-01-23T04:56:07.000+00:00
          enrollmentToken: enrollmentToken
          enrollmentExpiresAt: 2000-01-23T04:56:07.000+00:00
          fingerprint: fingerprint
          name: name
          disabled: true
          id: id
          enrollmentJwt: enrollmentJwt
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - unverifiedFingerprint: unverifiedFingerprint
          enrollmentCreatedAt: 2000-01-23T04:56:07.000+00:00
          cost: 5248
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          isVerified: true
          unverifiedCertPem: unverifiedCertPem
          noTraversal: true
          isOnline: true
          tags: {}
          createdAt: 2000-01-23T04:56:07.000+00:00
          enrollmentToken: enrollmentToken
          enrollmentExpiresAt: 2000-01-23T04:56:07.000+00:00
          fingerprint: fingerprint
          name: name
          disabled: true
          id: id
          enrollmentJwt: enrollmentJwt
          updatedAt: 2000-01-23T04:56:07.000+00:00
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          items:
            $ref: "#/components/schemas/routerDetail"
          type: array
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    listServiceConfigsEnvelope:
      example:
        data:
        - config:
            _links:
              self:
                href: ./identities/13347602-ba34-4ff7-8082-e533ba945744
            id: 13347602-ba34-4ff7-8082-e533ba945744
            name: test-config-02fade09-fcc3-426c-854e-18539726bdc6
            urlName: configs
          service:
            _links:
              self:
                href: ./services/913a8c63-17a6-44d7-82b3-9f6eb997cf8e
            id: 913a8c63-17a6-44d7-82b3-9f6eb997cf8e
            name: netcat4545-egress-r2
            urlName: services
        - config:
            _links:
              self:
                href: ./identities/13347602-ba34-4ff7-8082-e533ba945744
            id: 13347602-ba34-4ff7-8082-e533ba945744
            name: test-config-02fade09-fcc3-426c-854e-18539726bdc6
            urlName: configs
          service:
            _links:
              self:
                href: ./services/913a8c63-17a6-44d7-82b3-9f6eb997cf8e
            id: 913a8c63-17a6-44d7-82b3-9f6eb997cf8e
            name: netcat4545-egress-r2
            urlName: services
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          items:
            $ref: "#/components/schemas/serviceConfigDetail"
          type: array
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    listServiceEdgeRouterPoliciesEnvelope:
      example:
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          edgeRouterRolesDisplay:
          - role: role
            name: name
          - role: role
            name: name
          semantic: AllOf
          serviceRoles: null
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          serviceRolesDisplay: null
          edgeRouterRoles:
          - null
          - null
          name: name
          id: id
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          edgeRouterRolesDisplay:
          - role: role
            name: name
          - role: role
            name: name
          semantic: AllOf
          serviceRoles: null
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          serviceRolesDisplay: null
          edgeRouterRoles:
          - null
          - null
          name: name
          id: id
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          items:
            $ref: "#/components/schemas/serviceEdgeRouterPolicyDetail"
          type: array
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    listServicePoliciesEnvelope:
      example:
        data:
        - semantic: AllOf
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          serviceRolesDisplay: null
          type: Dial
          tags: {}
          createdAt: 2000-01-23T04:56:07.000+00:00
          postureCheckRoles: null
          identityRoles:
          - null
          - null
          identityRolesDisplay:
          - role: role
            name: name
          - role: role
            name: name
          serviceRoles: null
          name: name
          id: id
          postureCheckRolesDisplay: null
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - semantic: AllOf
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          serviceRolesDisplay: null
          type: Dial
          tags: {}
          createdAt: 2000-01-23T04:56:07.000+00:00
          postureCheckRoles: null
          identityRoles:
          - null
          - null
          identityRolesDisplay:
          - role: role
            name: name
          - role: role
            name: name
          serviceRoles: null
          name: name
          id: id
          postureCheckRolesDisplay: null
          updatedAt: 2000-01-23T04:56:07.000+00:00
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          items:
            $ref: "#/components/schemas/servicePolicyDetail"
          type: array
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    listServicesEnvelope:
      example:
        data:
        - maxIdleTimeMillis: 0
          configs:
          - configs
          - configs
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          encryptionRequired: true
          terminatorStrategy: terminatorStrategy
          tags: {}
          createdAt: 2000-01-23T04:56:07.000+00:00
          roleAttributes:
          - null
          - null
          postureQueries:
          - policyId: policyId
            postureQueries:
            - timeoutRemaining: 1
              createdAt: 2000-01-23T04:56:07.000+00:00
              process:
                path: path
                osType: Windows
              processes:
              - path: path
                osType: Windows
              - path: path
                osType: Windows
              _links:
                key:
                  method: method
                  comment: comment
                  href: https://openapi-generator.tech
              id: id
              isPassing: true
              timeout: 6
              tags: {}
              updatedAt: 2000-01-23T04:56:07.000+00:00
              queryType: OS
            - timeoutRemaining: 1
              createdAt: 2000-01-23T04:56:07.000+00:00
              process:
                path: path
                osType: Windows
              processes:
              - path: path
                osType: Windows
              - path: path
                osType: Windows
              _links:
                key:
                  method: method
                  comment: comment
                  href: https://openapi-generator.tech
              id: id
              isPassing: true
              timeout: 6
              tags: {}
              updatedAt: 2000-01-23T04:56:07.000+00:00
              queryType: OS
            policyType: null
            isPassing: true
          - policyId: policyId
            postureQueries:
            - timeoutRemaining: 1
              createdAt: 2000-01-23T04:56:07.000+00:00
              process:
                path: path
                osType: Windows
              processes:
              - path: path
                osType: Windows
              - path: path
                osType: Windows
              _links:
                key:
                  method: method
                  comment: comment
                  href: https://openapi-generator.tech
              id: id
              isPassing: true
              timeout: 6
              tags: {}
              updatedAt: 2000-01-23T04:56:07.000+00:00
              queryType: OS
            - timeoutRemaining: 1
              createdAt: 2000-01-23T04:56:07.000+00:00
              process:
                path: path
                osType: Windows
              processes:
              - path: path
                osType: Windows
              - path: path
                osType: Windows
              _links:
                key:
                  method: method
                  comment: comment
                  href: https://openapi-generator.tech
              id: id
              isPassing: true
              timeout: 6
              tags: {}
              updatedAt: 2000-01-23T04:56:07.000+00:00
              queryType: OS
            policyType: null
            isPassing: true
          permissions:
          - Dial
          - Dial
          name: name
          id: id
          config:
            key:
              key: "{}"
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - maxIdleTimeMillis: 0
          configs:
          - configs
          - configs
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          encryptionRequired: true
          terminatorStrategy: terminatorStrategy
          tags: {}
          createdAt: 2000-01-23T04:56:07.000+00:00
          roleAttributes:
          - null
          - null
          postureQueries:
          - policyId: policyId
            postureQueries:
            - timeoutRemaining: 1
              createdAt: 2000-01-23T04:56:07.000+00:00
              process:
                path: path
                osType: Windows
              processes:
              - path: path
                osType: Windows
              - path: path
                osType: Windows
              _links:
                key:
                  method: method
                  comment: comment
                  href: https://openapi-generator.tech
              id: id
              isPassing: true
              timeout: 6
              tags: {}
              updatedAt: 2000-01-23T04:56:07.000+00:00
              queryType: OS
            - timeoutRemaining: 1
              createdAt: 2000-01-23T04:56:07.000+00:00
              process:
                path: path
                osType: Windows
              processes:
              - path: path
                osType: Windows
              - path: path
                osType: Windows
              _links:
                key:
                  method: method
                  comment: comment
                  href: https://openapi-generator.tech
              id: id
              isPassing: true
              timeout: 6
              tags: {}
              updatedAt: 2000-01-23T04:56:07.000+00:00
              queryType: OS
            policyType: null
            isPassing: true
          - policyId: policyId
            postureQueries:
            - timeoutRemaining: 1
              createdAt: 2000-01-23T04:56:07.000+00:00
              process:
                path: path
                osType: Windows
              processes:
              - path: path
                osType: Windows
              - path: path
                osType: Windows
              _links:
                key:
                  method: method
                  comment: comment
                  href: https://openapi-generator.tech
              id: id
              isPassing: true
              timeout: 6
              tags: {}
              updatedAt: 2000-01-23T04:56:07.000+00:00
              queryType: OS
            - timeoutRemaining: 1
              createdAt: 2000-01-23T04:56:07.000+00:00
              process:
                path: path
                osType: Windows
              processes:
              - path: path
                osType: Windows
              - path: path
                osType: Windows
              _links:
                key:
                  method: method
                  comment: comment
                  href: https://openapi-generator.tech
              id: id
              isPassing: true
              timeout: 6
              tags: {}
              updatedAt: 2000-01-23T04:56:07.000+00:00
              queryType: OS
            policyType: null
            isPassing: true
          permissions:
          - Dial
          - Dial
          name: name
          id: id
          config:
            key:
              key: "{}"
          updatedAt: 2000-01-23T04:56:07.000+00:00
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          items:
            $ref: "#/components/schemas/serviceDetail"
          type: array
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    listSessionsManagementEnvelope:
      example:
        data:
        - _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          type: Dial
          tags: {}
          token: token
          createdAt: 2000-01-23T04:56:07.000+00:00
          apiSession:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          edgeRouters:
          - hostname: hostname
            urls:
              key: urls
            cost: 5248
            name: name
            noTraversal: true
            disabled: true
            isOnline: true
            supportedProtocols:
              key: supportedProtocols
            appData: {}
            syncStatus: syncStatus
          - hostname: hostname
            urls:
              key: urls
            cost: 5248
            name: name
            noTraversal: true
            disabled: true
            isOnline: true
            supportedProtocols:
              key: supportedProtocols
            appData: {}
            syncStatus: syncStatus
          identityId: identityId
          service:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          servicePolicies:
          - _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          - _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          id: id
          serviceId: serviceId
          apiSessionId: apiSessionId
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          type: Dial
          tags: {}
          token: token
          createdAt: 2000-01-23T04:56:07.000+00:00
          apiSession:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          edgeRouters:
          - hostname: hostname
            urls:
              key: urls
            cost: 5248
            name: name
            noTraversal: true
            disabled: true
            isOnline: true
            supportedProtocols:
              key: supportedProtocols
            appData: {}
            syncStatus: syncStatus
          - hostname: hostname
            urls:
              key: urls
            cost: 5248
            name: name
            noTraversal: true
            disabled: true
            isOnline: true
            supportedProtocols:
              key: supportedProtocols
            appData: {}
            syncStatus: syncStatus
          identityId: identityId
          service:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          servicePolicies:
          - _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          - _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          id: id
          serviceId: serviceId
          apiSessionId: apiSessionId
          updatedAt: 2000-01-23T04:56:07.000+00:00
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          items:
            $ref: "#/components/schemas/sessionManagementDetail"
          type: array
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    listSpecsEnvelope:
      example:
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          name: name
          id: id
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          name: name
          id: id
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          items:
            $ref: "#/components/schemas/specDetail"
          type: array
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    listSummaryCounts:
      additionalProperties:
        type: integer
      type: object
    listSummaryCountsEnvelope:
      example:
        data:
          key: 0
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          additionalProperties:
            type: integer
          type: object
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    listTerminatorsEnvelope:
      example:
        data:
        - dynamicCost: null
          address: address
          cost: null
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          binding: binding
          precedence: default
          tags: {}
          createdAt: 2000-01-23T04:56:07.000+00:00
          router:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          identity: identity
          routerId: routerId
          service:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          id: id
          serviceId: serviceId
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - dynamicCost: null
          address: address
          cost: null
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          binding: binding
          precedence: default
          tags: {}
          createdAt: 2000-01-23T04:56:07.000+00:00
          router:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          identity: identity
          routerId: routerId
          service:
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            name: name
            id: id
            entity: entity
          id: id
          serviceId: serviceId
          updatedAt: 2000-01-23T04:56:07.000+00:00
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          items:
            $ref: "#/components/schemas/terminatorDetail"
          type: array
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    listVersionEnvelope:
      example:
        data:
          runtimeVersion: go1.13.5
          capabilities:
          - capabilities
          - capabilities
          apiVersions:
            key:
              key:
                path: path
                apiBaseUrls:
                - apiBaseUrls
                - apiBaseUrls
                version: version
          buildDate: 2020-02-11 16:09:08
          version: v0.9.0
          revision: ea556fc18740
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          $ref: "#/components/schemas/version"
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    meta:
      example:
        apiEnrollmentVersion: apiEnrollmentVersion
        apiVersion: apiVersion
        pagination:
          offset: 6.027456183070403
          limit: 0.8008281904610115
          totalCount: 1.4658129805029452
        filterableFields:
        - filterableFields
        - filterableFields
      properties:
        apiEnrollmentVersion:
          type: string
        apiVersion:
          type: string
        filterableFields:
          items:
            type: string
          type: array
          x-omitempty: true
        pagination:
          $ref: "#/components/schemas/pagination"
      type: object
    mfaCode:
      properties:
        code:
          type: string
      required:
      - code
      type: object
    mfaFormats:
      enum:
      - numeric
      - alpha
      - alphaNumeric
      type: string
    mfaProviders:
      enum:
      - ziti
      - url
      type: string
    namedRole:
      example:
        role: role
        name: name
      properties:
        name:
          type: string
        role:
          type: string
      type: object
    namedRoles:
      items:
        $ref: "#/components/schemas/namedRole"
      type: array
      x-omitempty: false
    networkJWT:
      allOf:
      - properties:
          name:
            type: string
          token:
            type: string
        required:
        - name
        - token
        type: object
      description: A network JWT
      example:
        name: name
        token: token
    networkJWTList:
      description: An array of network JWTs
      items:
        $ref: "#/components/schemas/networkJWT"
      type: array
    operatingSystem:
      example:
        versions:
        - versions
        - versions
        type: Windows
      properties:
        type:
          $ref: "#/components/schemas/osType"
        versions:
          items:
            type: string
          type: array
      required:
      - type
      - versions
      type: object
    osType:
      enum:
      - Windows
      - WindowsServer
      - Android
      - iOS
      - Linux
      - macOS
      type: string
    pagination:
      example:
        offset: 6.027456183070403
        limit: 0.8008281904610115
        totalCount: 1.4658129805029452
      properties:
        limit:
          format: int64
          type: number
        offset:
          format: int64
          type: number
        totalCount:
          format: int64
          type: number
      required:
      - limit
      - offset
      - totalCount
      type: object
    password:
      maxLength: 100
      minLength: 5
      type: string
    passwordNullable:
      maxLength: 100
      minLength: 5
      nullable: true
      type: string
      x-nullable: true
    policyAdvice:
      example:
        isDialAllowed: true
        isBindAllowed: true
        identity:
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          name: name
          id: id
          entity: entity
        identityId: identityId
        service:
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          name: name
          id: id
          entity: entity
        serviceRouterCount: 6.027456183070403
        commonRouters:
        - _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          name: name
          isOnline: true
          id: id
          entity: entity
        - _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          name: name
          isOnline: true
          id: id
          entity: entity
        identityRouterCount: 0.8008281904610115
        serviceId: serviceId
      properties:
        commonRouters:
          items:
            $ref: "#/components/schemas/routerEntityRef"
          type: array
        identity:
          $ref: "#/components/schemas/entityRef"
        identityId:
          type: string
        identityRouterCount:
          format: int32
          type: number
        isBindAllowed:
          type: boolean
        isDialAllowed:
          type: boolean
        service:
          $ref: "#/components/schemas/entityRef"
        serviceId:
          type: string
        serviceRouterCount:
          format: int32
          type: number
      type: object
    policyFailure:
      example:
        checks:
        - postureCheckType: postureCheckType
          postureCheckId: postureCheckId
          postureCheckName: postureCheckName
        - postureCheckType: postureCheckType
          postureCheckId: postureCheckId
          postureCheckName: postureCheckName
        policyId: policyId
        policyName: policyName
      properties:
        checks:
          items:
            $ref: "#/components/schemas/postureCheckFailure"
          type: array
        policyId:
          type: string
        policyName:
          type: string
      type: object
    postureCheckCreate:
      discriminator:
        propertyName: typeId
      properties:
        name:
          type: string
        roleAttributes:
          description: A set of strings used to loosly couple this resource to policies
          items:
            type: string
          nullable: true
          type: array
          x-nullable: true
          x-omitempty: true
        tags:
          $ref: "#/components/schemas/tags"
        typeId:
          $ref: "#/components/schemas/postureCheckType"
      required:
      - name
      - typeId
      type: object
    postureCheckDetail:
      discriminator:
        propertyName: typeId
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        roleAttributes:
        - roleAttributes
        - roleAttributes
        _links:
          key:
            method: method
            comment: comment
            href: https://openapi-generator.tech
        name: name
        typeId: typeId
        id: id
        version: 0
        tags: {}
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        _links:
          additionalProperties:
            $ref: "#/components/schemas/link"
          description: A map of named links
          type: object
          x-omitempty: false
        createdAt:
          format: date-time
          type: string
        id:
          type: string
        name:
          type: string
        roleAttributes:
          description: A set of strings used to loosly couple this resource to policies
          items:
            type: string
          nullable: true
          type: array
          x-nullable: true
          x-omitempty: true
        tags:
          $ref: "#/components/schemas/tags"
        typeId:
          type: string
        updatedAt:
          format: date-time
          type: string
        version:
          type: integer
      required:
      - _links
      - createdAt
      - id
      - name
      - roleAttributes
      - tags
      - typeId
      - updatedAt
      - version
      type: object
    postureCheckDomainCreate:
      allOf:
      - $ref: "#/components/schemas/postureCheckCreate"
      - properties:
          domains:
            items:
              type: string
            minItems: 1
            type: array
        required:
        - domains
        type: object
      x-class: DOMAIN
    postureCheckDomainDetail:
      allOf:
      - $ref: "#/components/schemas/postureCheckDetail"
      - properties:
          domains:
            items:
              type: string
            minItems: 1
            type: array
        required:
        - domains
        type: object
      x-class: DOMAIN
    postureCheckDomainPatch:
      allOf:
      - $ref: "#/components/schemas/postureCheckPatch"
      - properties:
          domains:
            items:
              type: string
            minItems: 1
            type: array
        type: object
      x-class: DOMAIN
    postureCheckDomainUpdate:
      allOf:
      - $ref: "#/components/schemas/postureCheckUpdate"
      - properties:
          domains:
            items:
              type: string
            minItems: 1
            type: array
        required:
        - domains
        type: object
      x-class: DOMAIN
    postureCheckFailure:
      discriminator:
        propertyName: postureCheckType
      example:
        postureCheckType: postureCheckType
        postureCheckId: postureCheckId
        postureCheckName: postureCheckName
      properties:
        postureCheckId:
          type: string
        postureCheckName:
          type: string
        postureCheckType:
          type: string
      required:
      - postureCheckId
      - postureCheckName
      - postureCheckType
      type: object
    postureCheckFailureDomain:
      allOf:
      - $ref: "#/components/schemas/postureCheckFailure"
      - properties:
          actualValue:
            type: string
          expectedValue:
            items:
              type: string
            type: array
        required:
        - actualValue
        - expectedValue
        type: object
      x-class: DOMAIN
    postureCheckFailureMacAddress:
      allOf:
      - $ref: "#/components/schemas/postureCheckFailure"
      - properties:
          actualValue:
            items:
              type: string
            type: array
          expectedValue:
            items:
              type: string
            type: array
        required:
        - actualValue
        - expectedValue
        type: object
      x-class: MAC
    postureCheckFailureMfa:
      allOf:
      - $ref: "#/components/schemas/postureCheckFailure"
      - properties:
          actualValue:
            $ref: "#/components/schemas/postureChecksFailureMfaValues"
          criteria:
            $ref: "#/components/schemas/postureChecksFailureMfaCriteria"
          expectedValue:
            $ref: "#/components/schemas/postureChecksFailureMfaValues"
        required:
        - actualValue
        - criteria
        - expectedValue
        type: object
      x-class: MFA
    postureCheckFailureOperatingSystem:
      allOf:
      - $ref: "#/components/schemas/postureCheckFailure"
      - properties:
          actualValue:
            $ref: "#/components/schemas/postureCheckFailureOperatingSystemActual"
          expectedValue:
            items:
              $ref: "#/components/schemas/operatingSystem"
            minItems: 1
            type: array
        required:
        - actualValue
        - expectedValue
        type: object
      x-class: OS
    postureCheckFailureOperatingSystemActual:
      properties:
        type:
          type: string
        version:
          type: string
      required:
      - type
      - version
      type: object
    postureCheckFailureProcess:
      allOf:
      - $ref: "#/components/schemas/postureCheckFailure"
      - properties:
          actualValue:
            $ref: "#/components/schemas/postureCheckFailureProcessActual"
          expectedValue:
            $ref: "#/components/schemas/process"
        required:
        - actualValue
        - expectedValue
        type: object
      x-class: PROCESS
    postureCheckFailureProcessActual:
      properties:
        hash:
          type: string
        isRunning:
          type: boolean
        osType:
          $ref: "#/components/schemas/osType"
        path:
          type: string
        signerFingerprints:
          items:
            type: string
          type: array
      required:
      - hash
      - isRunning
      - signerFingerprints
      type: object
    postureCheckFailureProcessMulti:
      allOf:
      - $ref: "#/components/schemas/postureCheckFailure"
      - properties:
          actualValue:
            items:
              $ref: "#/components/schemas/postureCheckFailureProcessActual"
            type: array
          expectedValue:
            items:
              $ref: "#/components/schemas/processMulti"
            type: array
          semantic:
            $ref: "#/components/schemas/semantic"
        required:
        - actualValue
        - expectedValue
        - semantic
        type: object
      x-class: PROCESS_MULTI
    postureCheckMacAddressCreate:
      allOf:
      - $ref: "#/components/schemas/postureCheckCreate"
      - properties:
          macAddresses:
            items:
              type: string
            minItems: 1
            type: array
        required:
        - macAddresses
        type: object
      x-class: MAC
    postureCheckMacAddressDetail:
      allOf:
      - $ref: "#/components/schemas/postureCheckDetail"
      - properties:
          macAddresses:
            items:
              type: string
            minItems: 1
            type: array
        required:
        - macAddresses
        type: object
      x-class: MAC
    postureCheckMacAddressPatch:
      allOf:
      - $ref: "#/components/schemas/postureCheckPatch"
      - properties:
          macAddresses:
            items:
              type: string
            minItems: 1
            type: array
        type: object
      x-class: MAC
    postureCheckMacAddressUpdate:
      allOf:
      - $ref: "#/components/schemas/postureCheckUpdate"
      - properties:
          macAddresses:
            items:
              type: string
            minItems: 1
            type: array
        required:
        - macAddresses
        type: object
      x-class: MAC
    postureCheckMfaCreate:
      allOf:
      - $ref: "#/components/schemas/postureCheckCreate"
      - $ref: "#/components/schemas/postureCheckMfaProperties"
      x-class: MFA
    postureCheckMfaDetail:
      allOf:
      - $ref: "#/components/schemas/postureCheckDetail"
      - $ref: "#/components/schemas/postureCheckMfaProperties"
      x-class: MFA
    postureCheckMfaPatch:
      allOf:
      - $ref: "#/components/schemas/postureCheckPatch"
      - $ref: "#/components/schemas/postureCheckMfaPropertiesPatch"
      x-class: MFA
    postureCheckMfaProperties:
      properties:
        ignoreLegacyEndpoints:
          type: boolean
        promptOnUnlock:
          type: boolean
        promptOnWake:
          type: boolean
        timeoutSeconds:
          type: integer
      type: object
    postureCheckMfaPropertiesPatch:
      properties:
        ignoreLegacyEndpoints:
          nullable: true
          type: boolean
        promptOnUnlock:
          nullable: true
          type: boolean
        promptOnWake:
          nullable: true
          type: boolean
        timeoutSeconds:
          nullable: true
          type: integer
      type: object
    postureCheckMfaUpdate:
      allOf:
      - $ref: "#/components/schemas/postureCheckUpdate"
      - $ref: "#/components/schemas/postureCheckMfaProperties"
      x-class: MFA
    postureCheckOperatingSystemCreate:
      allOf:
      - $ref: "#/components/schemas/postureCheckCreate"
      - properties:
          operatingSystems:
            items:
              $ref: "#/components/schemas/operatingSystem"
            minItems: 1
            type: array
        required:
        - operatingSystems
        type: object
      x-class: OS
    postureCheckOperatingSystemDetail:
      allOf:
      - $ref: "#/components/schemas/postureCheckDetail"
      - properties:
          operatingSystems:
            items:
              $ref: "#/components/schemas/operatingSystem"
            type: array
        required:
        - operatingSystems
        type: object
      x-class: OS
    postureCheckOperatingSystemPatch:
      allOf:
      - $ref: "#/components/schemas/postureCheckPatch"
      - properties:
          operatingSystems:
            items:
              $ref: "#/components/schemas/operatingSystem"
            minItems: 1
            type: array
        type: object
      x-class: OS
    postureCheckOperatingSystemUpdate:
      allOf:
      - $ref: "#/components/schemas/postureCheckUpdate"
      - properties:
          operatingSystems:
            items:
              $ref: "#/components/schemas/operatingSystem"
            minItems: 1
            type: array
        required:
        - operatingSystems
        type: object
      x-class: OS
    postureCheckPatch:
      discriminator:
        propertyName: typeId
      properties:
        name:
          type: string
        roleAttributes:
          description: A set of strings used to loosly couple this resource to policies
          items:
            type: string
          nullable: true
          type: array
          x-nullable: true
          x-omitempty: true
        tags:
          $ref: "#/components/schemas/tags"
        typeId:
          $ref: "#/components/schemas/postureCheckType"
      required:
      - typeId
      type: object
    postureCheckProcessCreate:
      allOf:
      - $ref: "#/components/schemas/postureCheckCreate"
      - properties:
          process:
            $ref: "#/components/schemas/process"
        required:
        - process
        type: object
      x-class: PROCESS
    postureCheckProcessDetail:
      allOf:
      - $ref: "#/components/schemas/postureCheckDetail"
      - properties:
          process:
            $ref: "#/components/schemas/process"
        required:
        - process
        type: object
      x-class: PROCESS
    postureCheckProcessMultiCreate:
      allOf:
      - $ref: "#/components/schemas/postureCheckCreate"
      - properties:
          processes:
            items:
              $ref: "#/components/schemas/processMulti"
            minItems: 1
            type: array
          semantic:
            $ref: "#/components/schemas/semantic"
        required:
        - processes
        - semantic
        type: object
      x-class: PROCESS_MULTI
    postureCheckProcessMultiDetail:
      allOf:
      - $ref: "#/components/schemas/postureCheckDetail"
      - properties:
          processes:
            items:
              $ref: "#/components/schemas/processMulti"
            minItems: 1
            type: array
          semantic:
            $ref: "#/components/schemas/semantic"
        required:
        - processes
        - semantic
        type: object
      x-class: PROCESS_MULTI
    postureCheckProcessMultiPatch:
      allOf:
      - $ref: "#/components/schemas/postureCheckPatch"
      - properties:
          processes:
            items:
              $ref: "#/components/schemas/processMulti"
            minItems: 1
            type: array
          semantic:
            $ref: "#/components/schemas/semantic"
        type: object
      x-class: PROCESS_MULTI
    postureCheckProcessMultiUpdate:
      allOf:
      - $ref: "#/components/schemas/postureCheckUpdate"
      - properties:
          processes:
            items:
              $ref: "#/components/schemas/processMulti"
            minItems: 1
            type: array
          semantic:
            $ref: "#/components/schemas/semantic"
        required:
        - processes
        - semantic
        type: object
      x-class: PROCESS_MULTI
    postureCheckProcessPatch:
      allOf:
      - $ref: "#/components/schemas/postureCheckPatch"
      - properties:
          process:
            $ref: "#/components/schemas/process"
        type: object
      x-class: PROCESS
    postureCheckProcessUpdate:
      allOf:
      - $ref: "#/components/schemas/postureCheckUpdate"
      - properties:
          process:
            $ref: "#/components/schemas/process"
        required:
        - process
        type: object
      x-class: PROCESS
    postureCheckType:
      enum:
      - OS
      - PROCESS
      - DOMAIN
      - MAC
      - MFA
      - PROCESS_MULTI
      type: string
    postureCheckTypeDetail:
      allOf:
      - $ref: "#/components/schemas/baseEntity"
      - properties:
          name:
            type: string
          operatingSystems:
            items:
              $ref: "#/components/schemas/operatingSystem"
            type: array
          version:
            type: string
        required:
        - name
        - operatingSystems
        - version
        type: object
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        operatingSystems:
        - versions:
          - versions
          - versions
          type: Windows
        - versions:
          - versions
          - versions
          type: Windows
        _links:
          key:
            method: method
            comment: comment
            href: https://openapi-generator.tech
        name: name
        id: id
        version: version
        tags: {}
        updatedAt: 2000-01-23T04:56:07.000+00:00
    postureCheckTypeList:
      items:
        $ref: "#/components/schemas/postureCheckTypeDetail"
      type: array
    postureCheckUpdate:
      discriminator:
        propertyName: typeId
      properties:
        name:
          type: string
        roleAttributes:
          description: A set of strings used to loosly couple this resource to policies
          items:
            type: string
          nullable: true
          type: array
          x-nullable: true
          x-omitempty: true
        tags:
          $ref: "#/components/schemas/tags"
        typeId:
          $ref: "#/components/schemas/postureCheckType"
      required:
      - name
      type: object
    postureChecksFailureMfaCriteria:
      properties:
        passedMfaAt:
          format: date-time
          type: string
        timeoutRemainingSeconds:
          type: integer
        timeoutSeconds:
          type: integer
        unlockedAt:
          format: date-time
          type: string
        wokenAt:
          format: date-time
          type: string
      required:
      - passedMfaAt
      - timeoutRemainingSeconds
      - timeoutSeconds
      - unlockedAt
      - wokenAt
      type: object
    postureChecksFailureMfaValues:
      properties:
        passedMfa:
          type: boolean
          x-omitempty: false
        passedOnUnlock:
          type: boolean
          x-omitempty: false
        passedOnWake:
          type: boolean
          x-omitempty: false
        timedOut:
          type: boolean
          x-omitempty: false
      type: object
    postureData:
      example:
        processes:
        - timedOut: true
          lastUpdatedAt: 2000-01-23T04:56:07.000+00:00
          postureCheckId: postureCheckId
          isRunning: true
          signerFingerprints:
          - signerFingerprints
          - signerFingerprints
          binaryHash: binaryHash
        - timedOut: true
          lastUpdatedAt: 2000-01-23T04:56:07.000+00:00
          postureCheckId: postureCheckId
          isRunning: true
          signerFingerprints:
          - signerFingerprints
          - signerFingerprints
          binaryHash: binaryHash
        os:
          timedOut: true
          lastUpdatedAt: 2000-01-23T04:56:07.000+00:00
          postureCheckId: postureCheckId
          build: build
          type: type
          version: version
        apiSessionPostureData:
          key:
            endpointState:
              unlockedAt: 2000-01-23T04:56:07.000+00:00
              wokenAt: 2000-01-23T04:56:07.000+00:00
            mfa:
              passedOnUnlock: true
              passedAt: 2000-01-23T04:56:07.000+00:00
              passedMfa: true
              passedOnWake: true
              apiSessionId: apiSessionId
            sdkInfo:
              appVersion: appVersion
              appId: appId
              type: type
              branch: branch
              version: version
              revision: revision
        domain:
          timedOut: true
          lastUpdatedAt: 2000-01-23T04:56:07.000+00:00
          postureCheckId: postureCheckId
          domain: domain
        mac:
          addresses:
          - addresses
          - addresses
          timedOut: true
          lastUpdatedAt: 2000-01-23T04:56:07.000+00:00
          postureCheckId: postureCheckId
      properties:
        apiSessionPostureData:
          additionalProperties:
            $ref: "#/components/schemas/apiSessionPostureData"
          type: object
        domain:
          $ref: "#/components/schemas/postureDataDomain"
        mac:
          $ref: "#/components/schemas/postureDataMac"
        os:
          $ref: "#/components/schemas/postureDataOs"
        processes:
          items:
            $ref: "#/components/schemas/postureDataProcess"
          type: array
      required:
      - apiSessionPostureData
      - domain
      - mac
      - os
      - processes
      type: object
    postureDataBase:
      properties:
        lastUpdatedAt:
          format: date-time
          type: string
        postureCheckId:
          type: string
        timedOut:
          type: boolean
      required:
      - lastUpdatedAt
      - postureCheckId
      - timedOut
      type: object
    postureDataDomain:
      allOf:
      - $ref: "#/components/schemas/postureDataBase"
      - properties:
          domain:
            type: string
        required:
        - domain
        type: object
      example:
        timedOut: true
        lastUpdatedAt: 2000-01-23T04:56:07.000+00:00
        postureCheckId: postureCheckId
        domain: domain
    postureDataEndpointState:
      example:
        unlockedAt: 2000-01-23T04:56:07.000+00:00
        wokenAt: 2000-01-23T04:56:07.000+00:00
      properties:
        unlockedAt:
          format: date-time
          type: string
        wokenAt:
          format: date-time
          type: string
      required:
      - unlockedAt
      - wokenAt
      type: object
    postureDataEnvelope:
      example:
        data:
          processes:
          - timedOut: true
            lastUpdatedAt: 2000-01-23T04:56:07.000+00:00
            postureCheckId: postureCheckId
            isRunning: true
            signerFingerprints:
            - signerFingerprints
            - signerFingerprints
            binaryHash: binaryHash
          - timedOut: true
            lastUpdatedAt: 2000-01-23T04:56:07.000+00:00
            postureCheckId: postureCheckId
            isRunning: true
            signerFingerprints:
            - signerFingerprints
            - signerFingerprints
            binaryHash: binaryHash
          os:
            timedOut: true
            lastUpdatedAt: 2000-01-23T04:56:07.000+00:00
            postureCheckId: postureCheckId
            build: build
            type: type
            version: version
          apiSessionPostureData:
            key:
              endpointState:
                unlockedAt: 2000-01-23T04:56:07.000+00:00
                wokenAt: 2000-01-23T04:56:07.000+00:00
              mfa:
                passedOnUnlock: true
                passedAt: 2000-01-23T04:56:07.000+00:00
                passedMfa: true
                passedOnWake: true
                apiSessionId: apiSessionId
              sdkInfo:
                appVersion: appVersion
                appId: appId
                type: type
                branch: branch
                version: version
                revision: revision
          domain:
            timedOut: true
            lastUpdatedAt: 2000-01-23T04:56:07.000+00:00
            postureCheckId: postureCheckId
            domain: domain
          mac:
            addresses:
            - addresses
            - addresses
            timedOut: true
            lastUpdatedAt: 2000-01-23T04:56:07.000+00:00
            postureCheckId: postureCheckId
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          $ref: "#/components/schemas/postureData"
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    postureDataMac:
      allOf:
      - $ref: "#/components/schemas/postureDataBase"
      - properties:
          addresses:
            items:
              type: string
            type: array
        required:
        - addresses
        type: object
      example:
        addresses:
        - addresses
        - addresses
        timedOut: true
        lastUpdatedAt: 2000-01-23T04:56:07.000+00:00
        postureCheckId: postureCheckId
    postureDataMfa:
      example:
        passedOnUnlock: true
        passedAt: 2000-01-23T04:56:07.000+00:00
        passedMfa: true
        passedOnWake: true
        apiSessionId: apiSessionId
      properties:
        apiSessionId:
          type: string
        passedAt:
          format: date-time
          type: string
          x-omitempty: false
        passedMfa:
          type: boolean
          x-omitempty: false
        passedOnUnlock:
          type: boolean
          x-omitempty: false
        passedOnWake:
          type: boolean
          x-omitempty: false
      required:
      - apiSessionId
      - passedAt
      - passedMfa
      - passedOnUnlock
      - passedOnWake
      type: object
    postureDataOs:
      allOf:
      - $ref: "#/components/schemas/postureDataBase"
      - properties:
          build:
            type: string
          type:
            type: string
          version:
            type: string
        required:
        - build
        - type
        - version
        type: object
      example:
        timedOut: true
        lastUpdatedAt: 2000-01-23T04:56:07.000+00:00
        postureCheckId: postureCheckId
        build: build
        type: type
        version: version
    postureDataProcess:
      allOf:
      - $ref: "#/components/schemas/postureDataBase"
      - properties:
          binaryHash:
            type: string
          isRunning:
            type: boolean
          signerFingerprints:
            items:
              type: string
            type: array
        type: object
      example:
        timedOut: true
        lastUpdatedAt: 2000-01-23T04:56:07.000+00:00
        postureCheckId: postureCheckId
        isRunning: true
        signerFingerprints:
        - signerFingerprints
        - signerFingerprints
        binaryHash: binaryHash
    postureQueries:
      example:
        policyId: policyId
        postureQueries:
        - timeoutRemaining: 1
          createdAt: 2000-01-23T04:56:07.000+00:00
          process:
            path: path
            osType: Windows
          processes:
          - path: path
            osType: Windows
          - path: path
            osType: Windows
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          id: id
          isPassing: true
          timeout: 6
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
          queryType: OS
        - timeoutRemaining: 1
          createdAt: 2000-01-23T04:56:07.000+00:00
          process:
            path: path
            osType: Windows
          processes:
          - path: path
            osType: Windows
          - path: path
            osType: Windows
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          id: id
          isPassing: true
          timeout: 6
          tags: {}
          updatedAt: 2000-01-23T04:56:07.000+00:00
          queryType: OS
        policyType: null
        isPassing: true
      properties:
        isPassing:
          type: boolean
        policyId:
          type: string
        policyType:
          $ref: "#/components/schemas/dialBind"
        postureQueries:
          items:
            $ref: "#/components/schemas/postureQuery"
          type: array
      required:
      - isPassing
      - policyId
      - postureQueries
      type: object
    postureQuery:
      allOf:
      - $ref: "#/components/schemas/baseEntity"
      - properties:
          isPassing:
            type: boolean
          process:
            $ref: "#/components/schemas/postureQueryProcess"
          processes:
            items:
              $ref: "#/components/schemas/postureQueryProcess"
            type: array
          queryType:
            $ref: "#/components/schemas/postureCheckType"
          timeout:
            type: integer
          timeoutRemaining:
            type: integer
        required:
        - isPassing
        - queryType
        - timeout
        - timeoutRemaining
        type: object
      example:
        timeoutRemaining: 1
        createdAt: 2000-01-23T04:56:07.000+00:00
        process:
          path: path
          osType: Windows
        processes:
        - path: path
          osType: Windows
        - path: path
          osType: Windows
        _links:
          key:
            method: method
            comment: comment
            href: https://openapi-generator.tech
        id: id
        isPassing: true
        timeout: 6
        tags: {}
        updatedAt: 2000-01-23T04:56:07.000+00:00
        queryType: OS
    postureQueryProcess:
      example:
        path: path
        osType: Windows
      properties:
        osType:
          $ref: "#/components/schemas/osType"
        path:
          type: string
      type: object
    process:
      properties:
        hashes:
          items:
            type: string
          type: array
        osType:
          $ref: "#/components/schemas/osType"
        path:
          type: string
        signerFingerprint:
          type: string
      required:
      - osType
      - path
      type: object
    processMulti:
      properties:
        hashes:
          items:
            type: string
          type: array
        osType:
          $ref: "#/components/schemas/osType"
        path:
          type: string
        signerFingerprints:
          items:
            type: string
          type: array
      required:
      - osType
      - path
      type: object
    reEnroll:
      properties:
        expiresAt:
          format: date-time
          type: string
      required:
      - expiresAt
      type: object
    roleAttributesList:
      description: An array of role attributes
      items:
        type: string
      type: array
    roles:
      items:
        type: string
      type: array
      x-omitempty: false
    routerCreate:
      properties:
        cost:
          maximum: 65535
          minimum: 0
          nullable: true
          type: integer
        disabled:
          nullable: true
          type: boolean
        name:
          type: string
        noTraversal:
          nullable: true
          type: boolean
        tags:
          $ref: "#/components/schemas/tags"
      required:
      - name
      type: object
    routerDetail:
      allOf:
      - $ref: "#/components/schemas/baseEntity"
      - properties:
          cost:
            maximum: 65535
            minimum: 0
            type: integer
          disabled:
            type: boolean
          enrollmentCreatedAt:
            format: date-time
            nullable: true
            type: string
          enrollmentExpiresAt:
            format: date-time
            nullable: true
            type: string
          enrollmentJwt:
            nullable: true
            type: string
          enrollmentToken:
            nullable: true
            type: string
          fingerprint:
            type: string
          isOnline:
            type: boolean
          isVerified:
            type: boolean
          name:
            type: string
          noTraversal:
            type: boolean
          unverifiedCertPem:
            nullable: true
            type: string
            x-omitempty: false
          unverifiedFingerprint:
            nullable: true
            type: string
            x-omitempty: false
        required:
        - cost
        - disabled
        - fingerprint
        - isOnline
        - isVerified
        - name
        - noTraversal
        type: object
      example:
        unverifiedFingerprint: unverifiedFingerprint
        enrollmentCreatedAt: 2000-01-23T04:56:07.000+00:00
        cost: 5248
        _links:
          key:
            method: method
            comment: comment
            href: https://openapi-generator.tech
        isVerified: true
        unverifiedCertPem: unverifiedCertPem
        noTraversal: true
        isOnline: true
        tags: {}
        createdAt: 2000-01-23T04:56:07.000+00:00
        enrollmentToken: enrollmentToken
        enrollmentExpiresAt: 2000-01-23T04:56:07.000+00:00
        fingerprint: fingerprint
        name: name
        disabled: true
        id: id
        enrollmentJwt: enrollmentJwt
        updatedAt: 2000-01-23T04:56:07.000+00:00
    routerEntityRef:
      allOf:
      - $ref: "#/components/schemas/entityRef"
      - properties:
          isOnline:
            type: boolean
        required:
        - isOnline
        type: object
      example:
        _links:
          key:
            method: method
            comment: comment
            href: https://openapi-generator.tech
        name: name
        isOnline: true
        id: id
        entity: entity
    routerList:
      items:
        $ref: "#/components/schemas/routerDetail"
      type: array
    routerPatch:
      properties:
        cost:
          maximum: 65535
          minimum: 0
          nullable: true
          type: integer
        disabled:
          nullable: true
          type: boolean
        name:
          type: string
        noTraversal:
          nullable: true
          type: boolean
        tags:
          $ref: "#/components/schemas/tags"
      type: object
    routerUpdate:
      properties:
        cost:
          maximum: 65535
          minimum: 0
          nullable: true
          type: integer
        disabled:
          nullable: true
          type: boolean
        name:
          type: string
        noTraversal:
          nullable: true
          type: boolean
        tags:
          $ref: "#/components/schemas/tags"
      required:
      - name
      type: object
    sdkInfo:
      description: SDK information an authenticating client may provide
      example:
        appVersion: appVersion
        appId: appId
        type: type
        branch: branch
        version: version
        revision: revision
      properties:
        appId:
          maxLength: 255
          type: string
        appVersion:
          maxLength: 255
          type: string
        branch:
          maxLength: 255
          type: string
        revision:
          maxLength: 255
          type: string
        type:
          maxLength: 255
          type: string
        version:
          maxLength: 255
          type: string
      type: object
    semantic:
      enum:
      - AllOf
      - AnyOf
      type: string
    serviceConfigAssign:
      properties:
        configId:
          type: string
        serviceId:
          type: string
      required:
      - configId
      - serviceId
      type: object
    serviceConfigDetail:
      example:
        config:
          _links:
            self:
              href: ./identities/13347602-ba34-4ff7-8082-e533ba945744
          id: 13347602-ba34-4ff7-8082-e533ba945744
          name: test-config-02fade09-fcc3-426c-854e-18539726bdc6
          urlName: configs
        service:
          _links:
            self:
              href: ./services/913a8c63-17a6-44d7-82b3-9f6eb997cf8e
          id: 913a8c63-17a6-44d7-82b3-9f6eb997cf8e
          name: netcat4545-egress-r2
          urlName: services
      properties:
        config:
          $ref: "#/components/schemas/entityRef"
        configId:
          type: string
        service:
          $ref: "#/components/schemas/entityRef"
        serviceId:
          type: string
      required:
      - config
      - configId
      - service
      - serviceId
      type: object
    serviceConfigList:
      items:
        $ref: "#/components/schemas/serviceConfigDetail"
      type: array
    serviceConfigsAssignList:
      items:
        $ref: "#/components/schemas/serviceConfigAssign"
      type: array
    serviceCreate:
      properties:
        configs:
          items:
            type: string
          type: array
        encryptionRequired:
          description: Describes whether connections must support end-to-end encryption
            on both sides of the connection.
          type: boolean
        maxIdleTimeMillis:
          type: integer
        name:
          type: string
        roleAttributes:
          items:
            type: string
          type: array
        tags:
          $ref: "#/components/schemas/tags"
        terminatorStrategy:
          type: string
      required:
      - encryptionRequired
      - name
      type: object
    serviceDetail:
      allOf:
      - $ref: "#/components/schemas/baseEntity"
      - properties:
          config:
            additionalProperties:
              additionalProperties:
                properties: {}
                type: object
              type: object
            description: map of config data for this service keyed by the config type
              name. Only configs of the types requested will be returned.
            type: object
          configs:
            items:
              type: string
            type: array
          encryptionRequired:
            description: "Describes whether connections must support end-to-end encryption\
              \ on both sides of the connection. Read-only property, set at create."
            type: boolean
          maxIdleTimeMillis:
            type: integer
          name:
            type: string
          permissions:
            $ref: "#/components/schemas/dialBindArray"
          postureQueries:
            items:
              $ref: "#/components/schemas/postureQueries"
            type: array
          roleAttributes:
            $ref: "#/components/schemas/attributes"
          terminatorStrategy:
            type: string
        required:
        - config
        - configs
        - encryptionRequired
        - maxIdleTimeMillis
        - name
        - permissions
        - postureQueries
        - roleAttributes
        - terminatorStrategy
        type: object
      example:
        maxIdleTimeMillis: 0
        configs:
        - configs
        - configs
        _links:
          key:
            method: method
            comment: comment
            href: https://openapi-generator.tech
        encryptionRequired: true
        terminatorStrategy: terminatorStrategy
        tags: {}
        createdAt: 2000-01-23T04:56:07.000+00:00
        roleAttributes:
        - null
        - null
        postureQueries:
        - policyId: policyId
          postureQueries:
          - timeoutRemaining: 1
            createdAt: 2000-01-23T04:56:07.000+00:00
            process:
              path: path
              osType: Windows
            processes:
            - path: path
              osType: Windows
            - path: path
              osType: Windows
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            id: id
            isPassing: true
            timeout: 6
            tags: {}
            updatedAt: 2000-01-23T04:56:07.000+00:00
            queryType: OS
          - timeoutRemaining: 1
            createdAt: 2000-01-23T04:56:07.000+00:00
            process:
              path: path
              osType: Windows
            processes:
            - path: path
              osType: Windows
            - path: path
              osType: Windows
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            id: id
            isPassing: true
            timeout: 6
            tags: {}
            updatedAt: 2000-01-23T04:56:07.000+00:00
            queryType: OS
          policyType: null
          isPassing: true
        - policyId: policyId
          postureQueries:
          - timeoutRemaining: 1
            createdAt: 2000-01-23T04:56:07.000+00:00
            process:
              path: path
              osType: Windows
            processes:
            - path: path
              osType: Windows
            - path: path
              osType: Windows
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            id: id
            isPassing: true
            timeout: 6
            tags: {}
            updatedAt: 2000-01-23T04:56:07.000+00:00
            queryType: OS
          - timeoutRemaining: 1
            createdAt: 2000-01-23T04:56:07.000+00:00
            process:
              path: path
              osType: Windows
            processes:
            - path: path
              osType: Windows
            - path: path
              osType: Windows
            _links:
              key:
                method: method
                comment: comment
                href: https://openapi-generator.tech
            id: id
            isPassing: true
            timeout: 6
            tags: {}
            updatedAt: 2000-01-23T04:56:07.000+00:00
            queryType: OS
          policyType: null
          isPassing: true
        permissions:
        - Dial
        - Dial
        name: name
        id: id
        config:
          key:
            key: "{}"
        updatedAt: 2000-01-23T04:56:07.000+00:00
    serviceEdgeRouterPolicyCreate:
      properties:
        edgeRouterRoles:
          items:
            type: string
          type: array
          x-omitempty: false
        name:
          type: string
        semantic:
          $ref: "#/components/schemas/semantic"
        serviceRoles:
          items:
            type: string
          type: array
          x-omitempty: false
        tags:
          $ref: "#/components/schemas/tags"
      required:
      - name
      - semantic
      type: object
    serviceEdgeRouterPolicyDetail:
      allOf:
      - $ref: "#/components/schemas/baseEntity"
      - properties:
          edgeRouterRoles:
            $ref: "#/components/schemas/roles"
          edgeRouterRolesDisplay:
            $ref: "#/components/schemas/namedRoles"
          name:
            type: string
          semantic:
            $ref: "#/components/schemas/semantic"
          serviceRoles:
            $ref: "#/components/schemas/roles"
          serviceRolesDisplay:
            $ref: "#/components/schemas/namedRoles"
        required:
        - edgeRouterRoles
        - edgeRouterRolesDisplay
        - name
        - semantic
        - serviceRoles
        - serviceRolesDisplay
        type: object
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        edgeRouterRolesDisplay:
        - role: role
          name: name
        - role: role
          name: name
        semantic: AllOf
        serviceRoles: null
        _links:
          key:
            method: method
            comment: comment
            href: https://openapi-generator.tech
        serviceRolesDisplay: null
        edgeRouterRoles:
        - null
        - null
        name: name
        id: id
        tags: {}
        updatedAt: 2000-01-23T04:56:07.000+00:00
    serviceEdgeRouterPolicyList:
      items:
        $ref: "#/components/schemas/serviceEdgeRouterPolicyDetail"
      type: array
    serviceEdgeRouterPolicyPatch:
      properties:
        edgeRouterRoles:
          items:
            type: string
          type: array
          x-omitempty: false
        name:
          type: string
        semantic:
          $ref: "#/components/schemas/semantic"
        serviceRoles:
          items:
            type: string
          type: array
          x-omitempty: false
        tags:
          $ref: "#/components/schemas/tags"
      type: object
    serviceEdgeRouterPolicyUpdate:
      properties:
        edgeRouterRoles:
          items:
            type: string
          type: array
          x-omitempty: false
        name:
          type: string
        semantic:
          $ref: "#/components/schemas/semantic"
        serviceRoles:
          items:
            type: string
          type: array
          x-omitempty: false
        tags:
          $ref: "#/components/schemas/tags"
      required:
      - name
      - semantic
      type: object
    serviceList:
      items:
        $ref: "#/components/schemas/serviceDetail"
      type: array
    servicePatch:
      properties:
        configs:
          items:
            type: string
          type: array
        encryptionRequired:
          description: "Describes whether connections must support end-to-end encryption\
            \ on both sides of the connection. Read-only property, set at create."
          type: boolean
        maxIdleTimeMillis:
          type: integer
        name:
          type: string
        roleAttributes:
          items:
            type: string
          type: array
        tags:
          $ref: "#/components/schemas/tags"
        terminatorStrategy:
          type: string
      type: object
    servicePolicyCreate:
      properties:
        identityRoles:
          items:
            type: string
          type: array
          x-omitempty: false
        name:
          type: string
        postureCheckRoles:
          items:
            type: string
          type: array
          x-omitempty: false
        semantic:
          $ref: "#/components/schemas/semantic"
        serviceRoles:
          items:
            type: string
          type: array
          x-omitempty: false
        tags:
          $ref: "#/components/schemas/tags"
        type:
          $ref: "#/components/schemas/dialBind"
      required:
      - name
      - semantic
      - type
      type: object
    servicePolicyDetail:
      allOf:
      - $ref: "#/components/schemas/baseEntity"
      - properties:
          identityRoles:
            $ref: "#/components/schemas/roles"
          identityRolesDisplay:
            $ref: "#/components/schemas/namedRoles"
          name:
            type: string
          postureCheckRoles:
            $ref: "#/components/schemas/roles"
          postureCheckRolesDisplay:
            $ref: "#/components/schemas/namedRoles"
          semantic:
            $ref: "#/components/schemas/semantic"
          serviceRoles:
            $ref: "#/components/schemas/roles"
          serviceRolesDisplay:
            $ref: "#/components/schemas/namedRoles"
          type:
            $ref: "#/components/schemas/dialBind"
        required:
        - identityRoles
        - identityRolesDisplay
        - name
        - postureCheckRoles
        - postureCheckRolesDisplay
        - semantic
        - serviceRoles
        - serviceRolesDisplay
        - type
        type: object
      example:
        semantic: AllOf
        _links:
          key:
            method: method
            comment: comment
            href: https://openapi-generator.tech
        serviceRolesDisplay: null
        type: Dial
        tags: {}
        createdAt: 2000-01-23T04:56:07.000+00:00
        postureCheckRoles: null
        identityRoles:
        - null
        - null
        identityRolesDisplay:
        - role: role
          name: name
        - role: role
          name: name
        serviceRoles: null
        name: name
        id: id
        postureCheckRolesDisplay: null
        updatedAt: 2000-01-23T04:56:07.000+00:00
    servicePolicyList:
      items:
        $ref: "#/components/schemas/servicePolicyDetail"
      type: array
    servicePolicyPatch:
      properties:
        identityRoles:
          items:
            type: string
          type: array
          x-omitempty: false
        name:
          type: string
        postureCheckRoles:
          items:
            type: string
          type: array
          x-omitempty: false
        semantic:
          $ref: "#/components/schemas/semantic"
        serviceRoles:
          items:
            type: string
          type: array
          x-omitempty: false
        tags:
          $ref: "#/components/schemas/tags"
        type:
          $ref: "#/components/schemas/dialBind"
      type: object
    servicePolicyUpdate:
      properties:
        identityRoles:
          items:
            type: string
          type: array
          x-omitempty: false
        name:
          type: string
        postureCheckRoles:
          items:
            type: string
          type: array
          x-omitempty: false
        semantic:
          $ref: "#/components/schemas/semantic"
        serviceRoles:
          items:
            type: string
          type: array
          x-omitempty: false
        tags:
          $ref: "#/components/schemas/tags"
        type:
          $ref: "#/components/schemas/dialBind"
      required:
      - name
      - semantic
      - type
      type: object
    serviceUpdate:
      properties:
        configs:
          items:
            type: string
          type: array
        encryptionRequired:
          description: "Describes whether connections must support end-to-end encryption\
            \ on both sides of the connection. Read-only property, set at create."
          type: boolean
        maxIdleTimeMillis:
          type: integer
        name:
          type: string
        roleAttributes:
          items:
            type: string
          type: array
        tags:
          $ref: "#/components/schemas/tags"
        terminatorStrategy:
          type: string
      required:
      - name
      type: object
    sessionDetail:
      allOf:
      - $ref: "#/components/schemas/baseEntity"
      - properties:
          apiSession:
            $ref: "#/components/schemas/entityRef"
          apiSessionId:
            type: string
          edgeRouters:
            items:
              $ref: "#/components/schemas/sessionEdgeRouter"
            type: array
          identityId:
            type: string
          service:
            $ref: "#/components/schemas/entityRef"
          serviceId:
            type: string
          token:
            type: string
          type:
            $ref: "#/components/schemas/dialBind"
        required:
        - apiSession
        - apiSessionId
        - edgeRouters
        - identityId
        - service
        - serviceId
        - token
        - type
        type: object
    sessionEdgeRouter:
      allOf:
      - $ref: "#/components/schemas/commonEdgeRouterProperties"
      - properties:
          urls:
            additionalProperties:
              type: string
            type: object
        required:
        - urls
        type: object
      example:
        hostname: hostname
        urls:
          key: urls
        cost: 5248
        name: name
        noTraversal: true
        disabled: true
        isOnline: true
        supportedProtocols:
          key: supportedProtocols
        appData: {}
        syncStatus: syncStatus
    sessionManagementDetail:
      allOf:
      - $ref: "#/components/schemas/sessionDetail"
      - properties:
          servicePolicies:
            items:
              $ref: "#/components/schemas/entityRef"
            type: array
        type: object
      example:
        _links:
          key:
            method: method
            comment: comment
            href: https://openapi-generator.tech
        type: Dial
        tags: {}
        token: token
        createdAt: 2000-01-23T04:56:07.000+00:00
        apiSession:
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          name: name
          id: id
          entity: entity
        edgeRouters:
        - hostname: hostname
          urls:
            key: urls
          cost: 5248
          name: name
          noTraversal: true
          disabled: true
          isOnline: true
          supportedProtocols:
            key: supportedProtocols
          appData: {}
          syncStatus: syncStatus
        - hostname: hostname
          urls:
            key: urls
          cost: 5248
          name: name
          noTraversal: true
          disabled: true
          isOnline: true
          supportedProtocols:
            key: supportedProtocols
          appData: {}
          syncStatus: syncStatus
        identityId: identityId
        service:
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          name: name
          id: id
          entity: entity
        servicePolicies:
        - _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          name: name
          id: id
          entity: entity
        - _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          name: name
          id: id
          entity: entity
        id: id
        serviceId: serviceId
        apiSessionId: apiSessionId
        updatedAt: 2000-01-23T04:56:07.000+00:00
    sessionManagementList:
      items:
        $ref: "#/components/schemas/sessionManagementDetail"
      type: array
    sessionRoutePathDetail:
      example:
        routePath:
        - routePath
        - routePath
      properties:
        routePath:
          items:
            type: string
          type: array
      type: object
    specBodyDetail:
      type: string
    specDetail:
      allOf:
      - $ref: "#/components/schemas/baseEntity"
      - properties:
          name:
            type: string
        required:
        - name
        type: object
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        _links:
          key:
            method: method
            comment: comment
            href: https://openapi-generator.tech
        name: name
        id: id
        tags: {}
        updatedAt: 2000-01-23T04:56:07.000+00:00
    specList:
      items:
        $ref: "#/components/schemas/specDetail"
      type: array
    subTags:
      additionalProperties:
        properties: {}
        type: object
      type: object
    tags:
      allOf:
      - $ref: "#/components/schemas/subTags"
      description: "A map of user defined fields and values. The values are limited\
        \ to the following types/values: null, string, boolean"
      example: {}
    targetToken:
      description: Defines the target token type
      enum:
      - ACCESS
      - ID
      nullable: true
      type: string
      x-nullable: true
    terminatorCost:
      maximum: 65535
      minimum: 0
      type: integer
    terminatorCostMap:
      additionalProperties:
        $ref: "#/components/schemas/terminatorCost"
      type: object
    terminatorCreate:
      properties:
        address:
          type: string
        binding:
          type: string
        cost:
          maximum: 65535
          minimum: 0
          type: integer
        identity:
          type: string
        identitySecret:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        precedence:
          $ref: "#/components/schemas/terminatorPrecedence"
        router:
          type: string
        service:
          type: string
        tags:
          $ref: "#/components/schemas/tags"
      required:
      - address
      - binding
      - router
      - service
      type: object
    terminatorDetail:
      allOf:
      - $ref: "#/components/schemas/baseEntity"
      - properties:
          address:
            type: string
          binding:
            type: string
          cost:
            $ref: "#/components/schemas/terminatorCost"
          dynamicCost:
            $ref: "#/components/schemas/terminatorCost"
          identity:
            type: string
          precedence:
            $ref: "#/components/schemas/terminatorPrecedence"
          router:
            $ref: "#/components/schemas/entityRef"
          routerId:
            type: string
          service:
            $ref: "#/components/schemas/entityRef"
          serviceId:
            type: string
        required:
        - address
        - binding
        - cost
        - dynamicCost
        - identity
        - precedence
        - router
        - routerId
        - service
        - serviceId
        type: object
      example:
        dynamicCost: null
        address: address
        cost: null
        _links:
          key:
            method: method
            comment: comment
            href: https://openapi-generator.tech
        binding: binding
        precedence: default
        tags: {}
        createdAt: 2000-01-23T04:56:07.000+00:00
        router:
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          name: name
          id: id
          entity: entity
        identity: identity
        routerId: routerId
        service:
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          name: name
          id: id
          entity: entity
        id: id
        serviceId: serviceId
        updatedAt: 2000-01-23T04:56:07.000+00:00
    terminatorList:
      items:
        $ref: "#/components/schemas/terminatorDetail"
      type: array
    terminatorPatch:
      properties:
        address:
          type: string
        binding:
          type: string
        cost:
          maximum: 65535
          minimum: 0
          type: integer
        precedence:
          $ref: "#/components/schemas/terminatorPrecedence"
        router:
          type: string
        service:
          type: string
        tags:
          $ref: "#/components/schemas/tags"
      type: object
    terminatorPrecedence:
      enum:
      - default
      - required
      - failed
      type: string
    terminatorPrecedenceMap:
      additionalProperties:
        $ref: "#/components/schemas/terminatorPrecedence"
      type: object
    terminatorUpdate:
      properties:
        address:
          type: string
        binding:
          type: string
        cost:
          maximum: 65535
          minimum: 0
          type: integer
        precedence:
          $ref: "#/components/schemas/terminatorPrecedence"
        router:
          type: string
        service:
          type: string
        tags:
          $ref: "#/components/schemas/tags"
      required:
      - address
      - binding
      - router
      - service
      type: object
    traceDetail:
      example:
        traceId: traceId
        until: 2000-01-23T04:56:07.000+00:00
        enabled: true
      properties:
        enabled:
          type: boolean
        traceId:
          type: string
        until:
          format: date-time
          type: string
      type: object
    traceDetailEnvelope:
      example:
        data:
          traceId: traceId
          until: 2000-01-23T04:56:07.000+00:00
          enabled: true
        meta:
          apiEnrollmentVersion: apiEnrollmentVersion
          apiVersion: apiVersion
          pagination:
            offset: 6.027456183070403
            limit: 0.8008281904610115
            totalCount: 1.4658129805029452
          filterableFields:
          - filterableFields
          - filterableFields
      properties:
        data:
          $ref: "#/components/schemas/traceDetail"
        meta:
          $ref: "#/components/schemas/meta"
      required:
      - data
      - meta
      type: object
    traceSpec:
      properties:
        channels:
          items:
            type: string
          type: array
        duration:
          type: string
        enabled:
          type: boolean
        traceId:
          type: string
      type: object
    username:
      maxLength: 100
      minLength: 4
      type: string
    usernameNullable:
      maxLength: 100
      minLength: 4
      nullable: true
      type: string
      x-nullable: true
    version:
      example:
        runtimeVersion: go1.13.5
        capabilities:
        - capabilities
        - capabilities
        apiVersions:
          key:
            key:
              path: path
              apiBaseUrls:
              - apiBaseUrls
              - apiBaseUrls
              version: version
        buildDate: 2020-02-11 16:09:08
        version: v0.9.0
        revision: ea556fc18740
      properties:
        apiVersions:
          additionalProperties:
            additionalProperties:
              $ref: "#/components/schemas/apiVersion"
            type: object
          type: object
        buildDate:
          example: 2020-02-11 16:09:08
          type: string
        capabilities:
          items:
            type: string
          type: array
        revision:
          example: ea556fc18740
          type: string
        runtimeVersion:
          example: go1.13.5
          type: string
        version:
          example: v0.9.0
          type: string
      type: object
    versionInfo:
      example:
        os: os
        arch: arch
        buildDate: buildDate
        version: version
        revision: revision
      properties:
        arch:
          type: string
        buildDate:
          type: string
        os:
          type: string
        revision:
          type: string
        version:
          type: string
      required:
      - arch
      - buildDate
      - os
      - revision
      - version
      type: object
    configDetail_allOf_data:
      description: The data section of a config is based on the schema of its type
      example: {}
      properties: {}
      type: object
    controllerSettings_oidc:
      example:
        redirectUris:
        - redirectUris
        - redirectUris
        postLogoutUris:
        - postLogoutUris
        - postLogoutUris
      properties:
        postLogoutUris:
          items:
            type: string
          type: array
        redirectUris:
          items:
            type: string
          type: array
      type: object
    identityAuthenticators_cert:
      example:
        fingerprint: fingerprint
        id: id
      properties:
        fingerprint:
          type: string
        id:
          type: string
      type: object
    identityAuthenticators_updb:
      example:
        id: id
        username: username
      properties:
        id:
          type: string
        username:
          type: string
      type: object
    identityCreate_enrollment:
      properties:
        ott:
          type: boolean
        ottca:
          type: string
        updb:
          type: string
      type: object
    identityEnrollments_ott:
      example:
        jwt: jwt
        id: id
        expiresAt: 2000-01-23T04:56:07.000+00:00
        token: token
      properties:
        expiresAt:
          format: date-time
          type: string
        id:
          type: string
        jwt:
          type: string
        token:
          type: string
      type: object
    identityEnrollments_ottca:
      example:
        jwt: jwt
        caId: caId
        id: id
        ca:
          _links:
            key:
              method: method
              comment: comment
              href: https://openapi-generator.tech
          name: name
          id: id
          entity: entity
        expiresAt: 2000-01-23T04:56:07.000+00:00
        token: token
      properties:
        ca:
          $ref: "#/components/schemas/entityRef"
        caId:
          type: string
        expiresAt:
          format: date-time
          type: string
        id:
          type: string
        jwt:
          type: string
        token:
          type: string
      type: object
  securitySchemes:
    oauth2:
      flows:
        authorizationCode:
          authorizationUrl: /oidc/authorize
          scopes:
            openid: openid
          tokenUrl: /oidc/token
      type: oauth2
    ztSession:
      description: An API Key that is provided post authentication
      in: header
      name: zt-session
      type: apiKey
x-original-swagger-version: "2.0"

